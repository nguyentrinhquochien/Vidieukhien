

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 02 07:59:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	strings
   289  0003                     __pstrings:
   290  0003                     stringtab:
   291  0003                     __stringtab:
   292  0003                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  0003                     stringdir:
   296  0003  3000               	movlw	high stringdir
   297  0004  008A               	movwf	10
   298  0005  0804               	movf	4,w
   299  0006  0A84               	incf	4,f
   300  0007  0782               	addwf	2,f
   301  0008                     __stringbase:
   302  0008  3400               	retlw	0
   303  0009                     __end_of__stringtab:
   304  0009                     _cgram_dat:
   305  0009  340E               	retlw	14
   306  000A  3409               	retlw	9
   307  000B  3409               	retlw	9
   308  000C  341D               	retlw	29
   309  000D  3409               	retlw	9
   310  000E  3409               	retlw	9
   311  000F  340E               	retlw	14
   312  0010  3400               	retlw	0
   313  0011  340C               	retlw	12
   314  0012  3412               	retlw	18
   315  0013  340C               	retlw	12
   316  0014  341E               	retlw	30
   317  0015  3410               	retlw	16
   318  0016  341E               	retlw	30
   319  0017  3404               	retlw	4
   320  0018  3400               	retlw	0
   321  0019  340C               	retlw	12
   322  001A  3402               	retlw	2
   323  001B  3405               	retlw	5
   324  001C  3412               	retlw	18
   325  001D  3412               	retlw	18
   326  001E  3412               	retlw	18
   327  001F  340C               	retlw	12
   328  0020  3400               	retlw	0
   329  0021  3499               	retlw	153
   330  0022                     __end_of_cgram_dat:
   331  0022                     _dat_line2:
   332  0022  3471               	retlw	113
   333  0023                     __end_of_dat_line2:
   334  0023                     _dat_line1:
   335  0023  3400               	retlw	0
   336  0024                     __end_of_dat_line1:
   337  0044                     _RD4	set	68
   338  0045                     _RD5	set	69
   339  0046                     _RD6	set	70
   340  0047                     _RD7	set	71
   341  0043                     _RD3	set	67
   342  0041                     _RD1	set	65
   343  0042                     _RD2	set	66
   344  0442                     _TRISD2	set	1090
   345  0441                     _TRISD1	set	1089
   346  0443                     _TRISD3	set	1091
   347  0447                     _TRISD7	set	1095
   348  0446                     _TRISD6	set	1094
   349  0445                     _TRISD5	set	1093
   350  0444                     _TRISD4	set	1092
   351                           
   352                           	psect	cinit
   353  07FC                     start_initialization:	
   354                           ; #config settings
   355                           
   356  07FC                     __initialization:
   357  07FC                     end_of_initialization:	
   358                           ;End of C runtime variable initialization code
   359                           
   360  07FC                     __end_of__initialization:
   361  07FC  0183               	clrf	3
   362  07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   363                           
   364                           	psect	cstackCOMMON
   365  0070                     __pcstackCOMMON:
   366  0070                     ?_lcd_init:
   367  0070                     ?_lcd_busy:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_lcd_busy:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_lcd_putc:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_lcd_puts:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_lcd_put_nibble:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ??_lcd_put_nibble:	
   386                           ; 1 bytes @ 0x0
   387                           
   388                           
   389                           ; 1 bytes @ 0x0
   390  0070                     	ds	1
   391  0071                     lcd_busy@busy:
   392  0071                     lcd_put_nibble@b:	
   393                           ; 1 bytes @ 0x1
   394                           
   395                           
   396                           ; 1 bytes @ 0x1
   397  0071                     	ds	1
   398  0072                     lcd_put_nibble@temp:
   399                           
   400                           ; 1 bytes @ 0x2
   401  0072                     	ds	1
   402  0073                     ?_lcd_put_byte:
   403  0073                     lcd_put_byte@b:	
   404                           ; 1 bytes @ 0x3
   405                           
   406                           
   407                           ; 1 bytes @ 0x3
   408  0073                     	ds	1
   409  0074                     ??_lcd_put_byte:
   410                           
   411                           ; 1 bytes @ 0x4
   412  0074                     	ds	1
   413  0075                     lcd_put_byte@rs:
   414                           
   415                           ; 1 bytes @ 0x5
   416  0075                     	ds	1
   417  0076                     ??_lcd_init:
   418  0076                     ?_lcd_gotoxy:	
   419                           ; 1 bytes @ 0x6
   420                           
   421  0076                     lcd_gotoxy@row:	
   422                           ; 1 bytes @ 0x6
   423                           
   424                           
   425                           ; 1 bytes @ 0x6
   426  0076                     	ds	1
   427  0077                     ??_lcd_gotoxy:
   428                           
   429                           ; 1 bytes @ 0x7
   430  0077                     	ds	1
   431  0078                     lcd_gotoxy@col:
   432                           
   433                           ; 1 bytes @ 0x8
   434  0078                     	ds	1
   435  0079                     lcd_gotoxy@address:
   436                           
   437                           ; 1 bytes @ 0x9
   438  0079                     	ds	1
   439  007A                     ??_lcd_putc:
   440                           
   441                           ; 1 bytes @ 0xA
   442  007A                     	ds	2
   443  007C                     lcd_putc@c:
   444                           
   445                           ; 1 bytes @ 0xC
   446  007C                     	ds	1
   447  007D                     ??_lcd_puts:
   448                           
   449                           ; 1 bytes @ 0xD
   450  007D                     	ds	1
   451                           
   452                           	psect	cstackBANK0
   453  0020                     __pcstackBANK0:
   454  0020                     lcd_puts@s:
   455                           
   456                           ; 1 bytes @ 0x0
   457  0020                     	ds	1
   458  0021                     ??_main:
   459                           
   460                           ; 1 bytes @ 0x1
   461  0021                     	ds	1
   462  0022                     main@i:
   463                           
   464                           ; 1 bytes @ 0x2
   465  0022                     	ds	1
   466                           
   467                           	psect	maintext
   468  06D1                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 30 in file "MSSvcosdau.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  i               1    2[BANK0 ] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       1       0       0       0
   490 ;;      Temps:          0       1       0       0       0
   491 ;;      Totals:         0       2       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels required when called: 5
   494 ;; This function calls:
   495 ;;		_lcd_busy
   496 ;;		_lcd_gotoxy
   497 ;;		_lcd_init
   498 ;;		_lcd_put_byte
   499 ;;		_lcd_putc
   500 ;;		_lcd_puts
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _main
   508  06D1                     _main:
   509  06D1                     l1146:	
   510                           ;incstack = 0
   511                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;MSSvcosdau.c: 32:     unsigned char i;;MSSvcosdau.c: 33:    lcd_init();
   515  06D1  120A  118A  2759  120A  118A  	fcall	_lcd_init
   516  06D6                     l1148:
   517                           
   518                           ;MSSvcosdau.c: 34:    i = 0;
   519  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   520  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   521  06D8  01A2               	clrf	main@i
   522  06D9                     l1150:
   523                           
   524                           ;MSSvcosdau.c: 35:     lcd_put_byte(0,0x40);
   525  06D9  3040               	movlw	64
   526  06DA  00A1               	movwf	??_main
   527  06DB  0821               	movf	??_main,w
   528  06DC  00F3               	movwf	lcd_put_byte@b
   529  06DD  3000               	movlw	0
   530  06DE  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   531  06E3                     l1152:	
   532                           ;MSSvcosdau.c: 36:     while(lcd_busy());
   533                           
   534  06E3  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   535  06E8  3A00               	xorlw	0
   536  06E9  1D03               	skipz
   537  06EA  2EEC               	goto	u591
   538  06EB  2EED               	goto	u590
   539  06EC                     u591:
   540  06EC  2EE3               	goto	l1152
   541  06ED                     u590:
   542  06ED  2F0F               	goto	l1160
   543  06EE                     l1154:
   544                           
   545                           ;MSSvcosdau.c: 38:     {;MSSvcosdau.c: 39:         lcd_put_byte(1,cgram_dat[i]);
   546  06EE  0822               	movf	main@i,w
   547  06EF  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   548  06F0  0084               	movwf	4
   549  06F1  120A  118A  2003  120A  118A  	fcall	stringdir
   550  06F6  00A1               	movwf	??_main
   551  06F7  0821               	movf	??_main,w
   552  06F8  00F3               	movwf	lcd_put_byte@b
   553  06F9  3001               	movlw	1
   554  06FA  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   555  06FF                     l1156:	
   556                           ;MSSvcosdau.c: 40:         while(lcd_busy());
   557                           
   558  06FF  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   559  0704  3A00               	xorlw	0
   560  0705  1D03               	skipz
   561  0706  2F08               	goto	u601
   562  0707  2F09               	goto	u600
   563  0708                     u601:
   564  0708  2EFF               	goto	l1156
   565  0709                     u600:
   566  0709                     l1158:
   567                           
   568                           ;MSSvcosdau.c: 41:         i++;
   569  0709  3001               	movlw	1
   570  070A  1283               	bcf	3,5	;RP0=0, select bank0
   571  070B  1303               	bcf	3,6	;RP1=0, select bank0
   572  070C  00A1               	movwf	??_main
   573  070D  0821               	movf	??_main,w
   574  070E  07A2               	addwf	main@i,f
   575  070F                     l1160:
   576                           
   577                           ;MSSvcosdau.c: 37:     while(cgram_dat[i]!=0x99)
   578  070F  1283               	bcf	3,5	;RP0=0, select bank0
   579  0710  1303               	bcf	3,6	;RP1=0, select bank0
   580  0711  0822               	movf	main@i,w
   581  0712  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   582  0713  0084               	movwf	4
   583  0714  120A  118A  2003  120A  118A  	fcall	stringdir
   584  0719  3A99               	xorlw	153
   585  071A  1D03               	skipz
   586  071B  2F1D               	goto	u611
   587  071C  2F1E               	goto	u610
   588  071D                     u611:
   589  071D  2EEE               	goto	l1154
   590  071E                     u610:
   591  071E                     l1162:
   592                           
   593                           ;MSSvcosdau.c: 43: lcd_gotoxy(0,0);
   594  071E  01F6               	clrf	lcd_gotoxy@row
   595  071F  3000               	movlw	0
   596  0720  120A  118A  25A2  120A  118A  	fcall	_lcd_gotoxy
   597  0725                     l1164:
   598                           
   599                           ;MSSvcosdau.c: 44: lcd_putc('\f');
   600  0725  300C               	movlw	12
   601  0726  120A  118A  2675  120A  118A  	fcall	_lcd_putc
   602  072B                     l1166:
   603                           
   604                           ;MSSvcosdau.c: 45: lcd_puts(dat_line1);
   605  072B  301B               	movlw	(low ((_dat_line1-__stringbase)| (0+32768)))& (0+255)
   606  072C  120A  118A  257F  120A  118A  	fcall	_lcd_puts
   607                           
   608                           ;MSSvcosdau.c: 46: lcd_gotoxy(2,1);
   609  0731  01F6               	clrf	lcd_gotoxy@row
   610  0732  0AF6               	incf	lcd_gotoxy@row,f
   611  0733  3002               	movlw	2
   612  0734  120A  118A  25A2  120A  118A  	fcall	_lcd_gotoxy
   613  0739                     l1168:
   614                           
   615                           ;MSSvcosdau.c: 47: for(i=0;i<=9;i++)
   616  0739  1283               	bcf	3,5	;RP0=0, select bank0
   617  073A  1303               	bcf	3,6	;RP1=0, select bank0
   618  073B  01A2               	clrf	main@i
   619  073C                     l1174:
   620                           
   621                           ;MSSvcosdau.c: 48:     {;MSSvcosdau.c: 49:         lcd_putc(dat_line2[i]);
   622  073C  0822               	movf	main@i,w
   623  073D  3E1A               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
   624  073E  0084               	movwf	4
   625  073F  120A  118A  2003  120A  118A  	fcall	stringdir
   626  0744  120A  118A  2675  120A  118A  	fcall	_lcd_putc
   627  0749                     l1176:
   628                           
   629                           ;MSSvcosdau.c: 50:     }
   630  0749  3001               	movlw	1
   631  074A  1283               	bcf	3,5	;RP0=0, select bank0
   632  074B  1303               	bcf	3,6	;RP1=0, select bank0
   633  074C  00A1               	movwf	??_main
   634  074D  0821               	movf	??_main,w
   635  074E  07A2               	addwf	main@i,f
   636  074F                     l1178:
   637  074F  300A               	movlw	10
   638  0750  0222               	subwf	main@i,w
   639  0751  1C03               	skipc
   640  0752  2F54               	goto	u621
   641  0753  2F55               	goto	u620
   642  0754                     u621:
   643  0754  2F3C               	goto	l1174
   644  0755                     u620:
   645  0755                     l34:	
   646                           ;MSSvcosdau.c: 51: while(1);
   647                           
   648  0755  2F55               	goto	l34
   649  0756  120A  118A  2800   	ljmp	start
   650  0759                     __end_of_main:
   651                           
   652                           	psect	text1
   653  057F                     __ptext1:	
   654 ;; *************** function _lcd_puts *****************
   655 ;; Defined at:
   656 ;;		line 224 in file "lcd.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  s               1    wreg     PTR const unsigned char 
   659 ;;		 -> dat_line1(1), 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   662 ;;		 -> dat_line1(1), 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       1       0       0       0
   674 ;;      Temps:          1       0       0       0       0
   675 ;;      Totals:         1       1       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 4
   679 ;; This function calls:
   680 ;;		_lcd_putc
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _lcd_puts
   688  057F                     _lcd_puts:
   689                           
   690                           ;incstack = 0
   691                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   692                           ;lcd_puts@s stored from wreg
   693  057F  1283               	bcf	3,5	;RP0=0, select bank0
   694  0580  1303               	bcf	3,6	;RP1=0, select bank0
   695  0581  00A0               	movwf	lcd_puts@s
   696  0582                     l1134:
   697                           
   698                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   699  0582  2D95               	goto	l1140
   700  0583                     l1136:
   701                           
   702                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   703  0583  0820               	movf	lcd_puts@s,w
   704  0584  0084               	movwf	4
   705  0585  120A  118A  2003  120A  118A  	fcall	stringdir
   706  058A  120A  118A  2675  120A  118A  	fcall	_lcd_putc
   707  058F                     l1138:
   708  058F  3001               	movlw	1
   709  0590  00FD               	movwf	??_lcd_puts
   710  0591  087D               	movf	??_lcd_puts,w
   711  0592  1283               	bcf	3,5	;RP0=0, select bank0
   712  0593  1303               	bcf	3,6	;RP1=0, select bank0
   713  0594  07A0               	addwf	lcd_puts@s,f
   714  0595                     l1140:
   715                           
   716                           ;lcd.c: 229:  while(*s)
   717  0595  0820               	movf	lcd_puts@s,w
   718  0596  0084               	movwf	4
   719  0597  120A  118A  2003  120A  118A  	fcall	stringdir
   720  059C  3A00               	xorlw	0
   721  059D  1D03               	skipz
   722  059E  2DA0               	goto	u581
   723  059F  2DA1               	goto	u580
   724  05A0                     u581:
   725  05A0  2D83               	goto	l1136
   726  05A1                     u580:
   727  05A1                     l115:
   728  05A1  0008               	return
   729  05A2                     __end_of_lcd_puts:
   730                           
   731                           	psect	text2
   732  0675                     __ptext2:	
   733 ;; *************** function _lcd_putc *****************
   734 ;; Defined at:
   735 ;;		line 190 in file "lcd.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  c               1    wreg     unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  c               1   12[COMMON] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         1       0       0       0       0
   751 ;;      Temps:          2       0       0       0       0
   752 ;;      Totals:         3       0       0       0       0
   753 ;;Total ram usage:        3 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 3
   756 ;; This function calls:
   757 ;;		_lcd_busy
   758 ;;		_lcd_gotoxy
   759 ;;		_lcd_put_byte
   760 ;; This function is called by:
   761 ;;		_main
   762 ;;		_lcd_puts
   763 ;;		_lcd_String_Delay
   764 ;;		_putch
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _lcd_putc
   770  0675                     _lcd_putc:
   771                           
   772                           ;incstack = 0
   773                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   774                           ;lcd_putc@c stored from wreg
   775  0675  00FC               	movwf	lcd_putc@c
   776  0676                     l1074:
   777                           
   778                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   779  0676  2EBD               	goto	l1090
   780  0677                     l1076:
   781                           
   782                           ;lcd.c: 198:    lcd_put_byte(0,1);
   783  0677  01F3               	clrf	lcd_put_byte@b
   784  0678  0AF3               	incf	lcd_put_byte@b,f
   785  0679  3000               	movlw	0
   786  067A  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   787  067F                     l1078:	
   788                           ;lcd.c: 199:    while(lcd_busy());
   789                           
   790  067F  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   791  0684  3A00               	xorlw	0
   792  0685  1D03               	skipz
   793  0686  2E88               	goto	u501
   794  0687  2E89               	goto	u500
   795  0688                     u501:
   796  0688  2E7F               	goto	l1078
   797  0689                     u500:
   798  0689  2ED0               	goto	l109
   799  068A                     l1080:
   800                           
   801                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   802  068A  01F6               	clrf	lcd_gotoxy@row
   803  068B  0AF6               	incf	lcd_gotoxy@row,f
   804  068C  3000               	movlw	0
   805  068D  120A  118A  25A2  120A  118A  	fcall	_lcd_gotoxy
   806                           
   807                           ;lcd.c: 203:    break;
   808  0692  2ED0               	goto	l109
   809  0693                     l1082:
   810                           
   811                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   812  0693  3010               	movlw	16
   813  0694  00FA               	movwf	??_lcd_putc
   814  0695  087A               	movf	??_lcd_putc,w
   815  0696  00F3               	movwf	lcd_put_byte@b
   816  0697  3000               	movlw	0
   817  0698  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   818  069D                     l1084:	
   819                           ;lcd.c: 206:    while(lcd_busy());
   820                           
   821  069D  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   822  06A2  3A00               	xorlw	0
   823  06A3  1D03               	skipz
   824  06A4  2EA6               	goto	u511
   825  06A5  2EA7               	goto	u510
   826  06A6                     u511:
   827  06A6  2E9D               	goto	l1084
   828  06A7                     u510:
   829  06A7  2ED0               	goto	l109
   830  06A8                     l1086:
   831                           
   832                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   833  06A8  087C               	movf	lcd_putc@c,w
   834  06A9  00FA               	movwf	??_lcd_putc
   835  06AA  087A               	movf	??_lcd_putc,w
   836  06AB  00F3               	movwf	lcd_put_byte@b
   837  06AC  3001               	movlw	1
   838  06AD  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   839  06B2                     l1088:	
   840                           ;lcd.c: 212:     while(lcd_busy());
   841                           
   842  06B2  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   843  06B7  3A00               	xorlw	0
   844  06B8  1D03               	skipz
   845  06B9  2EBB               	goto	u521
   846  06BA  2EBC               	goto	u520
   847  06BB                     u521:
   848  06BB  2EB2               	goto	l1088
   849  06BC                     u520:
   850  06BC  2ED0               	goto	l109
   851  06BD                     l1090:
   852  06BD  087C               	movf	lcd_putc@c,w
   853  06BE  00FA               	movwf	??_lcd_putc
   854  06BF  01FB               	clrf	??_lcd_putc+1
   855                           
   856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   857                           ; Switch size 1, requested type "simple"
   858                           ; Number of cases is 1, Range of values is 0 to 0
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte            4     3 (average)
   862                           ; direct_byte           11     8 (fixed)
   863                           ; jumptable            260     6 (fixed)
   864                           ;	Chosen strategy is simple_byte
   865  06C0  087B               	movf	??_lcd_putc+1,w
   866  06C1  3A00               	xorlw	0	; case 0
   867  06C2  1903               	skipnz
   868  06C3  2EC5               	goto	l1230
   869  06C4  2EA8               	goto	l1086
   870  06C5                     l1230:
   871                           
   872                           ; Switch size 1, requested type "simple"
   873                           ; Number of cases is 3, Range of values is 8 to 12
   874                           ; switch strategies available:
   875                           ; Name         Instructions Cycles
   876                           ; simple_byte           10     6 (average)
   877                           ; direct_byte           26    11 (fixed)
   878                           ; jumptable            263     9 (fixed)
   879                           ;	Chosen strategy is simple_byte
   880  06C5  087A               	movf	??_lcd_putc,w
   881  06C6  3A08               	xorlw	8	; case 8
   882  06C7  1903               	skipnz
   883  06C8  2E93               	goto	l1082
   884  06C9  3A02               	xorlw	2	; case 10
   885  06CA  1903               	skipnz
   886  06CB  2E8A               	goto	l1080
   887  06CC  3A06               	xorlw	6	; case 12
   888  06CD  1903               	skipnz
   889  06CE  2E77               	goto	l1076
   890  06CF  2EA8               	goto	l1086
   891  06D0                     l109:
   892  06D0  0008               	return
   893  06D1                     __end_of_lcd_putc:
   894                           
   895                           	psect	text3
   896  05A2                     __ptext3:	
   897 ;; *************** function _lcd_gotoxy *****************
   898 ;; Defined at:
   899 ;;		line 167 in file "lcd.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  col             1    wreg     unsigned char 
   902 ;;  row             1    6[COMMON] unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  col             1    8[COMMON] unsigned char 
   905 ;;  address         1    9[COMMON] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         1       0       0       0       0
   916 ;;      Locals:         2       0       0       0       0
   917 ;;      Temps:          1       0       0       0       0
   918 ;;      Totals:         4       0       0       0       0
   919 ;;Total ram usage:        4 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 2
   922 ;; This function calls:
   923 ;;		_lcd_busy
   924 ;;		_lcd_put_byte
   925 ;; This function is called by:
   926 ;;		_main
   927 ;;		_lcd_putc
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _lcd_gotoxy
   933  05A2                     _lcd_gotoxy:
   934                           
   935                           ;incstack = 0
   936                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
   937                           ;lcd_gotoxy@col stored from wreg
   938  05A2  00F8               	movwf	lcd_gotoxy@col
   939  05A3                     l1062:
   940                           
   941                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   942  05A3  0876               	movf	lcd_gotoxy@row,w
   943  05A4  1903               	btfsc	3,2
   944  05A5  2DA7               	goto	u481
   945  05A6  2DA8               	goto	u480
   946  05A7                     u481:
   947  05A7  2DAD               	goto	l1066
   948  05A8                     u480:
   949  05A8                     l1064:
   950                           
   951                           ;lcd.c: 174:   address=0x40;
   952  05A8  3040               	movlw	64
   953  05A9  00F7               	movwf	??_lcd_gotoxy
   954  05AA  0877               	movf	??_lcd_gotoxy,w
   955  05AB  00F9               	movwf	lcd_gotoxy@address
   956  05AC  2DAE               	goto	l1068
   957  05AD                     l1066:
   958                           
   959                           ;lcd.c: 176:   address=0;
   960  05AD  01F9               	clrf	lcd_gotoxy@address
   961  05AE                     l1068:
   962                           
   963                           ;lcd.c: 178:  address += col;
   964  05AE  0878               	movf	lcd_gotoxy@col,w
   965  05AF  00F7               	movwf	??_lcd_gotoxy
   966  05B0  0877               	movf	??_lcd_gotoxy,w
   967  05B1  07F9               	addwf	lcd_gotoxy@address,f
   968  05B2                     l1070:
   969                           
   970                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   971  05B2  0879               	movf	lcd_gotoxy@address,w
   972  05B3  3880               	iorlw	128
   973  05B4  00F7               	movwf	??_lcd_gotoxy
   974  05B5  0877               	movf	??_lcd_gotoxy,w
   975  05B6  00F3               	movwf	lcd_put_byte@b
   976  05B7  3000               	movlw	0
   977  05B8  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   978  05BD                     l1072:	
   979                           ;lcd.c: 181:  while(lcd_busy());
   980                           
   981  05BD  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   982  05C2  3A00               	xorlw	0
   983  05C3  1D03               	skipz
   984  05C4  2DC6               	goto	u491
   985  05C5  2DC7               	goto	u490
   986  05C6                     u491:
   987  05C6  2DBD               	goto	l1072
   988  05C7                     u490:
   989  05C7                     l91:
   990  05C7  0008               	return
   991  05C8                     __end_of_lcd_gotoxy:
   992                           
   993                           	psect	text4
   994  0759                     __ptext4:	
   995 ;; *************** function _lcd_init *****************
   996 ;; Defined at:
   997 ;;		line 241 in file "lcd.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  i               1    0        unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          2       0       0       0       0
  1014 ;;      Totals:         2       0       0       0       0
  1015 ;;Total ram usage:        2 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 2
  1018 ;; This function calls:
  1019 ;;		_lcd_busy
  1020 ;;		_lcd_put_byte
  1021 ;;		_lcd_put_nibble
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _lcd_init
  1029  0759                     _lcd_init:
  1030  0759                     l1096:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1033                           
  1034                           
  1035                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1036  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1037  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1038  075B  1188               	bcf	8,3	;volatile
  1039                           
  1040                           ;lcd.c: 248:  TRISD1 = 0;
  1041  075C  1088               	bcf	8,1	;volatile
  1042                           
  1043                           ;lcd.c: 249:  TRISD2 = 0;
  1044  075D  1108               	bcf	8,2	;volatile
  1045                           
  1046                           ;lcd.c: 250:  TRISD4 = 0;
  1047  075E  1208               	bcf	8,4	;volatile
  1048                           
  1049                           ;lcd.c: 251:  TRISD5 = 0;
  1050  075F  1288               	bcf	8,5	;volatile
  1051                           
  1052                           ;lcd.c: 252:  TRISD6 = 0;
  1053  0760  1308               	bcf	8,6	;volatile
  1054                           
  1055                           ;lcd.c: 253:  TRISD7 = 0;
  1056  0761  1388               	bcf	8,7	;volatile
  1057  0762                     l1098:
  1058                           
  1059                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1060  0762  3014               	movlw	20
  1061  0763  00F7               	movwf	??_lcd_init+1
  1062  0764  3079               	movlw	121
  1063  0765  00F6               	movwf	??_lcd_init
  1064  0766                     u667:
  1065  0766  0BF6               	decfsz	??_lcd_init,f
  1066  0767  2F66               	goto	u667
  1067  0768  0BF7               	decfsz	??_lcd_init+1,f
  1068  0769  2F66               	goto	u667
  1069  076A  2F6B               	nop2
  1070  076B                     l1100:
  1071                           
  1072                           ;lcd.c: 257:  RD1 = 0;
  1073  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1074  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1075  076D  1088               	bcf	8,1	;volatile
  1076  076E                     l1102:
  1077                           
  1078                           ;lcd.c: 258:  RD2 = 0;
  1079  076E  1108               	bcf	8,2	;volatile
  1080  076F                     l1104:
  1081                           
  1082                           ;lcd.c: 259:  RD3 = 0;
  1083  076F  1188               	bcf	8,3	;volatile
  1084  0770                     l1106:
  1085                           
  1086                           ;lcd.c: 261:  lcd_put_nibble(3);
  1087  0770  3003               	movlw	3
  1088  0771  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1089  0776                     l1108:
  1090                           
  1091                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1092  0776  300D               	movlw	13
  1093  0777  00F7               	movwf	??_lcd_init+1
  1094  0778  30FB               	movlw	251
  1095  0779  00F6               	movwf	??_lcd_init
  1096  077A                     u677:
  1097  077A  0BF6               	decfsz	??_lcd_init,f
  1098  077B  2F7A               	goto	u677
  1099  077C  0BF7               	decfsz	??_lcd_init+1,f
  1100  077D  2F7A               	goto	u677
  1101  077E  2F7F               	nop2
  1102                           
  1103                           ;lcd.c: 263:  lcd_put_nibble(3);
  1104  077F  3003               	movlw	3
  1105  0780  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1106  0785                     l1110:
  1107                           
  1108                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1109  0785  300D               	movlw	13
  1110  0786  00F7               	movwf	??_lcd_init+1
  1111  0787  30FB               	movlw	251
  1112  0788  00F6               	movwf	??_lcd_init
  1113  0789                     u687:
  1114  0789  0BF6               	decfsz	??_lcd_init,f
  1115  078A  2F89               	goto	u687
  1116  078B  0BF7               	decfsz	??_lcd_init+1,f
  1117  078C  2F89               	goto	u687
  1118  078D  2F8E               	nop2
  1119  078E                     l1112:
  1120                           
  1121                           ;lcd.c: 265:  lcd_put_nibble(3);
  1122  078E  3003               	movlw	3
  1123  078F  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1124                           
  1125                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1126  0794  300D               	movlw	13
  1127  0795  00F7               	movwf	??_lcd_init+1
  1128  0796  30FB               	movlw	251
  1129  0797  00F6               	movwf	??_lcd_init
  1130  0798                     u697:
  1131  0798  0BF6               	decfsz	??_lcd_init,f
  1132  0799  2F98               	goto	u697
  1133  079A  0BF7               	decfsz	??_lcd_init+1,f
  1134  079B  2F98               	goto	u697
  1135  079C  2F9D               	nop2
  1136  079D                     l1114:
  1137                           
  1138                           ;lcd.c: 268:  lcd_put_nibble(2);
  1139  079D  3002               	movlw	2
  1140  079E  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1141  07A3                     l1116:	
  1142                           ;lcd.c: 269:  while(lcd_busy());
  1143                           
  1144  07A3  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1145  07A8  3A00               	xorlw	0
  1146  07A9  1D03               	skipz
  1147  07AA  2FAC               	goto	u531
  1148  07AB  2FAD               	goto	u530
  1149  07AC                     u531:
  1150  07AC  2FA3               	goto	l1116
  1151  07AD                     u530:
  1152  07AD                     l1118:
  1153                           
  1154                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1155  07AD  3028               	movlw	40
  1156  07AE  00F6               	movwf	??_lcd_init
  1157  07AF  0876               	movf	??_lcd_init,w
  1158  07B0  00F3               	movwf	lcd_put_byte@b
  1159  07B1  3000               	movlw	0
  1160  07B2  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1161  07B7                     l1120:	
  1162                           ;lcd.c: 272:  while(lcd_busy());
  1163                           
  1164  07B7  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1165  07BC  3A00               	xorlw	0
  1166  07BD  1D03               	skipz
  1167  07BE  2FC0               	goto	u541
  1168  07BF  2FC1               	goto	u540
  1169  07C0                     u541:
  1170  07C0  2FB7               	goto	l1120
  1171  07C1                     u540:
  1172  07C1                     l1122:
  1173                           
  1174                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1175  07C1  300C               	movlw	12
  1176  07C2  00F6               	movwf	??_lcd_init
  1177  07C3  0876               	movf	??_lcd_init,w
  1178  07C4  00F3               	movwf	lcd_put_byte@b
  1179  07C5  3000               	movlw	0
  1180  07C6  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1181  07CB                     l1124:	
  1182                           ;lcd.c: 275:  while(lcd_busy());
  1183                           
  1184  07CB  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1185  07D0  3A00               	xorlw	0
  1186  07D1  1D03               	skipz
  1187  07D2  2FD4               	goto	u551
  1188  07D3  2FD5               	goto	u550
  1189  07D4                     u551:
  1190  07D4  2FCB               	goto	l1124
  1191  07D5                     u550:
  1192  07D5                     l1126:
  1193                           
  1194                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1195  07D5  01F3               	clrf	lcd_put_byte@b
  1196  07D6  0AF3               	incf	lcd_put_byte@b,f
  1197  07D7  3000               	movlw	0
  1198  07D8  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1199  07DD                     l1128:	
  1200                           ;lcd.c: 278:  while(lcd_busy());
  1201                           
  1202  07DD  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1203  07E2  3A00               	xorlw	0
  1204  07E3  1D03               	skipz
  1205  07E4  2FE6               	goto	u561
  1206  07E5  2FE7               	goto	u560
  1207  07E6                     u561:
  1208  07E6  2FDD               	goto	l1128
  1209  07E7                     u560:
  1210  07E7                     l1130:
  1211                           
  1212                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1213  07E7  3006               	movlw	6
  1214  07E8  00F6               	movwf	??_lcd_init
  1215  07E9  0876               	movf	??_lcd_init,w
  1216  07EA  00F3               	movwf	lcd_put_byte@b
  1217  07EB  3000               	movlw	0
  1218  07EC  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1219  07F1                     l1132:	
  1220                           ;lcd.c: 281:  while(lcd_busy());
  1221                           
  1222  07F1  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1223  07F6  3A00               	xorlw	0
  1224  07F7  1D03               	skipz
  1225  07F8  2FFA               	goto	u571
  1226  07F9  2FFB               	goto	u570
  1227  07FA                     u571:
  1228  07FA  2FF1               	goto	l1132
  1229  07FB                     u570:
  1230  07FB                     l133:
  1231  07FB  0008               	return
  1232  07FC                     __end_of_lcd_init:
  1233                           
  1234                           	psect	text5
  1235  05F8                     __ptext5:	
  1236 ;; *************** function _lcd_put_byte *****************
  1237 ;; Defined at:
  1238 ;;		line 134 in file "lcd.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  rs              1    wreg     unsigned char 
  1241 ;;  b               1    3[COMMON] unsigned char 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  rs              1    5[COMMON] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         1       0       0       0       0
  1254 ;;      Locals:         1       0       0       0       0
  1255 ;;      Temps:          1       0       0       0       0
  1256 ;;      Totals:         3       0       0       0       0
  1257 ;;Total ram usage:        3 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 1
  1260 ;; This function calls:
  1261 ;;		_lcd_put_nibble
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;;		_lcd_gotoxy
  1265 ;;		_lcd_putc
  1266 ;;		_lcd_init
  1267 ;;		_lcd_ShiftLeft
  1268 ;;		_lcd_ShiftRight
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _lcd_put_byte
  1274  05F8                     _lcd_put_byte:
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1278                           ;lcd_put_byte@rs stored from wreg
  1279  05F8  00F5               	movwf	lcd_put_byte@rs
  1280  05F9                     l1024:
  1281                           
  1282                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1283  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  1284  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  1285  05FB  1208               	bcf	8,4	;volatile
  1286                           
  1287                           ;lcd.c: 140:  TRISD5 = 0;
  1288  05FC  1288               	bcf	8,5	;volatile
  1289                           
  1290                           ;lcd.c: 141:  TRISD6 = 0;
  1291  05FD  1308               	bcf	8,6	;volatile
  1292                           
  1293                           ;lcd.c: 142:  TRISD7 = 0;
  1294  05FE  1388               	bcf	8,7	;volatile
  1295  05FF                     l1026:
  1296                           
  1297                           ;lcd.c: 144:  if(rs)
  1298  05FF  0875               	movf	lcd_put_byte@rs,w
  1299  0600  1903               	btfsc	3,2
  1300  0601  2E03               	goto	u461
  1301  0602  2E04               	goto	u460
  1302  0603                     u461:
  1303  0603  2E08               	goto	l81
  1304  0604                     u460:
  1305  0604                     l1028:
  1306                           
  1307                           ;lcd.c: 145:   RD1 = 1;
  1308  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0606  1488               	bsf	8,1	;volatile
  1311  0607  2E0B               	goto	l1030
  1312  0608                     l81:	
  1313                           ;lcd.c: 146:  else
  1314                           
  1315                           
  1316                           ;lcd.c: 147:   RD1 = 0;
  1317  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1319  060A  1088               	bcf	8,1	;volatile
  1320  060B                     l1030:
  1321                           
  1322                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1323  060B  3006               	movlw	6
  1324  060C  00F4               	movwf	??_lcd_put_byte
  1325  060D                     u707:
  1326  060D  0BF4               	decfsz	??_lcd_put_byte,f
  1327  060E  2E0D               	goto	u707
  1328  060F  0000               	nop
  1329  0610                     l1032:
  1330                           
  1331                           ;lcd.c: 150:  RD2 = 0;
  1332  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0612  1108               	bcf	8,2	;volatile
  1335                           
  1336                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1337  0613  3006               	movlw	6
  1338  0614  00F4               	movwf	??_lcd_put_byte
  1339  0615                     u717:
  1340  0615  0BF4               	decfsz	??_lcd_put_byte,f
  1341  0616  2E15               	goto	u717
  1342  0617  0000               	nop
  1343  0618                     l1034:
  1344                           
  1345                           ;lcd.c: 153:  RD3 = 0;
  1346  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1348  061A  1188               	bcf	8,3	;volatile
  1349  061B                     l1036:
  1350                           
  1351                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1352  061B  0873               	movf	lcd_put_byte@b,w
  1353  061C  00F4               	movwf	??_lcd_put_byte
  1354  061D  3004               	movlw	4
  1355  061E                     u475:
  1356  061E  1003               	clrc
  1357  061F  0CF4               	rrf	??_lcd_put_byte,f
  1358  0620  3EFF               	addlw	-1
  1359  0621  1D03               	skipz
  1360  0622  2E1E               	goto	u475
  1361  0623  0874               	movf	??_lcd_put_byte,w
  1362  0624  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1363  0629                     l1038:
  1364                           
  1365                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1366  0629  0873               	movf	lcd_put_byte@b,w
  1367  062A  390F               	andlw	15
  1368  062B  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1369  0630                     l83:
  1370  0630  0008               	return
  1371  0631                     __end_of_lcd_put_byte:
  1372                           
  1373                           	psect	text6
  1374  0631                     __ptext6:	
  1375 ;; *************** function _lcd_put_nibble *****************
  1376 ;; Defined at:
  1377 ;;		line 103 in file "lcd.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  b               1    wreg     unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  b               1    1[COMMON] unsigned char 
  1382 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         2       0       0       0       0
  1394 ;;      Temps:          1       0       0       0       0
  1395 ;;      Totals:         3       0       0       0       0
  1396 ;;Total ram usage:        3 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_lcd_put_byte
  1402 ;;		_lcd_init
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _lcd_put_nibble
  1408  0631                     _lcd_put_nibble:
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _lcd_put_nibble: [wreg]
  1412                           ;lcd_put_nibble@b stored from wreg
  1413  0631  00F1               	movwf	lcd_put_nibble@b
  1414  0632                     l1008:
  1415                           
  1416                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1417  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0634  1208               	bcf	8,4	;volatile
  1420                           
  1421                           ;lcd.c: 110:  TRISD5 = 0;
  1422  0635  1288               	bcf	8,5	;volatile
  1423                           
  1424                           ;lcd.c: 111:  TRISD6 = 0;
  1425  0636  1308               	bcf	8,6	;volatile
  1426                           
  1427                           ;lcd.c: 112:  TRISD7 = 0;
  1428  0637  1388               	bcf	8,7	;volatile
  1429  0638                     l1010:
  1430                           
  1431                           ;lcd.c: 114:  temp.Val = b;
  1432  0638  0871               	movf	lcd_put_nibble@b,w
  1433  0639  00F0               	movwf	??_lcd_put_nibble
  1434  063A  0870               	movf	??_lcd_put_nibble,w
  1435  063B  00F2               	movwf	lcd_put_nibble@temp
  1436  063C                     l1012:
  1437                           
  1438                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1439  063C  1872               	btfsc	lcd_put_nibble@temp,0
  1440  063D  2E3F               	goto	u381
  1441  063E  2E43               	goto	u380
  1442  063F                     u381:
  1443  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0641  1608               	bsf	8,4	;volatile
  1446  0642  2E46               	goto	u394
  1447  0643                     u380:
  1448  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0645  1208               	bcf	8,4	;volatile
  1451  0646                     u394:
  1452  0646                     l1014:
  1453                           
  1454                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1455  0646  18F2               	btfsc	lcd_put_nibble@temp,1
  1456  0647  2E49               	goto	u401
  1457  0648  2E4D               	goto	u400
  1458  0649                     u401:
  1459  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1460  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1461  064B  1688               	bsf	8,5	;volatile
  1462  064C  2E50               	goto	u414
  1463  064D                     u400:
  1464  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1465  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1466  064F  1288               	bcf	8,5	;volatile
  1467  0650                     u414:
  1468  0650                     l1016:
  1469                           
  1470                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1471  0650  1972               	btfsc	lcd_put_nibble@temp,2
  1472  0651  2E53               	goto	u421
  1473  0652  2E57               	goto	u420
  1474  0653                     u421:
  1475  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0655  1708               	bsf	8,6	;volatile
  1478  0656  2E5A               	goto	u434
  1479  0657                     u420:
  1480  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0659  1308               	bcf	8,6	;volatile
  1483  065A                     u434:
  1484  065A                     l1018:
  1485                           
  1486                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1487  065A  19F2               	btfsc	lcd_put_nibble@temp,3
  1488  065B  2E5D               	goto	u441
  1489  065C  2E61               	goto	u440
  1490  065D                     u441:
  1491  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1492  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1493  065F  1788               	bsf	8,7	;volatile
  1494  0660  2E64               	goto	u454
  1495  0661                     u440:
  1496  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0663  1388               	bcf	8,7	;volatile
  1499  0664                     u454:
  1500                           
  1501                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1502  0664  3006               	movlw	6
  1503  0665  00F0               	movwf	??_lcd_put_nibble
  1504  0666                     u727:
  1505  0666  0BF0               	decfsz	??_lcd_put_nibble,f
  1506  0667  2E66               	goto	u727
  1507  0668  0000               	nop
  1508  0669                     l1020:
  1509                           
  1510                           ;lcd.c: 122:  RD3 = 1;
  1511  0669  1283               	bcf	3,5	;RP0=0, select bank0
  1512  066A  1303               	bcf	3,6	;RP1=0, select bank0
  1513  066B  1588               	bsf	8,3	;volatile
  1514                           
  1515                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1516  066C  3006               	movlw	6
  1517  066D  00F0               	movwf	??_lcd_put_nibble
  1518  066E                     u737:
  1519  066E  0BF0               	decfsz	??_lcd_put_nibble,f
  1520  066F  2E6E               	goto	u737
  1521  0670  0000               	nop
  1522  0671                     l1022:
  1523                           
  1524                           ;lcd.c: 124:  RD3 = 0;
  1525  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0673  1188               	bcf	8,3	;volatile
  1528  0674                     l78:
  1529  0674  0008               	return
  1530  0675                     __end_of_lcd_put_nibble:
  1531                           
  1532                           	psect	text7
  1533  05C8                     __ptext7:	
  1534 ;; *************** function _lcd_busy *****************
  1535 ;; Defined at:
  1536 ;;		line 18 in file "lcd.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  busy            1    1[COMMON] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      unsigned char 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         1       0       0       0       0
  1552 ;;      Temps:          1       0       0       0       0
  1553 ;;      Totals:         2       0       0       0       0
  1554 ;;Total ram usage:        2 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;;		_lcd_gotoxy
  1561 ;;		_lcd_putc
  1562 ;;		_lcd_init
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _lcd_busy
  1568  05C8                     _lcd_busy:
  1569  05C8                     l1040:	
  1570                           ;incstack = 0
  1571                           ; Regs used in _lcd_busy: [wreg+status,2]
  1572                           
  1573                           
  1574                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1575  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1576  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1577  05CA  1608               	bsf	8,4	;volatile
  1578                           
  1579                           ;lcd.c: 25:  TRISD5 = 1;
  1580  05CB  1688               	bsf	8,5	;volatile
  1581                           
  1582                           ;lcd.c: 26:  TRISD6 = 1;
  1583  05CC  1708               	bsf	8,6	;volatile
  1584                           
  1585                           ;lcd.c: 27:  TRISD7 = 1;
  1586  05CD  1788               	bsf	8,7	;volatile
  1587                           
  1588                           ;lcd.c: 29:  RD2 = 1;
  1589  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1590  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1591  05D0  1508               	bsf	8,2	;volatile
  1592                           
  1593                           ;lcd.c: 30:  RD1 = 0;
  1594  05D1  1088               	bcf	8,1	;volatile
  1595  05D2                     l1042:
  1596                           
  1597                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1598  05D2  3006               	movlw	6
  1599  05D3  00F0               	movwf	??_lcd_busy
  1600  05D4                     u747:
  1601  05D4  0BF0               	decfsz	??_lcd_busy,f
  1602  05D5  2DD4               	goto	u747
  1603  05D6  0000               	nop
  1604  05D7                     l1044:
  1605                           
  1606                           ;lcd.c: 32:  RD3 = 1;
  1607  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1608  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1609  05D9  1588               	bsf	8,3	;volatile
  1610                           
  1611                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1612  05DA  3006               	movlw	6
  1613  05DB  00F0               	movwf	??_lcd_busy
  1614  05DC                     u757:
  1615  05DC  0BF0               	decfsz	??_lcd_busy,f
  1616  05DD  2DDC               	goto	u757
  1617  05DE  0000               	nop
  1618  05DF                     l1046:
  1619                           
  1620                           ;lcd.c: 35:  busy = RD7;
  1621  05DF  3000               	movlw	0
  1622  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1623  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1624  05E2  1B88               	btfsc	8,7	;volatile
  1625  05E3  3001               	movlw	1
  1626  05E4  00F1               	movwf	lcd_busy@busy
  1627  05E5                     l1048:
  1628                           
  1629                           ;lcd.c: 37:  RD3 = 0;
  1630  05E5  1188               	bcf	8,3	;volatile
  1631  05E6                     l1050:
  1632                           
  1633                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1634  05E6  3006               	movlw	6
  1635  05E7  00F0               	movwf	??_lcd_busy
  1636  05E8                     u767:
  1637  05E8  0BF0               	decfsz	??_lcd_busy,f
  1638  05E9  2DE8               	goto	u767
  1639  05EA  0000               	nop
  1640  05EB                     l1052:
  1641                           
  1642                           ;lcd.c: 39:  RD3 = 1;
  1643  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1644  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1645  05ED  1588               	bsf	8,3	;volatile
  1646  05EE                     l1054:
  1647                           
  1648                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1649  05EE  3006               	movlw	6
  1650  05EF  00F0               	movwf	??_lcd_busy
  1651  05F0                     u777:
  1652  05F0  0BF0               	decfsz	??_lcd_busy,f
  1653  05F1  2DF0               	goto	u777
  1654  05F2  0000               	nop
  1655  05F3                     l1056:
  1656                           
  1657                           ;lcd.c: 41:  RD3 = 0;
  1658  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1659  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1660  05F5  1188               	bcf	8,3	;volatile
  1661  05F6                     l1058:
  1662                           
  1663                           ;lcd.c: 43:  return busy;
  1664  05F6  0871               	movf	lcd_busy@busy,w
  1665  05F7                     l70:
  1666  05F7  0008               	return
  1667  05F8                     __end_of_lcd_busy:
  1668  007E                     btemp	set	126	;btemp
  1669  007E                     wtemp0	set	126
  1670                           
  1671                           	psect	config
  1672                           
  1673                           ;Config register CONFIG1 @ 0x2007
  1674                           ;	Oscillator Selection bits
  1675                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1676                           ;	Watchdog Timer Enable bit
  1677                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1678                           ;	Power-up Timer Enable bit
  1679                           ;	PWRTE = OFF, PWRT disabled
  1680                           ;	RE3/MCLR pin function select bit
  1681                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1682                           ;	Code Protection bit
  1683                           ;	CP = OFF, Program memory code protection is disabled
  1684                           ;	Data Code Protection bit
  1685                           ;	CPD = OFF, Data memory code protection is disabled
  1686                           ;	Brown Out Reset Selection bits
  1687                           ;	BOREN = OFF, BOR disabled
  1688                           ;	Internal External Switchover bit
  1689                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1690                           ;	Fail-Safe Clock Monitor Enabled bit
  1691                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1692                           ;	Low Voltage Programming Enable bit
  1693                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1694                           ;	In-Circuit Debugger Mode bit
  1695                           ;	DEBUG = 0x1, unprogrammed default
  1696  2007                     	org	8199
  1697  2007  20F2               	dw	8434
  1698                           
  1699                           ;Config register CONFIG2 @ 0x2008
  1700                           ;	Brown-out Reset Selection bit
  1701                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1702                           ;	Flash Program Memory Self Write Enable bits
  1703                           ;	WRT = OFF, Write protection off
  1704  2008                     	org	8200
  1705  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 1
		 -> dat_line1(CODE[1]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9066
                                              1 BANK0      2     2      0
                           _lcd_busy
                         _lcd_gotoxy
                           _lcd_init
                       _lcd_put_byte
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2643
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_busy
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_put_byte
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 02 07:59:52 2021

                      pc 0002                       l34 0755                       l70 05F7  
                     l81 0608                       l83 0630                       l91 05C7  
                     l78 0674   __end_of_lcd_put_nibble 0675                       fsr 0004  
          ?_lcd_put_byte 0073                      l115 05A1                      l133 07FB  
                    l109 06D0                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u400 064D  
                    u401 0649                      u420 0657                      u500 0689  
                    u421 0653                      u501 0688                      u414 0650  
                    u510 06A7                      u511 06A6                      u440 0661  
                    u520 06BC                      u600 0709                      u441 065D  
                    u521 06BB                      u601 0708                      u434 065A  
                    u530 07AD                      u610 071E                      u531 07AC  
                    u611 071D                      u380 0643                      u460 0604  
                    u540 07C1                      u620 0755                      u381 063F  
                    u461 0603                      u541 07C0                      u621 0754  
                    u454 0664                      u550 07D5                      u551 07D4  
                    u560 07E7                      u480 05A8                      u561 07E6  
                    u481 05A7                      u394 0646                      u570 07FB  
                    u490 05C7                      u475 061E                      u707 060D  
                    u571 07FA                      u491 05C6                      u580 05A1  
                    u717 0615                      u581 05A0                      u590 06ED  
                    u727 0666                      u591 06EC                      u737 066E  
                    u747 05D4                      u667 0766                      u757 05DC  
                    u677 077A                      u767 05E8                      u687 0789  
                    u777 05F0                      u697 0798                      fsr0 0004  
                   l1010 0638                     l1020 0669                     l1012 063C  
                   l1100 076B                     l1022 0671                     l1014 0646  
                   l1030 060B                     l1110 0785                     l1102 076E  
                   l1040 05C8                     l1016 0650                     l1008 0632  
                   l1032 0610                     l1024 05F9                     l1120 07B7  
                   l1112 078E                     l1104 076F                     l1050 05E6  
                   l1042 05D2                     l1018 065A                     l1034 0618  
                   l1026 05FF                     l1130 07E7                     l1122 07C1  
                   l1114 079D                     l1106 0770                     l1052 05EB  
                   l1044 05D7                     l1036 061B                     l1028 0604  
                   l1132 07F1                     l1124 07CB                     l1116 07A3  
                   l1108 0776                     l1140 0595                     l1054 05EE  
                   l1046 05DF                     l1038 0629                     l1126 07D5  
                   l1118 07AD                     l1070 05B2                     l1062 05A3  
                   l1230 06C5                     l1134 0582                     l1150 06D9  
                   l1056 05F3                     l1048 05E5                     l1128 07DD  
                   l1072 05BD                     l1064 05A8                     l1080 068A  
                   l1136 0583                     l1160 070F                     l1152 06E3  
                   l1058 05F6                     l1066 05AD                     l1082 0693  
                   l1090 06BD                     l1074 0676                     l1138 058F  
                   l1162 071E                     l1154 06EE                     l1146 06D1  
                   l1068 05AE                     l1084 069D                     l1076 0677  
                   l1164 0725                     l1156 06FF                     l1148 06D6  
                   l1086 06A8                     l1078 067F                     l1174 073C  
                   l1166 072B                     l1158 0709                     l1096 0759  
                   l1088 06B2                     l1176 0749                     l1168 0739  
                   l1098 0762                     l1178 074F                     _main 06D1  
           lcd_busy@busy 0071                     btemp 007E                     start 0000  
        ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074                    ?_main 0070  
                  main@i 0022                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0759  
          lcd_gotoxy@col 0078            lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072  
                 ??_main 0021                   _TRISD1 0441                   _TRISD2 0442  
                 _TRISD3 0443                   _TRISD4 0444                   _TRISD5 0445  
                 _TRISD6 0446                   _TRISD7 0447         __end_of_lcd_busy 05F8  
       __end_of_lcd_init 07FC         __end_of_lcd_putc 06D1         __end_of_lcd_puts 05A2  
          lcd_put_byte@b 0073  __end_of__initialization 07FC     __end_of_lcd_put_byte 0631  
         __pcstackCOMMON 0070        lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070  
             __pmaintext 06D1               _lcd_gotoxy 05A2                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003        __end_of_dat_line1 0024        __end_of_dat_line2 0023  
      __end_of_cgram_dat 0022                  __ptext1 057F                  __ptext2 0675  
                __ptext3 05A2                  __ptext4 0759                  __ptext5 05F8  
                __ptext6 0631                  __ptext7 05C8    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
           _lcd_put_byte 05F8              ?_lcd_gotoxy 0076      start_initialization 07FC  
    __size_of_lcd_gotoxy 0026                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_busy 0030        __size_of_lcd_init 00A3        __size_of_lcd_putc 005C  
      __size_of_lcd_puts 0023                _dat_line1 0023                _dat_line2 0022  
              _cgram_dat 0009                __pstrings 0003              __stringbase 0008  
__size_of_lcd_put_nibble 0044                lcd_putc@c 007C                lcd_puts@s 0020  
           ??_lcd_gotoxy 0077       __end_of_lcd_gotoxy 05C8       __end_of__stringtab 0009  
               _lcd_busy 05C8                 _lcd_init 0759                 _lcd_putc 0675  
               _lcd_puts 057F            __size_of_main 0088          lcd_put_nibble@b 0071  
              stringcode 0003           _lcd_put_nibble 0631                 stringdir 0003  
               stringtab 0003  
