

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 27 11:52:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  020A                     __pstrings:
   212  020A                     stringtab:
   213  020A                     __stringtab:
   214  020A                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  020A                     stringdir:
   218  020A  3002               	movlw	high stringdir
   219  020B  008A               	movwf	10
   220  020C  0804               	movf	4,w
   221  020D  0A84               	incf	4,f
   222  020E  0782               	addwf	2,f
   223  020F                     __stringbase:
   224  020F  3400               	retlw	0
   225  0210                     __end_of__stringtab:
   226  0210                     _led:
   227  0210  34C0               	retlw	192
   228  0211  3400               	retlw	0
   229  0212  34F9               	retlw	249
   230  0213  3400               	retlw	0
   231  0214  34A4               	retlw	164
   232  0215  3400               	retlw	0
   233  0216  34B0               	retlw	176
   234  0217  3400               	retlw	0
   235  0218  3499               	retlw	153
   236  0219  3400               	retlw	0
   237  021A  3492               	retlw	146
   238  021B  3400               	retlw	0
   239  021C  3482               	retlw	130
   240  021D  3400               	retlw	0
   241  021E  34F8               	retlw	248
   242  021F  3400               	retlw	0
   243  0220  3480               	retlw	128
   244  0221  3400               	retlw	0
   245  0222  3490               	retlw	144
   246  0223  3400               	retlw	0
   247  0224                     __end_of_led:
   248  0007                     _PORTC	set	7
   249  0008                     _PORTD	set	8
   250  0032                     _RB2	set	50
   251  0031                     _RB1	set	49
   252  0030                     _RB0	set	48
   253  005B                     _RBIE	set	91
   254  0058                     _RBIF	set	88
   255  005F                     _GIE	set	95
   256  0096                     _IOCB	set	150
   257  0088                     _TRISD	set	136
   258  0087                     _TRISC	set	135
   259  0095                     _WPUB	set	149
   260  0086                     _TRISB	set	134
   261  040F                     _nRBPU	set	1039
   262  0189                     _ANSELH	set	393
   263  0188                     _ANSEL	set	392
   264                           
   265                           	psect	cinit
   266  0015                     start_initialization:	
   267                           ; #config settings
   268                           
   269  0015                     __initialization:
   270  0015                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  0015                     __end_of__initialization:
   274  0015  0183               	clrf	3
   275  0016  120A  118A  29EF   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_hienThiFP:
   280  0070                     ??_hienThiFP:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_myIsr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?___lwdiv:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?___lwmod:	
   293                           ; 2 bytes @ 0x0
   294                           
   295  0070                     ___lwdiv@divisor:	
   296                           ; 2 bytes @ 0x0
   297                           
   298  0070                     ___lwmod@divisor:	
   299                           ; 2 bytes @ 0x0
   300                           
   301                           
   302                           ; 2 bytes @ 0x0
   303  0070                     	ds	2
   304  0072                     ___lwdiv@dividend:
   305  0072                     ___lwmod@dividend:	
   306                           ; 2 bytes @ 0x2
   307                           
   308                           
   309                           ; 2 bytes @ 0x2
   310  0072                     	ds	2
   311  0074                     ??___lwdiv:
   312  0074                     ??___lwmod:	
   313                           ; 1 bytes @ 0x4
   314                           
   315                           
   316                           ; 1 bytes @ 0x4
   317  0074                     	ds	1
   318  0075                     ___lwmod@counter:
   319  0075                     ___lwdiv@quotient:	
   320                           ; 1 bytes @ 0x5
   321                           
   322                           
   323                           ; 2 bytes @ 0x5
   324  0075                     	ds	2
   325  0077                     ___lwdiv@counter:
   326                           
   327                           ; 1 bytes @ 0x7
   328  0077                     	ds	1
   329  0078                     ?_demNguoc:
   330  0078                     ?_demThuan:	
   331                           ; 1 bytes @ 0x8
   332                           
   333  0078                     demNguoc@num:	
   334                           ; 1 bytes @ 0x8
   335                           
   336  0078                     demThuan@num:	
   337                           ; 2 bytes @ 0x8
   338                           
   339                           
   340                           ; 2 bytes @ 0x8
   341  0078                     	ds	2
   342  007A                     ??_demNguoc:
   343  007A                     ??_demThuan:	
   344                           ; 1 bytes @ 0xA
   345                           
   346                           
   347                           ; 1 bytes @ 0xA
   348  007A                     	ds	3
   349                           
   350                           	psect	cstackBANK0
   351  0020                     __pcstackBANK0:
   352  0020                     demNguoc@CH:
   353  0020                     demThuan@CH:	
   354                           ; 2 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0020                     	ds	2
   359  0022                     demNguoc@DV:
   360  0022                     demThuan@DV:	
   361                           ; 2 bytes @ 0x2
   362                           
   363                           
   364                           ; 2 bytes @ 0x2
   365  0022                     	ds	2
   366  0024                     demThuan@dem:
   367                           
   368                           ; 2 bytes @ 0x4
   369  0024                     	ds	2
   370  0026                     ??_myIsr:
   371                           
   372                           ; 1 bytes @ 0x6
   373  0026                     	ds	7
   374  002D                     myIsr@num:
   375                           
   376                           ; 2 bytes @ 0xD
   377  002D                     	ds	2
   378  002F                     myIsr@num_68:
   379                           
   380                           ; 2 bytes @ 0xF
   381  002F                     	ds	2
   382  0031                     ??_main:
   383                           
   384                           	psect	maintext
   385  01EF                     __pmaintext:	
   386                           ; 1 bytes @ 0x11
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 58 in file "cau2.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels required when called: 3
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  01EF                     _main:
   422  01EF                     l888:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2]
   425                           
   426                           
   427                           ;cau2.c: 59:     ANSEL = ANSELH = 0;
   428  01EF  1683               	bsf	3,5	;RP0=1, select bank3
   429  01F0  1703               	bsf	3,6	;RP1=1, select bank3
   430  01F1  0189               	clrf	9	;volatile
   431  01F2  0188               	clrf	8	;volatile
   432  01F3                     l890:
   433                           
   434                           ;cau2.c: 60:     TRISB = WPUB = 0xff;
   435  01F3  30FF               	movlw	255
   436  01F4  1683               	bsf	3,5	;RP0=1, select bank1
   437  01F5  1303               	bcf	3,6	;RP1=0, select bank1
   438  01F6  0095               	movwf	21	;volatile
   439  01F7  0086               	movwf	6	;volatile
   440  01F8                     l892:
   441                           
   442                           ;cau2.c: 61:     nRBPU = 0;
   443  01F8  1381               	bcf	1,7	;volatile
   444  01F9                     l894:
   445                           
   446                           ;cau2.c: 62:     TRISC = TRISD = 0;
   447  01F9  0188               	clrf	8	;volatile
   448  01FA  0187               	clrf	7	;volatile
   449  01FB                     l896:
   450                           
   451                           ;cau2.c: 63:     PORTC = PORTD = 0;
   452  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   453  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   454  01FD  0188               	clrf	8	;volatile
   455  01FE  0187               	clrf	7	;volatile
   456  01FF                     l898:
   457                           
   458                           ;cau2.c: 64:     GIE = 1;
   459  01FF  178B               	bsf	11,7	;volatile
   460  0200                     l900:
   461                           
   462                           ;cau2.c: 65:     RBIF = 0;
   463  0200  100B               	bcf	11,0	;volatile
   464  0201                     l902:
   465                           
   466                           ;cau2.c: 66:     RBIE = 1;
   467  0201  158B               	bsf	11,3	;volatile
   468  0202                     l904:
   469                           
   470                           ;cau2.c: 67:     IOCB = 0xff;
   471  0202  30FF               	movlw	255
   472  0203  1683               	bsf	3,5	;RP0=1, select bank1
   473  0204  1303               	bcf	3,6	;RP1=0, select bank1
   474  0205  0096               	movwf	22	;volatile
   475  0206                     l54:	
   476                           ;cau2.c: 68:     while(1);
   477                           
   478  0206                     l55:
   479  0206  2A06               	goto	l54
   480  0207  120A  118A  2812   	ljmp	start
   481  020A                     __end_of_main:
   482                           
   483                           	psect	text1
   484  0019                     __ptext1:	
   485 ;; *************** function _myIsr *****************
   486 ;; Defined at:
   487 ;;		line 71 in file "cau2.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  num             2   15[BANK0 ] unsigned int 
   492 ;;  num             2   13[BANK0 ] unsigned int 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       4       0       0       0
   504 ;;      Temps:          0       7       0       0       0
   505 ;;      Totals:         0      11       0       0       0
   506 ;;Total ram usage:       11 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 2
   509 ;; This function calls:
   510 ;;		_demNguoc
   511 ;;		_demThuan
   512 ;;		_hienThiFP
   513 ;; This function is called by:
   514 ;;		Interrupt level 1
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _myIsr
   520  0019                     _myIsr:
   521  0019                     i1l906:
   522                           
   523                           ;cau2.c: 72:     if(!RB0) {
   524  0019  1806               	btfsc	6,0	;volatile
   525  001A  281C               	goto	u39_21
   526  001B  281D               	goto	u39_20
   527  001C                     u39_21:
   528  001C  282B               	goto	i1l62
   529  001D                     u39_20:
   530  001D                     i1l63:
   531  001D  1C06               	btfss	6,0	;volatile
   532  001E  2820               	goto	u40_21
   533  001F  2821               	goto	u40_20
   534  0020                     u40_21:
   535  0020  281D               	goto	i1l63
   536  0021                     u40_20:
   537  0021                     i1l910:
   538                           
   539                           ;cau2.c: 74:         demThuan(24);
   540  0021  3018               	movlw	24
   541  0022  00F8               	movwf	demThuan@num
   542  0023  3000               	movlw	0
   543  0024  00F9               	movwf	demThuan@num+1
   544  0025  120A  118A  20A3  120A  118A  	fcall	_demThuan
   545                           
   546                           ;cau2.c: 75:     }
   547  002A  2896               	goto	i1l82
   548  002B                     i1l62:	
   549                           ;cau2.c: 76:     else if(!RB1) {
   550                           
   551  002B  1886               	btfsc	6,1	;volatile
   552  002C  282E               	goto	u41_21
   553  002D  282F               	goto	u41_20
   554  002E                     u41_21:
   555  002E  2852               	goto	i1l67
   556  002F                     u41_20:
   557  002F                     i1l68:
   558  002F  1C86               	btfss	6,1	;volatile
   559  0030  2832               	goto	u42_21
   560  0031  2833               	goto	u42_20
   561  0032                     u42_21:
   562  0032  282F               	goto	i1l68
   563  0033                     u42_20:
   564  0033                     i1l914:
   565                           
   566                           ;cau2.c: 78:         unsigned int num = 2;
   567  0033  3002               	movlw	2
   568  0034  00AD               	movwf	myIsr@num
   569  0035  3000               	movlw	0
   570  0036  00AE               	movwf	myIsr@num+1
   571                           
   572                           ;cau2.c: 79:         while(num--) {
   573  0037  2841               	goto	i1l918
   574  0038                     i1l916:
   575                           
   576                           ;cau2.c: 80:             demNguoc(60);
   577  0038  303C               	movlw	60
   578  0039  00F8               	movwf	demNguoc@num
   579  003A  3000               	movlw	0
   580  003B  00F9               	movwf	demNguoc@num+1
   581  003C  120A  118A  210F  120A  118A  	fcall	_demNguoc
   582  0041                     i1l918:
   583                           
   584                           ;cau2.c: 79:         while(num--) {
   585  0041  3001               	movlw	1
   586  0042  1283               	bcf	3,5	;RP0=0, select bank0
   587  0043  1303               	bcf	3,6	;RP1=0, select bank0
   588  0044  02AD               	subwf	myIsr@num,f
   589  0045  3000               	movlw	0
   590  0046  1C03               	skipc
   591  0047  03AE               	decf	myIsr@num+1,f
   592  0048  02AE               	subwf	myIsr@num+1,f
   593  0049  0A2D               	incf	myIsr@num,w
   594  004A  1D03               	skipz
   595  004B  2850               	goto	u43_21
   596  004C  0A2E               	incf	myIsr@num+1,w
   597  004D  1D03               	btfss	3,2
   598  004E  2850               	goto	u43_21
   599  004F  2851               	goto	u43_20
   600  0050                     u43_21:
   601  0050  2838               	goto	i1l916
   602  0051                     u43_20:
   603  0051  2896               	goto	i1l82
   604  0052                     i1l67:	
   605                           ;cau2.c: 83:     else if(!RB2) {
   606                           
   607  0052  1906               	btfsc	6,2	;volatile
   608  0053  2855               	goto	u44_21
   609  0054  2856               	goto	u44_20
   610  0055                     u44_21:
   611  0055  2896               	goto	i1l82
   612  0056                     u44_20:
   613  0056                     i1l76:
   614  0056  1D06               	btfss	6,2	;volatile
   615  0057  2859               	goto	u45_21
   616  0058  285A               	goto	u45_20
   617  0059                     u45_21:
   618  0059  2856               	goto	i1l76
   619  005A                     u45_20:
   620  005A                     i1l922:
   621                           
   622                           ;cau2.c: 85:         unsigned int num = 3;
   623  005A  3003               	movlw	3
   624  005B  00AF               	movwf	myIsr@num_68
   625  005C  3000               	movlw	0
   626  005D  00B0               	movwf	myIsr@num_68+1
   627                           
   628                           ;cau2.c: 86:         while(num--) {
   629  005E  2883               	goto	i1l930
   630  005F                     i1l924:
   631                           
   632                           ;cau2.c: 87:             PORTC = PORTD = 0xff;
   633  005F  30FF               	movlw	255
   634  0060  0088               	movwf	8	;volatile
   635  0061  0087               	movwf	7	;volatile
   636                           
   637                           ;cau2.c: 88:             _delay((unsigned long)((500)*(4000000/4000.0)));
   638  0062  3003               	movlw	3
   639  0063  1283               	bcf	3,5	;RP0=0, select bank0
   640  0064  1303               	bcf	3,6	;RP1=0, select bank0
   641  0065  00A8               	movwf	??_myIsr+2
   642  0066  308A               	movlw	138
   643  0067  00A7               	movwf	??_myIsr+1
   644  0068  3055               	movlw	85
   645  0069  00A6               	movwf	??_myIsr
   646  006A                     u47_27:
   647  006A  0BA6               	decfsz	??_myIsr,f
   648  006B  286A               	goto	u47_27
   649  006C  0BA7               	decfsz	??_myIsr+1,f
   650  006D  286A               	goto	u47_27
   651  006E  0BA8               	decfsz	??_myIsr+2,f
   652  006F  286A               	goto	u47_27
   653  0070                     i1l926:
   654                           
   655                           ;cau2.c: 89:             hienThiFP();
   656  0070  120A  118A  2224  120A  118A  	fcall	_hienThiFP
   657  0075                     i1l928:
   658                           
   659                           ;cau2.c: 90:             _delay((unsigned long)((500)*(4000000/4000.0)));
   660  0075  3003               	movlw	3
   661  0076  1283               	bcf	3,5	;RP0=0, select bank0
   662  0077  1303               	bcf	3,6	;RP1=0, select bank0
   663  0078  00A8               	movwf	??_myIsr+2
   664  0079  308A               	movlw	138
   665  007A  00A7               	movwf	??_myIsr+1
   666  007B  3055               	movlw	85
   667  007C  00A6               	movwf	??_myIsr
   668  007D                     u48_27:
   669  007D  0BA6               	decfsz	??_myIsr,f
   670  007E  287D               	goto	u48_27
   671  007F  0BA7               	decfsz	??_myIsr+1,f
   672  0080  287D               	goto	u48_27
   673  0081  0BA8               	decfsz	??_myIsr+2,f
   674  0082  287D               	goto	u48_27
   675  0083                     i1l930:
   676                           
   677                           ;cau2.c: 86:         while(num--) {
   678  0083  3001               	movlw	1
   679  0084  1283               	bcf	3,5	;RP0=0, select bank0
   680  0085  1303               	bcf	3,6	;RP1=0, select bank0
   681  0086  02AF               	subwf	myIsr@num_68,f
   682  0087  3000               	movlw	0
   683  0088  1C03               	skipc
   684  0089  03B0               	decf	myIsr@num_68+1,f
   685  008A  02B0               	subwf	myIsr@num_68+1,f
   686  008B  0A2F               	incf	myIsr@num_68,w
   687  008C  1D03               	skipz
   688  008D  2892               	goto	u46_21
   689  008E  0A30               	incf	myIsr@num_68+1,w
   690  008F  1D03               	btfss	3,2
   691  0090  2892               	goto	u46_21
   692  0091  2893               	goto	u46_20
   693  0092                     u46_21:
   694  0092  285F               	goto	i1l924
   695  0093                     u46_20:
   696  0093                     i1l932:
   697                           
   698                           ;cau2.c: 92:         PORTC = PORTD = 0xff;
   699  0093  30FF               	movlw	255
   700  0094  0088               	movwf	8	;volatile
   701  0095  0087               	movwf	7	;volatile
   702  0096                     i1l82:
   703  0096  1283               	bcf	3,5	;RP0=0, select bank0
   704  0097  1303               	bcf	3,6	;RP1=0, select bank0
   705  0098  082C               	movf	??_myIsr+6,w
   706  0099  00FF               	movwf	btemp+1
   707  009A  082B               	movf	??_myIsr+5,w
   708  009B  008A               	movwf	10
   709  009C  082A               	movf	??_myIsr+4,w
   710  009D  0084               	movwf	4
   711  009E  0E29               	swapf	??_myIsr+3,w
   712  009F  0083               	movwf	3
   713  00A0  0EFE               	swapf	btemp,f
   714  00A1  0E7E               	swapf	btemp,w
   715  00A2  0009               	retfie
   716  00A3                     __end_of_myIsr:
   717                           
   718                           	psect	intentry
   719  0004                     __pintentry:	
   720                           ;incstack = 0
   721                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   722                           
   723  0004                     interrupt_function:
   724  007E                     saved_w	set	btemp
   725  0004  00FE               	movwf	btemp
   726  0005  0E03               	swapf	3,w
   727  0006  1283               	bcf	3,5	;RP0=0, select bank0
   728  0007  1303               	bcf	3,6	;RP1=0, select bank0
   729  0008  00A9               	movwf	??_myIsr+3
   730  0009  0804               	movf	4,w
   731  000A  00AA               	movwf	??_myIsr+4
   732  000B  080A               	movf	10,w
   733  000C  00AB               	movwf	??_myIsr+5
   734  000D  087F               	movf	btemp+1,w
   735  000E  00AC               	movwf	??_myIsr+6
   736  000F  120A  118A  2819   	ljmp	_myIsr
   737                           
   738                           	psect	text2
   739  0224                     __ptext2:	
   740 ;; *************** function _hienThiFP *****************
   741 ;; Defined at:
   742 ;;		line 53 in file "cau2.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_myIsr
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _hienThiFP
   771  0224                     _hienThiFP:
   772  0224                     i1l886:	
   773                           ;incstack = 0
   774                           ; Regs used in _hienThiFP: [wreg]
   775                           
   776                           
   777                           ;cau2.c: 54:     PORTD = 0b0001100 << 1;
   778  0224  3018               	movlw	24
   779  0225  1283               	bcf	3,5	;RP0=0, select bank0
   780  0226  1303               	bcf	3,6	;RP1=0, select bank0
   781  0227  0088               	movwf	8	;volatile
   782                           
   783                           ;cau2.c: 55:     PORTC = 0b0001110;
   784  0228  300E               	movlw	14
   785  0229  0087               	movwf	7	;volatile
   786  022A                     i1l49:
   787  022A  0008               	return
   788  022B                     __end_of_hienThiFP:
   789                           
   790                           	psect	text3
   791  00A3                     __ptext3:	
   792 ;; *************** function _demThuan *****************
   793 ;; Defined at:
   794 ;;		line 40 in file "cau2.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  num             2    8[COMMON] unsigned int 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  dem             2    4[BANK0 ] unsigned int 
   799 ;;  DV              2    2[BANK0 ] unsigned int 
   800 ;;  CH              2    0[BANK0 ] unsigned int 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         2       0       0       0       0
   811 ;;      Locals:         0       6       0       0       0
   812 ;;      Temps:          3       0       0       0       0
   813 ;;      Totals:         5       6       0       0       0
   814 ;;Total ram usage:       11 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 1
   817 ;; This function calls:
   818 ;;		___lwdiv
   819 ;;		___lwmod
   820 ;; This function is called by:
   821 ;;		_myIsr
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _demThuan
   827  00A3                     _demThuan:
   828  00A3                     i1l868:	
   829                           ;incstack = 0
   830                           ; Regs used in _demThuan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   831                           
   832                           
   833                           ;cau2.c: 41:     unsigned int dem = 0, CH = 0, DV = 0;
   834  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   835  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   836  00A5  01A4               	clrf	demThuan@dem
   837  00A6  01A5               	clrf	demThuan@dem+1
   838  00A7  01A0               	clrf	demThuan@CH
   839  00A8  01A1               	clrf	demThuan@CH+1
   840  00A9  01A2               	clrf	demThuan@DV
   841  00AA  01A3               	clrf	demThuan@DV+1
   842  00AB                     i1l870:
   843                           
   844                           ;cau2.c: 43:         PORTD = led[DV] << 1;
   845  00AB  0822               	movf	demThuan@DV,w
   846  00AC  00FA               	movwf	??_demThuan
   847  00AD  077A               	addwf	??_demThuan,w
   848  00AE  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
   849  00AF  0084               	movwf	4
   850  00B0  120A  118A  220A  120A  118A  	fcall	stringdir
   851  00B5  00FB               	movwf	??_demThuan+1
   852  00B6  077B               	addwf	??_demThuan+1,w
   853  00B7  0088               	movwf	8	;volatile
   854  00B8                     i1l872:
   855                           
   856                           ;cau2.c: 44:         PORTC = led[CH];
   857  00B8  0820               	movf	demThuan@CH,w
   858  00B9  00FA               	movwf	??_demThuan
   859  00BA  077A               	addwf	??_demThuan,w
   860  00BB  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
   861  00BC  0084               	movwf	4
   862  00BD  120A  118A  220A  120A  118A  	fcall	stringdir
   863  00C2  0087               	movwf	7	;volatile
   864  00C3                     i1l874:
   865                           
   866                           ;cau2.c: 45:         _delay((unsigned long)((300)*(4000000/4000.0)));
   867  00C3  3002               	movlw	2
   868  00C4  00FC               	movwf	??_demThuan+2
   869  00C5  3086               	movlw	134
   870  00C6  00FB               	movwf	??_demThuan+1
   871  00C7  3099               	movlw	153
   872  00C8  00FA               	movwf	??_demThuan
   873  00C9                     u49_27:
   874  00C9  0BFA               	decfsz	??_demThuan,f
   875  00CA  28C9               	goto	u49_27
   876  00CB  0BFB               	decfsz	??_demThuan+1,f
   877  00CC  28C9               	goto	u49_27
   878  00CD  0BFC               	decfsz	??_demThuan+2,f
   879  00CE  28C9               	goto	u49_27
   880  00CF                     i1l876:
   881                           
   882                           ;cau2.c: 46:         dem++;
   883  00CF  3001               	movlw	1
   884  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   885  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   886  00D2  07A4               	addwf	demThuan@dem,f
   887  00D3  1803               	skipnc
   888  00D4  0AA5               	incf	demThuan@dem+1,f
   889  00D5  3000               	movlw	0
   890  00D6  07A5               	addwf	demThuan@dem+1,f
   891  00D7                     i1l878:
   892                           
   893                           ;cau2.c: 47:         CH = dem / 10;
   894  00D7  300A               	movlw	10
   895  00D8  00F0               	movwf	___lwdiv@divisor
   896  00D9  3000               	movlw	0
   897  00DA  00F1               	movwf	___lwdiv@divisor+1
   898  00DB  0825               	movf	demThuan@dem+1,w
   899  00DC  00F3               	movwf	___lwdiv@dividend+1
   900  00DD  0824               	movf	demThuan@dem,w
   901  00DE  00F2               	movwf	___lwdiv@dividend
   902  00DF  120A  118A  2171  120A  118A  	fcall	___lwdiv
   903  00E4  0871               	movf	?___lwdiv+1,w
   904  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   905  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   906  00E7  00A1               	movwf	demThuan@CH+1
   907  00E8  0870               	movf	?___lwdiv,w
   908  00E9  00A0               	movwf	demThuan@CH
   909  00EA                     i1l880:
   910                           
   911                           ;cau2.c: 48:         DV = dem % 10;
   912  00EA  300A               	movlw	10
   913  00EB  00F0               	movwf	___lwmod@divisor
   914  00EC  3000               	movlw	0
   915  00ED  00F1               	movwf	___lwmod@divisor+1
   916  00EE  0825               	movf	demThuan@dem+1,w
   917  00EF  00F3               	movwf	___lwmod@dividend+1
   918  00F0  0824               	movf	demThuan@dem,w
   919  00F1  00F2               	movwf	___lwmod@dividend
   920  00F2  120A  118A  21B5  120A  118A  	fcall	___lwmod
   921  00F7  0871               	movf	?___lwmod+1,w
   922  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   923  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   924  00FA  00A3               	movwf	demThuan@DV+1
   925  00FB  0870               	movf	?___lwmod,w
   926  00FC  00A2               	movwf	demThuan@DV
   927  00FD                     i1l882:
   928                           
   929                           ;cau2.c: 49:     }while(num--);
   930  00FD  3001               	movlw	1
   931  00FE  02F8               	subwf	demThuan@num,f
   932  00FF  3000               	movlw	0
   933  0100  1C03               	skipc
   934  0101  03F9               	decf	demThuan@num+1,f
   935  0102  02F9               	subwf	demThuan@num+1,f
   936  0103  0A78               	incf	demThuan@num,w
   937  0104  1D03               	skipz
   938  0105  290A               	goto	u38_21
   939  0106  0A79               	incf	demThuan@num+1,w
   940  0107  1D03               	btfss	3,2
   941  0108  290A               	goto	u38_21
   942  0109  290B               	goto	u38_20
   943  010A                     u38_21:
   944  010A  28AB               	goto	i1l870
   945  010B                     u38_20:
   946  010B                     i1l884:
   947                           
   948                           ;cau2.c: 50:     PORTC = PORTD = 0xff;
   949  010B  30FF               	movlw	255
   950  010C  0088               	movwf	8	;volatile
   951  010D  0087               	movwf	7	;volatile
   952  010E                     i1l46:
   953  010E  0008               	return
   954  010F                     __end_of_demThuan:
   955                           
   956                           	psect	text4
   957  010F                     __ptext4:	
   958 ;; *************** function _demNguoc *****************
   959 ;; Defined at:
   960 ;;		line 28 in file "cau2.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  num             2    8[COMMON] unsigned int 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  DV              2    2[BANK0 ] unsigned int 
   965 ;;  CH              2    0[BANK0 ] unsigned int 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         2       0       0       0       0
   976 ;;      Locals:         0       4       0       0       0
   977 ;;      Temps:          3       0       0       0       0
   978 ;;      Totals:         5       4       0       0       0
   979 ;;Total ram usage:        9 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 1
   982 ;; This function calls:
   983 ;;		___lwdiv
   984 ;;		___lwmod
   985 ;; This function is called by:
   986 ;;		_myIsr
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _demNguoc
   992  010F                     _demNguoc:
   993  010F                     i1l852:	
   994                           ;incstack = 0
   995                           ; Regs used in _demNguoc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   996                           
   997  010F  1283               	bcf	3,5	;RP0=0, select bank0
   998  0110  1303               	bcf	3,6	;RP1=0, select bank0
   999  0111  01A2               	clrf	demNguoc@DV
  1000  0112  01A3               	clrf	demNguoc@DV+1
  1001  0113                     i1l854:
  1002                           
  1003                           ;cau2.c: 31:         CH = num / 10;
  1004  0113  300A               	movlw	10
  1005  0114  00F0               	movwf	___lwdiv@divisor
  1006  0115  3000               	movlw	0
  1007  0116  00F1               	movwf	___lwdiv@divisor+1
  1008  0117  0879               	movf	demNguoc@num+1,w
  1009  0118  00F3               	movwf	___lwdiv@dividend+1
  1010  0119  0878               	movf	demNguoc@num,w
  1011  011A  00F2               	movwf	___lwdiv@dividend
  1012  011B  120A  118A  2171  120A  118A  	fcall	___lwdiv
  1013  0120  0871               	movf	?___lwdiv+1,w
  1014  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0123  00A1               	movwf	demNguoc@CH+1
  1017  0124  0870               	movf	?___lwdiv,w
  1018  0125  00A0               	movwf	demNguoc@CH
  1019  0126                     i1l856:
  1020                           
  1021                           ;cau2.c: 32:         DV = num % 10;
  1022  0126  300A               	movlw	10
  1023  0127  00F0               	movwf	___lwmod@divisor
  1024  0128  3000               	movlw	0
  1025  0129  00F1               	movwf	___lwmod@divisor+1
  1026  012A  0879               	movf	demNguoc@num+1,w
  1027  012B  00F3               	movwf	___lwmod@dividend+1
  1028  012C  0878               	movf	demNguoc@num,w
  1029  012D  00F2               	movwf	___lwmod@dividend
  1030  012E  120A  118A  21B5  120A  118A  	fcall	___lwmod
  1031  0133  0871               	movf	?___lwmod+1,w
  1032  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0136  00A3               	movwf	demNguoc@DV+1
  1035  0137  0870               	movf	?___lwmod,w
  1036  0138  00A2               	movwf	demNguoc@DV
  1037  0139                     i1l858:
  1038                           
  1039                           ;cau2.c: 33:         PORTD = led[DV] << 1;
  1040  0139  0822               	movf	demNguoc@DV,w
  1041  013A  00FA               	movwf	??_demNguoc
  1042  013B  077A               	addwf	??_demNguoc,w
  1043  013C  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
  1044  013D  0084               	movwf	4
  1045  013E  120A  118A  220A  120A  118A  	fcall	stringdir
  1046  0143  00FB               	movwf	??_demNguoc+1
  1047  0144  077B               	addwf	??_demNguoc+1,w
  1048  0145  0088               	movwf	8	;volatile
  1049  0146                     i1l860:
  1050                           
  1051                           ;cau2.c: 34:         PORTC = led[CH];
  1052  0146  0820               	movf	demNguoc@CH,w
  1053  0147  00FA               	movwf	??_demNguoc
  1054  0148  077A               	addwf	??_demNguoc,w
  1055  0149  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
  1056  014A  0084               	movwf	4
  1057  014B  120A  118A  220A  120A  118A  	fcall	stringdir
  1058  0150  0087               	movwf	7	;volatile
  1059  0151                     i1l862:
  1060                           
  1061                           ;cau2.c: 35:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1062  0151  3002               	movlw	2
  1063  0152  00FC               	movwf	??_demNguoc+2
  1064  0153  3086               	movlw	134
  1065  0154  00FB               	movwf	??_demNguoc+1
  1066  0155  3099               	movlw	153
  1067  0156  00FA               	movwf	??_demNguoc
  1068  0157                     u50_27:
  1069  0157  0BFA               	decfsz	??_demNguoc,f
  1070  0158  2957               	goto	u50_27
  1071  0159  0BFB               	decfsz	??_demNguoc+1,f
  1072  015A  2957               	goto	u50_27
  1073  015B  0BFC               	decfsz	??_demNguoc+2,f
  1074  015C  2957               	goto	u50_27
  1075  015D                     i1l864:
  1076                           
  1077                           ;cau2.c: 36:     }while(num--);
  1078  015D  3001               	movlw	1
  1079  015E  02F8               	subwf	demNguoc@num,f
  1080  015F  3000               	movlw	0
  1081  0160  1C03               	skipc
  1082  0161  03F9               	decf	demNguoc@num+1,f
  1083  0162  02F9               	subwf	demNguoc@num+1,f
  1084  0163  0A78               	incf	demNguoc@num,w
  1085  0164  1D03               	skipz
  1086  0165  296A               	goto	u37_21
  1087  0166  0A79               	incf	demNguoc@num+1,w
  1088  0167  1D03               	btfss	3,2
  1089  0168  296A               	goto	u37_21
  1090  0169  296B               	goto	u37_20
  1091  016A                     u37_21:
  1092  016A  2913               	goto	i1l854
  1093  016B                     u37_20:
  1094  016B                     i1l866:
  1095                           
  1096                           ;cau2.c: 37:     PORTC = PORTD = 0xff;
  1097  016B  30FF               	movlw	255
  1098  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1099  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1100  016E  0088               	movwf	8	;volatile
  1101  016F  0087               	movwf	7	;volatile
  1102  0170                     i1l41:
  1103  0170  0008               	return
  1104  0171                     __end_of_demNguoc:
  1105                           
  1106                           	psect	text5
  1107  01B5                     __ptext5:	
  1108 ;; *************** function ___lwmod *****************
  1109 ;; Defined at:
  1110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  divisor         2    0[COMMON] unsigned int 
  1113 ;;  dividend        2    2[COMMON] unsigned int 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  counter         1    5[COMMON] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  2    0[COMMON] unsigned int 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         4       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0
  1127 ;;      Temps:          1       0       0       0       0
  1128 ;;      Totals:         6       0       0       0       0
  1129 ;;Total ram usage:        6 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_demNguoc
  1135 ;;		_demThuan
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function ___lwmod
  1141  01B5                     ___lwmod:
  1142  01B5                     i1l830:	
  1143                           ;incstack = 0
  1144                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1145                           
  1146  01B5  0870               	movf	___lwmod@divisor,w
  1147  01B6  0471               	iorwf	___lwmod@divisor+1,w
  1148  01B7  1903               	btfsc	3,2
  1149  01B8  29BA               	goto	u31_21
  1150  01B9  29BB               	goto	u31_20
  1151  01BA                     u31_21:
  1152  01BA  29EA               	goto	i1l848
  1153  01BB                     u31_20:
  1154  01BB                     i1l832:
  1155  01BB  01F5               	clrf	___lwmod@counter
  1156  01BC  0AF5               	incf	___lwmod@counter,f
  1157  01BD  29C9               	goto	i1l838
  1158  01BE                     i1l834:
  1159  01BE  3001               	movlw	1
  1160  01BF                     u32_25:
  1161  01BF  1003               	clrc
  1162  01C0  0DF0               	rlf	___lwmod@divisor,f
  1163  01C1  0DF1               	rlf	___lwmod@divisor+1,f
  1164  01C2  3EFF               	addlw	-1
  1165  01C3  1D03               	skipz
  1166  01C4  29BF               	goto	u32_25
  1167  01C5                     i1l836:
  1168  01C5  3001               	movlw	1
  1169  01C6  00F4               	movwf	??___lwmod
  1170  01C7  0874               	movf	??___lwmod,w
  1171  01C8  07F5               	addwf	___lwmod@counter,f
  1172  01C9                     i1l838:
  1173  01C9  1FF1               	btfss	___lwmod@divisor+1,7
  1174  01CA  29CC               	goto	u33_21
  1175  01CB  29CD               	goto	u33_20
  1176  01CC                     u33_21:
  1177  01CC  29BE               	goto	i1l834
  1178  01CD                     u33_20:
  1179  01CD                     i1l840:
  1180  01CD  0871               	movf	___lwmod@divisor+1,w
  1181  01CE  0273               	subwf	___lwmod@dividend+1,w
  1182  01CF  1D03               	skipz
  1183  01D0  29D3               	goto	u34_25
  1184  01D1  0870               	movf	___lwmod@divisor,w
  1185  01D2  0272               	subwf	___lwmod@dividend,w
  1186  01D3                     u34_25:
  1187  01D3  1C03               	skipc
  1188  01D4  29D6               	goto	u34_21
  1189  01D5  29D7               	goto	u34_20
  1190  01D6                     u34_21:
  1191  01D6  29DD               	goto	i1l844
  1192  01D7                     u34_20:
  1193  01D7                     i1l842:
  1194  01D7  0870               	movf	___lwmod@divisor,w
  1195  01D8  02F2               	subwf	___lwmod@dividend,f
  1196  01D9  0871               	movf	___lwmod@divisor+1,w
  1197  01DA  1C03               	skipc
  1198  01DB  03F3               	decf	___lwmod@dividend+1,f
  1199  01DC  02F3               	subwf	___lwmod@dividend+1,f
  1200  01DD                     i1l844:
  1201  01DD  3001               	movlw	1
  1202  01DE                     u35_25:
  1203  01DE  1003               	clrc
  1204  01DF  0CF1               	rrf	___lwmod@divisor+1,f
  1205  01E0  0CF0               	rrf	___lwmod@divisor,f
  1206  01E1  3EFF               	addlw	-1
  1207  01E2  1D03               	skipz
  1208  01E3  29DE               	goto	u35_25
  1209  01E4                     i1l846:
  1210  01E4  3001               	movlw	1
  1211  01E5  02F5               	subwf	___lwmod@counter,f
  1212  01E6  1D03               	btfss	3,2
  1213  01E7  29E9               	goto	u36_21
  1214  01E8  29EA               	goto	u36_20
  1215  01E9                     u36_21:
  1216  01E9  29CD               	goto	i1l840
  1217  01EA                     u36_20:
  1218  01EA                     i1l848:
  1219  01EA  0873               	movf	___lwmod@dividend+1,w
  1220  01EB  00F1               	movwf	?___lwmod+1
  1221  01EC  0872               	movf	___lwmod@dividend,w
  1222  01ED  00F0               	movwf	?___lwmod
  1223  01EE                     i1l450:
  1224  01EE  0008               	return
  1225  01EF                     __end_of___lwmod:
  1226                           
  1227                           	psect	text6
  1228  0171                     __ptext6:	
  1229 ;; *************** function ___lwdiv *****************
  1230 ;; Defined at:
  1231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  divisor         2    0[COMMON] unsigned int 
  1234 ;;  dividend        2    2[COMMON] unsigned int 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  quotient        2    5[COMMON] unsigned int 
  1237 ;;  counter         1    7[COMMON] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  2    0[COMMON] unsigned int 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         4       0       0       0       0
  1248 ;;      Locals:         3       0       0       0       0
  1249 ;;      Temps:          1       0       0       0       0
  1250 ;;      Totals:         8       0       0       0       0
  1251 ;;Total ram usage:        8 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_demNguoc
  1257 ;;		_demThuan
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function ___lwdiv
  1263  0171                     ___lwdiv:
  1264  0171                     i1l804:	
  1265                           ;incstack = 0
  1266                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1267                           
  1268  0171  01F5               	clrf	___lwdiv@quotient
  1269  0172  01F6               	clrf	___lwdiv@quotient+1
  1270  0173                     i1l806:
  1271  0173  0870               	movf	___lwdiv@divisor,w
  1272  0174  0471               	iorwf	___lwdiv@divisor+1,w
  1273  0175  1903               	btfsc	3,2
  1274  0176  2978               	goto	u24_21
  1275  0177  2979               	goto	u24_20
  1276  0178                     u24_21:
  1277  0178  29B0               	goto	i1l826
  1278  0179                     u24_20:
  1279  0179                     i1l808:
  1280  0179  01F7               	clrf	___lwdiv@counter
  1281  017A  0AF7               	incf	___lwdiv@counter,f
  1282  017B  2987               	goto	i1l814
  1283  017C                     i1l810:
  1284  017C  3001               	movlw	1
  1285  017D                     u25_25:
  1286  017D  1003               	clrc
  1287  017E  0DF0               	rlf	___lwdiv@divisor,f
  1288  017F  0DF1               	rlf	___lwdiv@divisor+1,f
  1289  0180  3EFF               	addlw	-1
  1290  0181  1D03               	skipz
  1291  0182  297D               	goto	u25_25
  1292  0183                     i1l812:
  1293  0183  3001               	movlw	1
  1294  0184  00F4               	movwf	??___lwdiv
  1295  0185  0874               	movf	??___lwdiv,w
  1296  0186  07F7               	addwf	___lwdiv@counter,f
  1297  0187                     i1l814:
  1298  0187  1FF1               	btfss	___lwdiv@divisor+1,7
  1299  0188  298A               	goto	u26_21
  1300  0189  298B               	goto	u26_20
  1301  018A                     u26_21:
  1302  018A  297C               	goto	i1l810
  1303  018B                     u26_20:
  1304  018B                     i1l816:
  1305  018B  3001               	movlw	1
  1306  018C                     u27_25:
  1307  018C  1003               	clrc
  1308  018D  0DF5               	rlf	___lwdiv@quotient,f
  1309  018E  0DF6               	rlf	___lwdiv@quotient+1,f
  1310  018F  3EFF               	addlw	-1
  1311  0190  1D03               	skipz
  1312  0191  298C               	goto	u27_25
  1313  0192  0871               	movf	___lwdiv@divisor+1,w
  1314  0193  0273               	subwf	___lwdiv@dividend+1,w
  1315  0194  1D03               	skipz
  1316  0195  2998               	goto	u28_25
  1317  0196  0870               	movf	___lwdiv@divisor,w
  1318  0197  0272               	subwf	___lwdiv@dividend,w
  1319  0198                     u28_25:
  1320  0198  1C03               	skipc
  1321  0199  299B               	goto	u28_21
  1322  019A  299C               	goto	u28_20
  1323  019B                     u28_21:
  1324  019B  29A3               	goto	i1l822
  1325  019C                     u28_20:
  1326  019C                     i1l818:
  1327  019C  0870               	movf	___lwdiv@divisor,w
  1328  019D  02F2               	subwf	___lwdiv@dividend,f
  1329  019E  0871               	movf	___lwdiv@divisor+1,w
  1330  019F  1C03               	skipc
  1331  01A0  03F3               	decf	___lwdiv@dividend+1,f
  1332  01A1  02F3               	subwf	___lwdiv@dividend+1,f
  1333  01A2                     i1l820:
  1334  01A2  1475               	bsf	___lwdiv@quotient,0
  1335  01A3                     i1l822:
  1336  01A3  3001               	movlw	1
  1337  01A4                     u29_25:
  1338  01A4  1003               	clrc
  1339  01A5  0CF1               	rrf	___lwdiv@divisor+1,f
  1340  01A6  0CF0               	rrf	___lwdiv@divisor,f
  1341  01A7  3EFF               	addlw	-1
  1342  01A8  1D03               	skipz
  1343  01A9  29A4               	goto	u29_25
  1344  01AA                     i1l824:
  1345  01AA  3001               	movlw	1
  1346  01AB  02F7               	subwf	___lwdiv@counter,f
  1347  01AC  1D03               	btfss	3,2
  1348  01AD  29AF               	goto	u30_21
  1349  01AE  29B0               	goto	u30_20
  1350  01AF                     u30_21:
  1351  01AF  298B               	goto	i1l816
  1352  01B0                     u30_20:
  1353  01B0                     i1l826:
  1354  01B0  0876               	movf	___lwdiv@quotient+1,w
  1355  01B1  00F1               	movwf	?___lwdiv+1
  1356  01B2  0875               	movf	___lwdiv@quotient,w
  1357  01B3  00F0               	movwf	?___lwdiv
  1358  01B4                     i1l440:
  1359  01B4  0008               	return
  1360  01B5                     __end_of___lwdiv:
  1361  007E                     btemp	set	126	;btemp
  1362  007E                     wtemp0	set	126
  1363                           
  1364                           	psect	config
  1365                           
  1366                           ;Config register CONFIG1 @ 0x2007
  1367                           ;	Oscillator Selection bits
  1368                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1369                           ;	Watchdog Timer Enable bit
  1370                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1371                           ;	Power-up Timer Enable bit
  1372                           ;	PWRTE = OFF, PWRT disabled
  1373                           ;	RE3/MCLR pin function select bit
  1374                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1375                           ;	Code Protection bit
  1376                           ;	CP = OFF, Program memory code protection is disabled
  1377                           ;	Data Code Protection bit
  1378                           ;	CPD = OFF, Data memory code protection is disabled
  1379                           ;	Brown Out Reset Selection bits
  1380                           ;	BOREN = OFF, BOR disabled
  1381                           ;	Internal External Switchover bit
  1382                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1383                           ;	Fail-Safe Clock Monitor Enabled bit
  1384                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1385                           ;	Low Voltage Programming Enable bit
  1386                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1387                           ;	In-Circuit Debugger Mode bit
  1388                           ;	DEBUG = 0x1, unprogrammed default
  1389  2007                     	org	8199
  1390  2007  20F2               	dw	8434
  1391                           
  1392                           ;Config register CONFIG2 @ 0x2008
  1393                           ;	Brown-out Reset Selection bit
  1394                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1395                           ;	Flash Program Memory Self Write Enable bits
  1396                           ;	WRT = OFF, Write protection off
  1397  2008                     	org	8200
  1398  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    20
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     17      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    _myIsr->_demNguoc
    _myIsr->_demThuan
    _demThuan->___lwdiv
    _demNguoc->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    _myIsr->_demThuan

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myIsr                                               11    11      0    2286
                                              6 BANK0     11    11      0
                           _demNguoc
                           _demThuan
                          _hienThiFP
 ---------------------------------------------------------------------------------
 (2) _hienThiFP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _demThuan                                            11     9      2    1121
                                              8 COMMON     5     3      2
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _demNguoc                                             9     7      2    1119
                                              8 COMMON     5     3      2
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myIsr (ROOT)
   _demNguoc
     ___lwdiv
     ___lwmod
   _demThuan
     ___lwdiv
     ___lwmod
   _hienThiFP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 27 11:52:46 2021

                      pc 0002                       l54 0206                       l55 0206  
                     fsr 0004                      l900 0200                      l902 0201  
                    l904 0202                      l890 01F3                      l892 01F8  
                    l894 01F9                      l896 01FB                      l888 01EF  
                    l898 01FF                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _led 0210  
                    fsr0 0004                     _IOCB 0096                     _RBIE 005B  
                   _RBIF 0058                     i1l41 0170                     i1l46 010E  
                   i1l62 002B                     i1l63 001D                     i1l49 022A  
                   i1l82 0096                     i1l67 0052                     i1l76 0056  
                   i1l68 002F                     _WPUB 0095                     _main 01EF  
                   btemp 007E                     start 0012                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 01B5                    i1l440 01B4  
        __end_of___lwmod 01EF                    i1l450 01EE                    i1l810 017C  
                  i1l820 01A2                    i1l812 0183                    i1l804 0171  
                  i1l822 01A3                    i1l814 0187                    i1l806 0173  
                  i1l830 01B5                    i1l910 0021                    i1l824 01AA  
                  i1l816 018B                    i1l808 0179                    i1l840 01CD  
                  i1l832 01BB                    i1l818 019C                    i1l826 01B0  
                  i1l842 01D7                    i1l834 01BE                    i1l930 0083  
                  i1l922 005A                    i1l914 0033                    i1l906 0019  
                  i1l844 01DD                    i1l836 01C5                    i1l860 0146  
                  i1l852 010F                    i1l932 0093                    i1l924 005F  
                  i1l916 0038                    i1l846 01E4                    i1l838 01C9  
                  i1l862 0151                    i1l854 0113                    i1l870 00AB  
                  i1l926 0070                    i1l918 0041                    i1l848 01EA  
                  i1l864 015D                    i1l856 0126                    i1l880 00EA  
                  i1l872 00B8                    i1l928 0075                    i1l866 016B  
                  i1l858 0139                    i1l882 00FD                    i1l874 00C3  
                  i1l884 010B                    i1l876 00CF                    i1l868 00A3  
                  i1l878 00D7                    i1l886 0224                    u30_20 01B0  
                  u30_21 01AF                    u31_20 01BB                    u31_21 01BA  
                  u24_20 0179                    u40_20 0021                    u24_21 0178  
                  u40_21 0020                    u32_25 01BF                    u33_20 01CD  
                  u41_20 002F                    u33_21 01CC                    u41_21 002E  
                  u25_25 017D                    u26_20 018B                    u34_20 01D7  
                  u42_20 0033                    u26_21 018A                    u34_21 01D6  
                  u42_21 0032                    u34_25 01D3                    u50_27 0157  
                  u43_20 0051                    u43_21 0050                    _PORTC 0007  
                  _PORTD 0008                    u27_25 018C                    u35_25 01DE  
                  u28_20 019C                    u36_20 01EA                    u44_20 0056  
                  u28_21 019B                    u36_21 01E9                    u44_21 0055  
                  u28_25 0198                    u37_20 016B                    u45_20 005A  
                  u37_21 016A                    u45_21 0059                    u29_25 01A4  
                  u38_20 010B                    u46_20 0093                    u38_21 010A  
                  u46_21 0092                    u39_20 001D                    u39_21 001C  
                  u47_27 006A                    u48_27 007D                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    u49_27 00C9  
                  _nRBPU 040F                    _myIsr 0019                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 020A                   ??_main 0031                   ?_myIsr 0070  
                 _ANSELH 0189         __end_of_demNguoc 0171         __end_of_demThuan 010F  
              ??___lwdiv 0074                ??___lwmod 0074                   saved_w 007E  
__end_of__initialization 0015              myIsr@num_68 002F           __pcstackCOMMON 0070  
          __end_of_myIsr 00A3       __size_of_hienThiFP 0007                  ??_myIsr 0026  
             __pmaintext 01EF               __pintentry 0004                ?_demNguoc 0078  
              ?_demThuan 0078               __stringtab 020A               demNguoc@CH 0020  
             demNguoc@DV 0022        __end_of_hienThiFP 022B               demThuan@CH 0020  
             demThuan@DV 0022                  ___lwdiv 0171                  ___lwmod 01B5  
                __ptext1 0019                  __ptext2 0224                  __ptext3 00A3  
                __ptext4 010F                  __ptext5 01B5                  __ptext6 0171  
             ??_demNguoc 007A               ??_demThuan 007A     end_of_initialization 0015  
    start_initialization 0015              __end_of_led 0224                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_demNguoc 0062        __size_of_demThuan 006C  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0070  
              _hienThiFP 0224                __pstrings 020A         ___lwdiv@quotient 0075  
         __size_of_myIsr 008A        interrupt_function 0004               ?_hienThiFP 0070  
            __stringbase 020F              demNguoc@num 0078         __size_of___lwdiv 0044  
       __size_of___lwmod 003A       __end_of__stringtab 0210              demThuan@dem 0024  
            demThuan@num 0078                 _demNguoc 010F                 _demThuan 00A3  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077            __size_of_main 001B  
            ??_hienThiFP 0070                 myIsr@num 002D                 intlevel1 0000  
       ___lwmod@dividend 0072                stringcode 020A          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 020A                 stringtab 020A  
