

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 02 09:04:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	strings
   289  0003                     __pstrings:
   290  0003                     stringtab:
   291  0003                     __stringtab:
   292  0003                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  0003                     stringdir:
   296  0003  3000               	movlw	high stringdir
   297  0004  008A               	movwf	10
   298  0005  0804               	movf	4,w
   299  0006  0A84               	incf	4,f
   300  0007  0782               	addwf	2,f
   301  0008                     __stringbase:
   302  0008  3400               	retlw	0
   303  0009                     __end_of__stringtab:
   304  0009                     _cgram_dat:
   305  0009  340E               	retlw	14
   306  000A  3409               	retlw	9
   307  000B  3409               	retlw	9
   308  000C  341D               	retlw	29
   309  000D  3409               	retlw	9
   310  000E  3409               	retlw	9
   311  000F  340E               	retlw	14
   312  0010  3400               	retlw	0
   313  0011  340C               	retlw	12
   314  0012  3412               	retlw	18
   315  0013  340C               	retlw	12
   316  0014  341E               	retlw	30
   317  0015  3410               	retlw	16
   318  0016  341E               	retlw	30
   319  0017  3404               	retlw	4
   320  0018  3400               	retlw	0
   321  0019  340C               	retlw	12
   322  001A  3402               	retlw	2
   323  001B  3405               	retlw	5
   324  001C  3412               	retlw	18
   325  001D  3412               	retlw	18
   326  001E  3412               	retlw	18
   327  001F  340C               	retlw	12
   328  0020  3400               	retlw	0
   329  0021  3499               	retlw	153
   330  0022                     __end_of_cgram_dat:
   331  0022                     _dat_line2:
   332  0022  3443               	retlw	67
   333  0023  344E               	retlw	78
   334  0024  3420               	retlw	32
   335  0025  3400               	retlw	0
   336  0026  3469               	retlw	105
   337  0027  3401               	retlw	1
   338  0028  346E               	retlw	110
   339  0029  3420               	retlw	32
   340  002A  3454               	retlw	84
   341  002B  3402               	retlw	2
   342  002C                     __end_of_dat_line2:
   343  002C                     _dat_line1:
   344  002C  3420               	retlw	32
   345  002D  3420               	retlw	32
   346  002E  3420               	retlw	32
   347  002F  3420               	retlw	32
   348  0030  3420               	retlw	32
   349  0031  344B               	retlw	75
   350  0032  3448               	retlw	72
   351  0033  344F               	retlw	79
   352  0034  3441               	retlw	65
   353  0035  3420               	retlw	32
   354  0036  3400               	retlw	0
   355  0037                     __end_of_dat_line1:
   356  0044                     _RD4	set	68
   357  0045                     _RD5	set	69
   358  0046                     _RD6	set	70
   359  0047                     _RD7	set	71
   360  0043                     _RD3	set	67
   361  0041                     _RD1	set	65
   362  0042                     _RD2	set	66
   363  0442                     _TRISD2	set	1090
   364  0441                     _TRISD1	set	1089
   365  0443                     _TRISD3	set	1091
   366  0447                     _TRISD7	set	1095
   367  0446                     _TRISD6	set	1094
   368  0445                     _TRISD5	set	1093
   369  0444                     _TRISD4	set	1092
   370                           
   371                           	psect	cinit
   372  07FC                     start_initialization:	
   373                           ; #config settings
   374                           
   375  07FC                     __initialization:
   376  07FC                     end_of_initialization:	
   377                           ;End of C runtime variable initialization code
   378                           
   379  07FC                     __end_of__initialization:
   380  07FC  0183               	clrf	3
   381  07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   382                           
   383                           	psect	cstackCOMMON
   384  0070                     __pcstackCOMMON:
   385  0070                     ?_lcd_init:
   386  0070                     ?_lcd_busy:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_lcd_busy:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_lcd_putc:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_lcd_puts:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_lcd_put_nibble:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_lcd_put_nibble:	
   405                           ; 1 bytes @ 0x0
   406                           
   407                           
   408                           ; 1 bytes @ 0x0
   409  0070                     	ds	1
   410  0071                     lcd_busy@busy:
   411  0071                     lcd_put_nibble@b:	
   412                           ; 1 bytes @ 0x1
   413                           
   414                           
   415                           ; 1 bytes @ 0x1
   416  0071                     	ds	1
   417  0072                     lcd_put_nibble@temp:
   418                           
   419                           ; 1 bytes @ 0x2
   420  0072                     	ds	1
   421  0073                     ?_lcd_put_byte:
   422  0073                     lcd_put_byte@b:	
   423                           ; 1 bytes @ 0x3
   424                           
   425                           
   426                           ; 1 bytes @ 0x3
   427  0073                     	ds	1
   428  0074                     ??_lcd_put_byte:
   429                           
   430                           ; 1 bytes @ 0x4
   431  0074                     	ds	1
   432  0075                     lcd_put_byte@rs:
   433                           
   434                           ; 1 bytes @ 0x5
   435  0075                     	ds	1
   436  0076                     ??_lcd_init:
   437  0076                     ?_lcd_gotoxy:	
   438                           ; 1 bytes @ 0x6
   439                           
   440  0076                     lcd_gotoxy@row:	
   441                           ; 1 bytes @ 0x6
   442                           
   443                           
   444                           ; 1 bytes @ 0x6
   445  0076                     	ds	1
   446  0077                     ??_lcd_gotoxy:
   447                           
   448                           ; 1 bytes @ 0x7
   449  0077                     	ds	1
   450  0078                     lcd_gotoxy@col:
   451                           
   452                           ; 1 bytes @ 0x8
   453  0078                     	ds	1
   454  0079                     lcd_gotoxy@address:
   455                           
   456                           ; 1 bytes @ 0x9
   457  0079                     	ds	1
   458  007A                     ??_lcd_putc:
   459                           
   460                           ; 1 bytes @ 0xA
   461  007A                     	ds	2
   462  007C                     lcd_putc@c:
   463                           
   464                           ; 1 bytes @ 0xC
   465  007C                     	ds	1
   466  007D                     ??_lcd_puts:
   467                           
   468                           ; 1 bytes @ 0xD
   469  007D                     	ds	1
   470                           
   471                           	psect	cstackBANK0
   472  0020                     __pcstackBANK0:
   473  0020                     lcd_puts@s:
   474                           
   475                           ; 1 bytes @ 0x0
   476  0020                     	ds	1
   477  0021                     ??_main:
   478                           
   479                           ; 1 bytes @ 0x1
   480  0021                     	ds	1
   481  0022                     main@i:
   482                           
   483                           ; 1 bytes @ 0x2
   484  0022                     	ds	1
   485                           
   486                           	psect	maintext
   487  06D1                     __pmaintext:	
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 32 in file "LCDchucodau.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  i               1    2[BANK0 ] unsigned char 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : B00/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       1       0       0       0
   509 ;;      Temps:          0       1       0       0       0
   510 ;;      Totals:         0       2       0       0       0
   511 ;;Total ram usage:        2 bytes
   512 ;; Hardware stack levels required when called: 5
   513 ;; This function calls:
   514 ;;		_lcd_busy
   515 ;;		_lcd_gotoxy
   516 ;;		_lcd_init
   517 ;;		_lcd_put_byte
   518 ;;		_lcd_putc
   519 ;;		_lcd_puts
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  06D1                     _main:
   528  06D1                     l1146:	
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;LCDchucodau.c: 34:     unsigned char i;;LCDchucodau.c: 35:    lcd_init();
   534  06D1  120A  118A  2759  120A  118A  	fcall	_lcd_init
   535  06D6                     l1148:
   536                           
   537                           ;LCDchucodau.c: 36:    i = 0;
   538  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   539  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   540  06D8  01A2               	clrf	main@i
   541  06D9                     l1150:
   542                           
   543                           ;LCDchucodau.c: 37:     lcd_put_byte(0,0x40);
   544  06D9  3040               	movlw	64
   545  06DA  00A1               	movwf	??_main
   546  06DB  0821               	movf	??_main,w
   547  06DC  00F3               	movwf	lcd_put_byte@b
   548  06DD  3000               	movlw	0
   549  06DE  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   550  06E3                     l1152:	
   551                           ;LCDchucodau.c: 38:     while(lcd_busy());
   552                           
   553  06E3  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   554  06E8  3A00               	xorlw	0
   555  06E9  1D03               	skipz
   556  06EA  2EEC               	goto	u591
   557  06EB  2EED               	goto	u590
   558  06EC                     u591:
   559  06EC  2EE3               	goto	l1152
   560  06ED                     u590:
   561  06ED  2F0F               	goto	l1160
   562  06EE                     l1154:
   563                           
   564                           ;LCDchucodau.c: 40:     {;LCDchucodau.c: 41:         lcd_put_byte(1,cgram_dat[i]);
   565  06EE  0822               	movf	main@i,w
   566  06EF  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   567  06F0  0084               	movwf	4
   568  06F1  120A  118A  2003  120A  118A  	fcall	stringdir
   569  06F6  00A1               	movwf	??_main
   570  06F7  0821               	movf	??_main,w
   571  06F8  00F3               	movwf	lcd_put_byte@b
   572  06F9  3001               	movlw	1
   573  06FA  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   574  06FF                     l1156:	
   575                           ;LCDchucodau.c: 42:         while(lcd_busy());
   576                           
   577  06FF  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   578  0704  3A00               	xorlw	0
   579  0705  1D03               	skipz
   580  0706  2F08               	goto	u601
   581  0707  2F09               	goto	u600
   582  0708                     u601:
   583  0708  2EFF               	goto	l1156
   584  0709                     u600:
   585  0709                     l1158:
   586                           
   587                           ;LCDchucodau.c: 43:         i++;
   588  0709  3001               	movlw	1
   589  070A  1283               	bcf	3,5	;RP0=0, select bank0
   590  070B  1303               	bcf	3,6	;RP1=0, select bank0
   591  070C  00A1               	movwf	??_main
   592  070D  0821               	movf	??_main,w
   593  070E  07A2               	addwf	main@i,f
   594  070F                     l1160:
   595                           
   596                           ;LCDchucodau.c: 39:     while(cgram_dat[i]!=0x99)
   597  070F  1283               	bcf	3,5	;RP0=0, select bank0
   598  0710  1303               	bcf	3,6	;RP1=0, select bank0
   599  0711  0822               	movf	main@i,w
   600  0712  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   601  0713  0084               	movwf	4
   602  0714  120A  118A  2003  120A  118A  	fcall	stringdir
   603  0719  3A99               	xorlw	153
   604  071A  1D03               	skipz
   605  071B  2F1D               	goto	u611
   606  071C  2F1E               	goto	u610
   607  071D                     u611:
   608  071D  2EEE               	goto	l1154
   609  071E                     u610:
   610  071E                     l1162:
   611                           
   612                           ;LCDchucodau.c: 45: lcd_gotoxy(0,0);
   613  071E  01F6               	clrf	lcd_gotoxy@row
   614  071F  3000               	movlw	0
   615  0720  120A  118A  25A2  120A  118A  	fcall	_lcd_gotoxy
   616  0725                     l1164:
   617                           
   618                           ;LCDchucodau.c: 46: lcd_putc('\f');
   619  0725  300C               	movlw	12
   620  0726  120A  118A  2675  120A  118A  	fcall	_lcd_putc
   621  072B                     l1166:
   622                           
   623                           ;LCDchucodau.c: 47: lcd_puts(dat_line1);
   624  072B  3024               	movlw	(low ((_dat_line1-__stringbase)| (0+32768)))& (0+255)
   625  072C  120A  118A  257F  120A  118A  	fcall	_lcd_puts
   626                           
   627                           ;LCDchucodau.c: 48: lcd_gotoxy(2,1);
   628  0731  01F6               	clrf	lcd_gotoxy@row
   629  0732  0AF6               	incf	lcd_gotoxy@row,f
   630  0733  3002               	movlw	2
   631  0734  120A  118A  25A2  120A  118A  	fcall	_lcd_gotoxy
   632  0739                     l1168:
   633                           
   634                           ;LCDchucodau.c: 49: for(i=0;i<=9;i++)
   635  0739  1283               	bcf	3,5	;RP0=0, select bank0
   636  073A  1303               	bcf	3,6	;RP1=0, select bank0
   637  073B  01A2               	clrf	main@i
   638  073C                     l1174:
   639                           
   640                           ;LCDchucodau.c: 50:     {;LCDchucodau.c: 51:         lcd_putc(dat_line2[i]);
   641  073C  0822               	movf	main@i,w
   642  073D  3E1A               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
   643  073E  0084               	movwf	4
   644  073F  120A  118A  2003  120A  118A  	fcall	stringdir
   645  0744  120A  118A  2675  120A  118A  	fcall	_lcd_putc
   646  0749                     l1176:
   647                           
   648                           ;LCDchucodau.c: 52:     }
   649  0749  3001               	movlw	1
   650  074A  1283               	bcf	3,5	;RP0=0, select bank0
   651  074B  1303               	bcf	3,6	;RP1=0, select bank0
   652  074C  00A1               	movwf	??_main
   653  074D  0821               	movf	??_main,w
   654  074E  07A2               	addwf	main@i,f
   655  074F                     l1178:
   656  074F  300A               	movlw	10
   657  0750  0222               	subwf	main@i,w
   658  0751  1C03               	skipc
   659  0752  2F54               	goto	u621
   660  0753  2F55               	goto	u620
   661  0754                     u621:
   662  0754  2F3C               	goto	l1174
   663  0755                     u620:
   664  0755                     l34:	
   665                           ;LCDchucodau.c: 53: while(1);
   666                           
   667  0755  2F55               	goto	l34
   668  0756  120A  118A  2800   	ljmp	start
   669  0759                     __end_of_main:
   670                           
   671                           	psect	text1
   672  057F                     __ptext1:	
   673 ;; *************** function _lcd_puts *****************
   674 ;; Defined at:
   675 ;;		line 224 in file "lcd.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  s               1    wreg     PTR const unsigned char 
   678 ;;		 -> dat_line1(11), 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   681 ;;		 -> dat_line1(11), 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         0       1       0       0       0
   693 ;;      Temps:          1       0       0       0       0
   694 ;;      Totals:         1       1       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 4
   698 ;; This function calls:
   699 ;;		_lcd_putc
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _lcd_puts
   707  057F                     _lcd_puts:
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   711                           ;lcd_puts@s stored from wreg
   712  057F  1283               	bcf	3,5	;RP0=0, select bank0
   713  0580  1303               	bcf	3,6	;RP1=0, select bank0
   714  0581  00A0               	movwf	lcd_puts@s
   715  0582                     l1134:
   716                           
   717                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   718  0582  2D95               	goto	l1140
   719  0583                     l1136:
   720                           
   721                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   722  0583  0820               	movf	lcd_puts@s,w
   723  0584  0084               	movwf	4
   724  0585  120A  118A  2003  120A  118A  	fcall	stringdir
   725  058A  120A  118A  2675  120A  118A  	fcall	_lcd_putc
   726  058F                     l1138:
   727  058F  3001               	movlw	1
   728  0590  00FD               	movwf	??_lcd_puts
   729  0591  087D               	movf	??_lcd_puts,w
   730  0592  1283               	bcf	3,5	;RP0=0, select bank0
   731  0593  1303               	bcf	3,6	;RP1=0, select bank0
   732  0594  07A0               	addwf	lcd_puts@s,f
   733  0595                     l1140:
   734                           
   735                           ;lcd.c: 229:  while(*s)
   736  0595  0820               	movf	lcd_puts@s,w
   737  0596  0084               	movwf	4
   738  0597  120A  118A  2003  120A  118A  	fcall	stringdir
   739  059C  3A00               	xorlw	0
   740  059D  1D03               	skipz
   741  059E  2DA0               	goto	u581
   742  059F  2DA1               	goto	u580
   743  05A0                     u581:
   744  05A0  2D83               	goto	l1136
   745  05A1                     u580:
   746  05A1                     l115:
   747  05A1  0008               	return
   748  05A2                     __end_of_lcd_puts:
   749                           
   750                           	psect	text2
   751  0675                     __ptext2:	
   752 ;; *************** function _lcd_putc *****************
   753 ;; Defined at:
   754 ;;		line 190 in file "lcd.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  c               1    wreg     unsigned char 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  c               1   12[COMMON] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         1       0       0       0       0
   770 ;;      Temps:          2       0       0       0       0
   771 ;;      Totals:         3       0       0       0       0
   772 ;;Total ram usage:        3 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; Hardware stack levels required when called: 3
   775 ;; This function calls:
   776 ;;		_lcd_busy
   777 ;;		_lcd_gotoxy
   778 ;;		_lcd_put_byte
   779 ;; This function is called by:
   780 ;;		_main
   781 ;;		_lcd_puts
   782 ;;		_lcd_String_Delay
   783 ;;		_putch
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _lcd_putc
   789  0675                     _lcd_putc:
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   793                           ;lcd_putc@c stored from wreg
   794  0675  00FC               	movwf	lcd_putc@c
   795  0676                     l1074:
   796                           
   797                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   798  0676  2EBD               	goto	l1090
   799  0677                     l1076:
   800                           
   801                           ;lcd.c: 198:    lcd_put_byte(0,1);
   802  0677  01F3               	clrf	lcd_put_byte@b
   803  0678  0AF3               	incf	lcd_put_byte@b,f
   804  0679  3000               	movlw	0
   805  067A  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   806  067F                     l1078:	
   807                           ;lcd.c: 199:    while(lcd_busy());
   808                           
   809  067F  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   810  0684  3A00               	xorlw	0
   811  0685  1D03               	skipz
   812  0686  2E88               	goto	u501
   813  0687  2E89               	goto	u500
   814  0688                     u501:
   815  0688  2E7F               	goto	l1078
   816  0689                     u500:
   817  0689  2ED0               	goto	l109
   818  068A                     l1080:
   819                           
   820                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   821  068A  01F6               	clrf	lcd_gotoxy@row
   822  068B  0AF6               	incf	lcd_gotoxy@row,f
   823  068C  3000               	movlw	0
   824  068D  120A  118A  25A2  120A  118A  	fcall	_lcd_gotoxy
   825                           
   826                           ;lcd.c: 203:    break;
   827  0692  2ED0               	goto	l109
   828  0693                     l1082:
   829                           
   830                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   831  0693  3010               	movlw	16
   832  0694  00FA               	movwf	??_lcd_putc
   833  0695  087A               	movf	??_lcd_putc,w
   834  0696  00F3               	movwf	lcd_put_byte@b
   835  0697  3000               	movlw	0
   836  0698  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   837  069D                     l1084:	
   838                           ;lcd.c: 206:    while(lcd_busy());
   839                           
   840  069D  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   841  06A2  3A00               	xorlw	0
   842  06A3  1D03               	skipz
   843  06A4  2EA6               	goto	u511
   844  06A5  2EA7               	goto	u510
   845  06A6                     u511:
   846  06A6  2E9D               	goto	l1084
   847  06A7                     u510:
   848  06A7  2ED0               	goto	l109
   849  06A8                     l1086:
   850                           
   851                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   852  06A8  087C               	movf	lcd_putc@c,w
   853  06A9  00FA               	movwf	??_lcd_putc
   854  06AA  087A               	movf	??_lcd_putc,w
   855  06AB  00F3               	movwf	lcd_put_byte@b
   856  06AC  3001               	movlw	1
   857  06AD  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   858  06B2                     l1088:	
   859                           ;lcd.c: 212:     while(lcd_busy());
   860                           
   861  06B2  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
   862  06B7  3A00               	xorlw	0
   863  06B8  1D03               	skipz
   864  06B9  2EBB               	goto	u521
   865  06BA  2EBC               	goto	u520
   866  06BB                     u521:
   867  06BB  2EB2               	goto	l1088
   868  06BC                     u520:
   869  06BC  2ED0               	goto	l109
   870  06BD                     l1090:
   871  06BD  087C               	movf	lcd_putc@c,w
   872  06BE  00FA               	movwf	??_lcd_putc
   873  06BF  01FB               	clrf	??_lcd_putc+1
   874                           
   875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   876                           ; Switch size 1, requested type "simple"
   877                           ; Number of cases is 1, Range of values is 0 to 0
   878                           ; switch strategies available:
   879                           ; Name         Instructions Cycles
   880                           ; simple_byte            4     3 (average)
   881                           ; direct_byte           11     8 (fixed)
   882                           ; jumptable            260     6 (fixed)
   883                           ;	Chosen strategy is simple_byte
   884  06C0  087B               	movf	??_lcd_putc+1,w
   885  06C1  3A00               	xorlw	0	; case 0
   886  06C2  1903               	skipnz
   887  06C3  2EC5               	goto	l1230
   888  06C4  2EA8               	goto	l1086
   889  06C5                     l1230:
   890                           
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 3, Range of values is 8 to 12
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte           10     6 (average)
   896                           ; direct_byte           26    11 (fixed)
   897                           ; jumptable            263     9 (fixed)
   898                           ;	Chosen strategy is simple_byte
   899  06C5  087A               	movf	??_lcd_putc,w
   900  06C6  3A08               	xorlw	8	; case 8
   901  06C7  1903               	skipnz
   902  06C8  2E93               	goto	l1082
   903  06C9  3A02               	xorlw	2	; case 10
   904  06CA  1903               	skipnz
   905  06CB  2E8A               	goto	l1080
   906  06CC  3A06               	xorlw	6	; case 12
   907  06CD  1903               	skipnz
   908  06CE  2E77               	goto	l1076
   909  06CF  2EA8               	goto	l1086
   910  06D0                     l109:
   911  06D0  0008               	return
   912  06D1                     __end_of_lcd_putc:
   913                           
   914                           	psect	text3
   915  05A2                     __ptext3:	
   916 ;; *************** function _lcd_gotoxy *****************
   917 ;; Defined at:
   918 ;;		line 167 in file "lcd.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  col             1    wreg     unsigned char 
   921 ;;  row             1    6[COMMON] unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  col             1    8[COMMON] unsigned char 
   924 ;;  address         1    9[COMMON] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         1       0       0       0       0
   935 ;;      Locals:         2       0       0       0       0
   936 ;;      Temps:          1       0       0       0       0
   937 ;;      Totals:         4       0       0       0       0
   938 ;;Total ram usage:        4 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 2
   941 ;; This function calls:
   942 ;;		_lcd_busy
   943 ;;		_lcd_put_byte
   944 ;; This function is called by:
   945 ;;		_main
   946 ;;		_lcd_putc
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _lcd_gotoxy
   952  05A2                     _lcd_gotoxy:
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
   956                           ;lcd_gotoxy@col stored from wreg
   957  05A2  00F8               	movwf	lcd_gotoxy@col
   958  05A3                     l1062:
   959                           
   960                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   961  05A3  0876               	movf	lcd_gotoxy@row,w
   962  05A4  1903               	btfsc	3,2
   963  05A5  2DA7               	goto	u481
   964  05A6  2DA8               	goto	u480
   965  05A7                     u481:
   966  05A7  2DAD               	goto	l1066
   967  05A8                     u480:
   968  05A8                     l1064:
   969                           
   970                           ;lcd.c: 174:   address=0x40;
   971  05A8  3040               	movlw	64
   972  05A9  00F7               	movwf	??_lcd_gotoxy
   973  05AA  0877               	movf	??_lcd_gotoxy,w
   974  05AB  00F9               	movwf	lcd_gotoxy@address
   975  05AC  2DAE               	goto	l1068
   976  05AD                     l1066:
   977                           
   978                           ;lcd.c: 176:   address=0;
   979  05AD  01F9               	clrf	lcd_gotoxy@address
   980  05AE                     l1068:
   981                           
   982                           ;lcd.c: 178:  address += col;
   983  05AE  0878               	movf	lcd_gotoxy@col,w
   984  05AF  00F7               	movwf	??_lcd_gotoxy
   985  05B0  0877               	movf	??_lcd_gotoxy,w
   986  05B1  07F9               	addwf	lcd_gotoxy@address,f
   987  05B2                     l1070:
   988                           
   989                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   990  05B2  0879               	movf	lcd_gotoxy@address,w
   991  05B3  3880               	iorlw	128
   992  05B4  00F7               	movwf	??_lcd_gotoxy
   993  05B5  0877               	movf	??_lcd_gotoxy,w
   994  05B6  00F3               	movwf	lcd_put_byte@b
   995  05B7  3000               	movlw	0
   996  05B8  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
   997  05BD                     l1072:	
   998                           ;lcd.c: 181:  while(lcd_busy());
   999                           
  1000  05BD  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1001  05C2  3A00               	xorlw	0
  1002  05C3  1D03               	skipz
  1003  05C4  2DC6               	goto	u491
  1004  05C5  2DC7               	goto	u490
  1005  05C6                     u491:
  1006  05C6  2DBD               	goto	l1072
  1007  05C7                     u490:
  1008  05C7                     l91:
  1009  05C7  0008               	return
  1010  05C8                     __end_of_lcd_gotoxy:
  1011                           
  1012                           	psect	text4
  1013  0759                     __ptext4:	
  1014 ;; *************** function _lcd_init *****************
  1015 ;; Defined at:
  1016 ;;		line 241 in file "lcd.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  i               1    0        unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, pclath, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0
  1032 ;;      Temps:          2       0       0       0       0
  1033 ;;      Totals:         2       0       0       0       0
  1034 ;;Total ram usage:        2 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 2
  1037 ;; This function calls:
  1038 ;;		_lcd_busy
  1039 ;;		_lcd_put_byte
  1040 ;;		_lcd_put_nibble
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _lcd_init
  1048  0759                     _lcd_init:
  1049  0759                     l1096:	
  1050                           ;incstack = 0
  1051                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1052                           
  1053                           
  1054                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1055  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1056  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1057  075B  1188               	bcf	8,3	;volatile
  1058                           
  1059                           ;lcd.c: 248:  TRISD1 = 0;
  1060  075C  1088               	bcf	8,1	;volatile
  1061                           
  1062                           ;lcd.c: 249:  TRISD2 = 0;
  1063  075D  1108               	bcf	8,2	;volatile
  1064                           
  1065                           ;lcd.c: 250:  TRISD4 = 0;
  1066  075E  1208               	bcf	8,4	;volatile
  1067                           
  1068                           ;lcd.c: 251:  TRISD5 = 0;
  1069  075F  1288               	bcf	8,5	;volatile
  1070                           
  1071                           ;lcd.c: 252:  TRISD6 = 0;
  1072  0760  1308               	bcf	8,6	;volatile
  1073                           
  1074                           ;lcd.c: 253:  TRISD7 = 0;
  1075  0761  1388               	bcf	8,7	;volatile
  1076  0762                     l1098:
  1077                           
  1078                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1079  0762  3014               	movlw	20
  1080  0763  00F7               	movwf	??_lcd_init+1
  1081  0764  3079               	movlw	121
  1082  0765  00F6               	movwf	??_lcd_init
  1083  0766                     u667:
  1084  0766  0BF6               	decfsz	??_lcd_init,f
  1085  0767  2F66               	goto	u667
  1086  0768  0BF7               	decfsz	??_lcd_init+1,f
  1087  0769  2F66               	goto	u667
  1088  076A  2F6B               	nop2
  1089  076B                     l1100:
  1090                           
  1091                           ;lcd.c: 257:  RD1 = 0;
  1092  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1093  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1094  076D  1088               	bcf	8,1	;volatile
  1095  076E                     l1102:
  1096                           
  1097                           ;lcd.c: 258:  RD2 = 0;
  1098  076E  1108               	bcf	8,2	;volatile
  1099  076F                     l1104:
  1100                           
  1101                           ;lcd.c: 259:  RD3 = 0;
  1102  076F  1188               	bcf	8,3	;volatile
  1103  0770                     l1106:
  1104                           
  1105                           ;lcd.c: 261:  lcd_put_nibble(3);
  1106  0770  3003               	movlw	3
  1107  0771  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1108  0776                     l1108:
  1109                           
  1110                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1111  0776  300D               	movlw	13
  1112  0777  00F7               	movwf	??_lcd_init+1
  1113  0778  30FB               	movlw	251
  1114  0779  00F6               	movwf	??_lcd_init
  1115  077A                     u677:
  1116  077A  0BF6               	decfsz	??_lcd_init,f
  1117  077B  2F7A               	goto	u677
  1118  077C  0BF7               	decfsz	??_lcd_init+1,f
  1119  077D  2F7A               	goto	u677
  1120  077E  2F7F               	nop2
  1121                           
  1122                           ;lcd.c: 263:  lcd_put_nibble(3);
  1123  077F  3003               	movlw	3
  1124  0780  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1125  0785                     l1110:
  1126                           
  1127                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1128  0785  300D               	movlw	13
  1129  0786  00F7               	movwf	??_lcd_init+1
  1130  0787  30FB               	movlw	251
  1131  0788  00F6               	movwf	??_lcd_init
  1132  0789                     u687:
  1133  0789  0BF6               	decfsz	??_lcd_init,f
  1134  078A  2F89               	goto	u687
  1135  078B  0BF7               	decfsz	??_lcd_init+1,f
  1136  078C  2F89               	goto	u687
  1137  078D  2F8E               	nop2
  1138  078E                     l1112:
  1139                           
  1140                           ;lcd.c: 265:  lcd_put_nibble(3);
  1141  078E  3003               	movlw	3
  1142  078F  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1143                           
  1144                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1145  0794  300D               	movlw	13
  1146  0795  00F7               	movwf	??_lcd_init+1
  1147  0796  30FB               	movlw	251
  1148  0797  00F6               	movwf	??_lcd_init
  1149  0798                     u697:
  1150  0798  0BF6               	decfsz	??_lcd_init,f
  1151  0799  2F98               	goto	u697
  1152  079A  0BF7               	decfsz	??_lcd_init+1,f
  1153  079B  2F98               	goto	u697
  1154  079C  2F9D               	nop2
  1155  079D                     l1114:
  1156                           
  1157                           ;lcd.c: 268:  lcd_put_nibble(2);
  1158  079D  3002               	movlw	2
  1159  079E  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1160  07A3                     l1116:	
  1161                           ;lcd.c: 269:  while(lcd_busy());
  1162                           
  1163  07A3  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1164  07A8  3A00               	xorlw	0
  1165  07A9  1D03               	skipz
  1166  07AA  2FAC               	goto	u531
  1167  07AB  2FAD               	goto	u530
  1168  07AC                     u531:
  1169  07AC  2FA3               	goto	l1116
  1170  07AD                     u530:
  1171  07AD                     l1118:
  1172                           
  1173                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1174  07AD  3028               	movlw	40
  1175  07AE  00F6               	movwf	??_lcd_init
  1176  07AF  0876               	movf	??_lcd_init,w
  1177  07B0  00F3               	movwf	lcd_put_byte@b
  1178  07B1  3000               	movlw	0
  1179  07B2  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1180  07B7                     l1120:	
  1181                           ;lcd.c: 272:  while(lcd_busy());
  1182                           
  1183  07B7  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1184  07BC  3A00               	xorlw	0
  1185  07BD  1D03               	skipz
  1186  07BE  2FC0               	goto	u541
  1187  07BF  2FC1               	goto	u540
  1188  07C0                     u541:
  1189  07C0  2FB7               	goto	l1120
  1190  07C1                     u540:
  1191  07C1                     l1122:
  1192                           
  1193                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1194  07C1  300C               	movlw	12
  1195  07C2  00F6               	movwf	??_lcd_init
  1196  07C3  0876               	movf	??_lcd_init,w
  1197  07C4  00F3               	movwf	lcd_put_byte@b
  1198  07C5  3000               	movlw	0
  1199  07C6  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1200  07CB                     l1124:	
  1201                           ;lcd.c: 275:  while(lcd_busy());
  1202                           
  1203  07CB  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1204  07D0  3A00               	xorlw	0
  1205  07D1  1D03               	skipz
  1206  07D2  2FD4               	goto	u551
  1207  07D3  2FD5               	goto	u550
  1208  07D4                     u551:
  1209  07D4  2FCB               	goto	l1124
  1210  07D5                     u550:
  1211  07D5                     l1126:
  1212                           
  1213                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1214  07D5  01F3               	clrf	lcd_put_byte@b
  1215  07D6  0AF3               	incf	lcd_put_byte@b,f
  1216  07D7  3000               	movlw	0
  1217  07D8  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1218  07DD                     l1128:	
  1219                           ;lcd.c: 278:  while(lcd_busy());
  1220                           
  1221  07DD  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1222  07E2  3A00               	xorlw	0
  1223  07E3  1D03               	skipz
  1224  07E4  2FE6               	goto	u561
  1225  07E5  2FE7               	goto	u560
  1226  07E6                     u561:
  1227  07E6  2FDD               	goto	l1128
  1228  07E7                     u560:
  1229  07E7                     l1130:
  1230                           
  1231                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1232  07E7  3006               	movlw	6
  1233  07E8  00F6               	movwf	??_lcd_init
  1234  07E9  0876               	movf	??_lcd_init,w
  1235  07EA  00F3               	movwf	lcd_put_byte@b
  1236  07EB  3000               	movlw	0
  1237  07EC  120A  118A  25F8  120A  118A  	fcall	_lcd_put_byte
  1238  07F1                     l1132:	
  1239                           ;lcd.c: 281:  while(lcd_busy());
  1240                           
  1241  07F1  120A  118A  25C8  120A  118A  	fcall	_lcd_busy
  1242  07F6  3A00               	xorlw	0
  1243  07F7  1D03               	skipz
  1244  07F8  2FFA               	goto	u571
  1245  07F9  2FFB               	goto	u570
  1246  07FA                     u571:
  1247  07FA  2FF1               	goto	l1132
  1248  07FB                     u570:
  1249  07FB                     l133:
  1250  07FB  0008               	return
  1251  07FC                     __end_of_lcd_init:
  1252                           
  1253                           	psect	text5
  1254  05F8                     __ptext5:	
  1255 ;; *************** function _lcd_put_byte *****************
  1256 ;; Defined at:
  1257 ;;		line 134 in file "lcd.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  rs              1    wreg     unsigned char 
  1260 ;;  b               1    3[COMMON] unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  rs              1    5[COMMON] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         1       0       0       0       0
  1273 ;;      Locals:         1       0       0       0       0
  1274 ;;      Temps:          1       0       0       0       0
  1275 ;;      Totals:         3       0       0       0       0
  1276 ;;Total ram usage:        3 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 1
  1279 ;; This function calls:
  1280 ;;		_lcd_put_nibble
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;;		_lcd_gotoxy
  1284 ;;		_lcd_putc
  1285 ;;		_lcd_init
  1286 ;;		_lcd_ShiftLeft
  1287 ;;		_lcd_ShiftRight
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _lcd_put_byte
  1293  05F8                     _lcd_put_byte:
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1297                           ;lcd_put_byte@rs stored from wreg
  1298  05F8  00F5               	movwf	lcd_put_byte@rs
  1299  05F9                     l1024:
  1300                           
  1301                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1302  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  1303  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  1304  05FB  1208               	bcf	8,4	;volatile
  1305                           
  1306                           ;lcd.c: 140:  TRISD5 = 0;
  1307  05FC  1288               	bcf	8,5	;volatile
  1308                           
  1309                           ;lcd.c: 141:  TRISD6 = 0;
  1310  05FD  1308               	bcf	8,6	;volatile
  1311                           
  1312                           ;lcd.c: 142:  TRISD7 = 0;
  1313  05FE  1388               	bcf	8,7	;volatile
  1314  05FF                     l1026:
  1315                           
  1316                           ;lcd.c: 144:  if(rs)
  1317  05FF  0875               	movf	lcd_put_byte@rs,w
  1318  0600  1903               	btfsc	3,2
  1319  0601  2E03               	goto	u461
  1320  0602  2E04               	goto	u460
  1321  0603                     u461:
  1322  0603  2E08               	goto	l81
  1323  0604                     u460:
  1324  0604                     l1028:
  1325                           
  1326                           ;lcd.c: 145:   RD1 = 1;
  1327  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0606  1488               	bsf	8,1	;volatile
  1330  0607  2E0B               	goto	l1030
  1331  0608                     l81:	
  1332                           ;lcd.c: 146:  else
  1333                           
  1334                           
  1335                           ;lcd.c: 147:   RD1 = 0;
  1336  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1338  060A  1088               	bcf	8,1	;volatile
  1339  060B                     l1030:
  1340                           
  1341                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1342  060B  3006               	movlw	6
  1343  060C  00F4               	movwf	??_lcd_put_byte
  1344  060D                     u707:
  1345  060D  0BF4               	decfsz	??_lcd_put_byte,f
  1346  060E  2E0D               	goto	u707
  1347  060F  0000               	nop
  1348  0610                     l1032:
  1349                           
  1350                           ;lcd.c: 150:  RD2 = 0;
  1351  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0612  1108               	bcf	8,2	;volatile
  1354                           
  1355                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1356  0613  3006               	movlw	6
  1357  0614  00F4               	movwf	??_lcd_put_byte
  1358  0615                     u717:
  1359  0615  0BF4               	decfsz	??_lcd_put_byte,f
  1360  0616  2E15               	goto	u717
  1361  0617  0000               	nop
  1362  0618                     l1034:
  1363                           
  1364                           ;lcd.c: 153:  RD3 = 0;
  1365  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1367  061A  1188               	bcf	8,3	;volatile
  1368  061B                     l1036:
  1369                           
  1370                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1371  061B  0873               	movf	lcd_put_byte@b,w
  1372  061C  00F4               	movwf	??_lcd_put_byte
  1373  061D  3004               	movlw	4
  1374  061E                     u475:
  1375  061E  1003               	clrc
  1376  061F  0CF4               	rrf	??_lcd_put_byte,f
  1377  0620  3EFF               	addlw	-1
  1378  0621  1D03               	skipz
  1379  0622  2E1E               	goto	u475
  1380  0623  0874               	movf	??_lcd_put_byte,w
  1381  0624  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1382  0629                     l1038:
  1383                           
  1384                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1385  0629  0873               	movf	lcd_put_byte@b,w
  1386  062A  390F               	andlw	15
  1387  062B  120A  118A  2631  120A  118A  	fcall	_lcd_put_nibble
  1388  0630                     l83:
  1389  0630  0008               	return
  1390  0631                     __end_of_lcd_put_byte:
  1391                           
  1392                           	psect	text6
  1393  0631                     __ptext6:	
  1394 ;; *************** function _lcd_put_nibble *****************
  1395 ;; Defined at:
  1396 ;;		line 103 in file "lcd.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  b               1    wreg     unsigned char 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  b               1    1[COMMON] unsigned char 
  1401 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         2       0       0       0       0
  1413 ;;      Temps:          1       0       0       0       0
  1414 ;;      Totals:         3       0       0       0       0
  1415 ;;Total ram usage:        3 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_lcd_put_byte
  1421 ;;		_lcd_init
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _lcd_put_nibble
  1427  0631                     _lcd_put_nibble:
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _lcd_put_nibble: [wreg]
  1431                           ;lcd_put_nibble@b stored from wreg
  1432  0631  00F1               	movwf	lcd_put_nibble@b
  1433  0632                     l1008:
  1434                           
  1435                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1436  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0634  1208               	bcf	8,4	;volatile
  1439                           
  1440                           ;lcd.c: 110:  TRISD5 = 0;
  1441  0635  1288               	bcf	8,5	;volatile
  1442                           
  1443                           ;lcd.c: 111:  TRISD6 = 0;
  1444  0636  1308               	bcf	8,6	;volatile
  1445                           
  1446                           ;lcd.c: 112:  TRISD7 = 0;
  1447  0637  1388               	bcf	8,7	;volatile
  1448  0638                     l1010:
  1449                           
  1450                           ;lcd.c: 114:  temp.Val = b;
  1451  0638  0871               	movf	lcd_put_nibble@b,w
  1452  0639  00F0               	movwf	??_lcd_put_nibble
  1453  063A  0870               	movf	??_lcd_put_nibble,w
  1454  063B  00F2               	movwf	lcd_put_nibble@temp
  1455  063C                     l1012:
  1456                           
  1457                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1458  063C  1872               	btfsc	lcd_put_nibble@temp,0
  1459  063D  2E3F               	goto	u381
  1460  063E  2E43               	goto	u380
  1461  063F                     u381:
  1462  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0641  1608               	bsf	8,4	;volatile
  1465  0642  2E46               	goto	u394
  1466  0643                     u380:
  1467  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0645  1208               	bcf	8,4	;volatile
  1470  0646                     u394:
  1471  0646                     l1014:
  1472                           
  1473                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1474  0646  18F2               	btfsc	lcd_put_nibble@temp,1
  1475  0647  2E49               	goto	u401
  1476  0648  2E4D               	goto	u400
  1477  0649                     u401:
  1478  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1479  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1480  064B  1688               	bsf	8,5	;volatile
  1481  064C  2E50               	goto	u414
  1482  064D                     u400:
  1483  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1484  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1485  064F  1288               	bcf	8,5	;volatile
  1486  0650                     u414:
  1487  0650                     l1016:
  1488                           
  1489                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1490  0650  1972               	btfsc	lcd_put_nibble@temp,2
  1491  0651  2E53               	goto	u421
  1492  0652  2E57               	goto	u420
  1493  0653                     u421:
  1494  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0655  1708               	bsf	8,6	;volatile
  1497  0656  2E5A               	goto	u434
  1498  0657                     u420:
  1499  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0659  1308               	bcf	8,6	;volatile
  1502  065A                     u434:
  1503  065A                     l1018:
  1504                           
  1505                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1506  065A  19F2               	btfsc	lcd_put_nibble@temp,3
  1507  065B  2E5D               	goto	u441
  1508  065C  2E61               	goto	u440
  1509  065D                     u441:
  1510  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1511  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1512  065F  1788               	bsf	8,7	;volatile
  1513  0660  2E64               	goto	u454
  1514  0661                     u440:
  1515  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0663  1388               	bcf	8,7	;volatile
  1518  0664                     u454:
  1519                           
  1520                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1521  0664  3006               	movlw	6
  1522  0665  00F0               	movwf	??_lcd_put_nibble
  1523  0666                     u727:
  1524  0666  0BF0               	decfsz	??_lcd_put_nibble,f
  1525  0667  2E66               	goto	u727
  1526  0668  0000               	nop
  1527  0669                     l1020:
  1528                           
  1529                           ;lcd.c: 122:  RD3 = 1;
  1530  0669  1283               	bcf	3,5	;RP0=0, select bank0
  1531  066A  1303               	bcf	3,6	;RP1=0, select bank0
  1532  066B  1588               	bsf	8,3	;volatile
  1533                           
  1534                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1535  066C  3006               	movlw	6
  1536  066D  00F0               	movwf	??_lcd_put_nibble
  1537  066E                     u737:
  1538  066E  0BF0               	decfsz	??_lcd_put_nibble,f
  1539  066F  2E6E               	goto	u737
  1540  0670  0000               	nop
  1541  0671                     l1022:
  1542                           
  1543                           ;lcd.c: 124:  RD3 = 0;
  1544  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0673  1188               	bcf	8,3	;volatile
  1547  0674                     l78:
  1548  0674  0008               	return
  1549  0675                     __end_of_lcd_put_nibble:
  1550                           
  1551                           	psect	text7
  1552  05C8                     __ptext7:	
  1553 ;; *************** function _lcd_busy *****************
  1554 ;; Defined at:
  1555 ;;		line 18 in file "lcd.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  busy            1    1[COMMON] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      unsigned char 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0
  1571 ;;      Temps:          1       0       0       0       0
  1572 ;;      Totals:         2       0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;;		_lcd_gotoxy
  1580 ;;		_lcd_putc
  1581 ;;		_lcd_init
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _lcd_busy
  1587  05C8                     _lcd_busy:
  1588  05C8                     l1040:	
  1589                           ;incstack = 0
  1590                           ; Regs used in _lcd_busy: [wreg+status,2]
  1591                           
  1592                           
  1593                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1594  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1595  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1596  05CA  1608               	bsf	8,4	;volatile
  1597                           
  1598                           ;lcd.c: 25:  TRISD5 = 1;
  1599  05CB  1688               	bsf	8,5	;volatile
  1600                           
  1601                           ;lcd.c: 26:  TRISD6 = 1;
  1602  05CC  1708               	bsf	8,6	;volatile
  1603                           
  1604                           ;lcd.c: 27:  TRISD7 = 1;
  1605  05CD  1788               	bsf	8,7	;volatile
  1606                           
  1607                           ;lcd.c: 29:  RD2 = 1;
  1608  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1609  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1610  05D0  1508               	bsf	8,2	;volatile
  1611                           
  1612                           ;lcd.c: 30:  RD1 = 0;
  1613  05D1  1088               	bcf	8,1	;volatile
  1614  05D2                     l1042:
  1615                           
  1616                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1617  05D2  3006               	movlw	6
  1618  05D3  00F0               	movwf	??_lcd_busy
  1619  05D4                     u747:
  1620  05D4  0BF0               	decfsz	??_lcd_busy,f
  1621  05D5  2DD4               	goto	u747
  1622  05D6  0000               	nop
  1623  05D7                     l1044:
  1624                           
  1625                           ;lcd.c: 32:  RD3 = 1;
  1626  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1627  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1628  05D9  1588               	bsf	8,3	;volatile
  1629                           
  1630                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1631  05DA  3006               	movlw	6
  1632  05DB  00F0               	movwf	??_lcd_busy
  1633  05DC                     u757:
  1634  05DC  0BF0               	decfsz	??_lcd_busy,f
  1635  05DD  2DDC               	goto	u757
  1636  05DE  0000               	nop
  1637  05DF                     l1046:
  1638                           
  1639                           ;lcd.c: 35:  busy = RD7;
  1640  05DF  3000               	movlw	0
  1641  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1642  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1643  05E2  1B88               	btfsc	8,7	;volatile
  1644  05E3  3001               	movlw	1
  1645  05E4  00F1               	movwf	lcd_busy@busy
  1646  05E5                     l1048:
  1647                           
  1648                           ;lcd.c: 37:  RD3 = 0;
  1649  05E5  1188               	bcf	8,3	;volatile
  1650  05E6                     l1050:
  1651                           
  1652                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1653  05E6  3006               	movlw	6
  1654  05E7  00F0               	movwf	??_lcd_busy
  1655  05E8                     u767:
  1656  05E8  0BF0               	decfsz	??_lcd_busy,f
  1657  05E9  2DE8               	goto	u767
  1658  05EA  0000               	nop
  1659  05EB                     l1052:
  1660                           
  1661                           ;lcd.c: 39:  RD3 = 1;
  1662  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1663  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1664  05ED  1588               	bsf	8,3	;volatile
  1665  05EE                     l1054:
  1666                           
  1667                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1668  05EE  3006               	movlw	6
  1669  05EF  00F0               	movwf	??_lcd_busy
  1670  05F0                     u777:
  1671  05F0  0BF0               	decfsz	??_lcd_busy,f
  1672  05F1  2DF0               	goto	u777
  1673  05F2  0000               	nop
  1674  05F3                     l1056:
  1675                           
  1676                           ;lcd.c: 41:  RD3 = 0;
  1677  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1678  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1679  05F5  1188               	bcf	8,3	;volatile
  1680  05F6                     l1058:
  1681                           
  1682                           ;lcd.c: 43:  return busy;
  1683  05F6  0871               	movf	lcd_busy@busy,w
  1684  05F7                     l70:
  1685  05F7  0008               	return
  1686  05F8                     __end_of_lcd_busy:
  1687  007E                     btemp	set	126	;btemp
  1688  007E                     wtemp0	set	126
  1689                           
  1690                           	psect	config
  1691                           
  1692                           ;Config register CONFIG1 @ 0x2007
  1693                           ;	Oscillator Selection bits
  1694                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1695                           ;	Watchdog Timer Enable bit
  1696                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1697                           ;	Power-up Timer Enable bit
  1698                           ;	PWRTE = OFF, PWRT disabled
  1699                           ;	RE3/MCLR pin function select bit
  1700                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1701                           ;	Code Protection bit
  1702                           ;	CP = OFF, Program memory code protection is disabled
  1703                           ;	Data Code Protection bit
  1704                           ;	CPD = OFF, Data memory code protection is disabled
  1705                           ;	Brown Out Reset Selection bits
  1706                           ;	BOREN = OFF, BOR disabled
  1707                           ;	Internal External Switchover bit
  1708                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1709                           ;	Fail-Safe Clock Monitor Enabled bit
  1710                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1711                           ;	Low Voltage Programming Enable bit
  1712                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1713                           ;	In-Circuit Debugger Mode bit
  1714                           ;	DEBUG = 0x1, unprogrammed default
  1715  2007                     	org	8199
  1716  2007  20F2               	dw	8434
  1717                           
  1718                           ;Config register CONFIG2 @ 0x2008
  1719                           ;	Brown-out Reset Selection bit
  1720                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1721                           ;	Flash Program Memory Self Write Enable bits
  1722                           ;	WRT = OFF, Write protection off
  1723  2008                     	org	8200
  1724  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    46
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 11
		 -> dat_line1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9066
                                              1 BANK0      2     2      0
                           _lcd_busy
                         _lcd_gotoxy
                           _lcd_init
                       _lcd_put_byte
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2643
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_busy
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_put_byte
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 02 09:04:34 2021

                      pc 0002                       l34 0755                       l70 05F7  
                     l81 0608                       l83 0630                       l91 05C7  
                     l78 0674   __end_of_lcd_put_nibble 0675                       fsr 0004  
          ?_lcd_put_byte 0073                      l115 05A1                      l133 07FB  
                    l109 06D0                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u400 064D  
                    u401 0649                      u420 0657                      u500 0689  
                    u421 0653                      u501 0688                      u414 0650  
                    u510 06A7                      u511 06A6                      u440 0661  
                    u520 06BC                      u600 0709                      u441 065D  
                    u521 06BB                      u601 0708                      u434 065A  
                    u530 07AD                      u610 071E                      u531 07AC  
                    u611 071D                      u380 0643                      u460 0604  
                    u540 07C1                      u620 0755                      u381 063F  
                    u461 0603                      u541 07C0                      u621 0754  
                    u454 0664                      u550 07D5                      u551 07D4  
                    u560 07E7                      u480 05A8                      u561 07E6  
                    u481 05A7                      u394 0646                      u570 07FB  
                    u490 05C7                      u475 061E                      u707 060D  
                    u571 07FA                      u491 05C6                      u580 05A1  
                    u717 0615                      u581 05A0                      u590 06ED  
                    u727 0666                      u591 06EC                      u737 066E  
                    u747 05D4                      u667 0766                      u757 05DC  
                    u677 077A                      u767 05E8                      u687 0789  
                    u777 05F0                      u697 0798                      fsr0 0004  
                   l1010 0638                     l1020 0669                     l1012 063C  
                   l1100 076B                     l1022 0671                     l1014 0646  
                   l1030 060B                     l1110 0785                     l1102 076E  
                   l1040 05C8                     l1016 0650                     l1008 0632  
                   l1032 0610                     l1024 05F9                     l1120 07B7  
                   l1112 078E                     l1104 076F                     l1050 05E6  
                   l1042 05D2                     l1018 065A                     l1034 0618  
                   l1026 05FF                     l1130 07E7                     l1122 07C1  
                   l1114 079D                     l1106 0770                     l1052 05EB  
                   l1044 05D7                     l1036 061B                     l1028 0604  
                   l1132 07F1                     l1124 07CB                     l1116 07A3  
                   l1108 0776                     l1140 0595                     l1054 05EE  
                   l1046 05DF                     l1038 0629                     l1126 07D5  
                   l1118 07AD                     l1070 05B2                     l1062 05A3  
                   l1230 06C5                     l1134 0582                     l1150 06D9  
                   l1056 05F3                     l1048 05E5                     l1128 07DD  
                   l1072 05BD                     l1064 05A8                     l1080 068A  
                   l1136 0583                     l1160 070F                     l1152 06E3  
                   l1058 05F6                     l1066 05AD                     l1082 0693  
                   l1090 06BD                     l1074 0676                     l1138 058F  
                   l1162 071E                     l1154 06EE                     l1146 06D1  
                   l1068 05AE                     l1084 069D                     l1076 0677  
                   l1164 0725                     l1156 06FF                     l1148 06D6  
                   l1086 06A8                     l1078 067F                     l1174 073C  
                   l1166 072B                     l1158 0709                     l1096 0759  
                   l1088 06B2                     l1176 0749                     l1168 0739  
                   l1098 0762                     l1178 074F                     _main 06D1  
           lcd_busy@busy 0071                     btemp 007E                     start 0000  
        ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074                    ?_main 0070  
                  main@i 0022                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0759  
          lcd_gotoxy@col 0078            lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072  
                 ??_main 0021                   _TRISD1 0441                   _TRISD2 0442  
                 _TRISD3 0443                   _TRISD4 0444                   _TRISD5 0445  
                 _TRISD6 0446                   _TRISD7 0447         __end_of_lcd_busy 05F8  
       __end_of_lcd_init 07FC         __end_of_lcd_putc 06D1         __end_of_lcd_puts 05A2  
          lcd_put_byte@b 0073  __end_of__initialization 07FC     __end_of_lcd_put_byte 0631  
         __pcstackCOMMON 0070        lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070  
             __pmaintext 06D1               _lcd_gotoxy 05A2                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003        __end_of_dat_line1 0037        __end_of_dat_line2 002C  
      __end_of_cgram_dat 0022                  __ptext1 057F                  __ptext2 0675  
                __ptext3 05A2                  __ptext4 0759                  __ptext5 05F8  
                __ptext6 0631                  __ptext7 05C8    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
           _lcd_put_byte 05F8              ?_lcd_gotoxy 0076      start_initialization 07FC  
    __size_of_lcd_gotoxy 0026                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_busy 0030        __size_of_lcd_init 00A3        __size_of_lcd_putc 005C  
      __size_of_lcd_puts 0023                _dat_line1 002C                _dat_line2 0022  
              _cgram_dat 0009                __pstrings 0003              __stringbase 0008  
__size_of_lcd_put_nibble 0044                lcd_putc@c 007C                lcd_puts@s 0020  
           ??_lcd_gotoxy 0077       __end_of_lcd_gotoxy 05C8       __end_of__stringtab 0009  
               _lcd_busy 05C8                 _lcd_init 0759                 _lcd_putc 0675  
               _lcd_puts 057F            __size_of_main 0088          lcd_put_nibble@b 0071  
              stringcode 0003           _lcd_put_nibble 0631                 stringdir 0003  
               stringtab 0003  
