

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 27 00:55:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	nvCOMMON
   204  0078                     __pnvCOMMON:
   205  0078                     _luu:
   206  0078                     	ds	2
   207  000E                     _TMR1	set	14
   208  000C                     _PIR1bits	set	12
   209  0008                     _PORTD	set	8
   210  0006                     _PORTBbits	set	6
   211  0010                     _T1CONbits	set	16
   212  0086                     _TRISB	set	134
   213  0087                     _TRISC	set	135
   214  0088                     _TRISD	set	136
   215  0189                     _ANSELH	set	393
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	cinit
   219  07F4                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07F4                     __initialization:
   223                           
   224                           ; Clear objects allocated to COMMON
   225  07F4  01F0               	clrf	__pbssCOMMON& (0+127)
   226  07F5  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   227  07F6  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   228  07F7  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   229  07F8  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   230  07F9  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   231  07FA  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   232  07FB  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2F0C   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0070                     __pbssCOMMON:
   242  0070                     _sl:
   243  0070                     	ds	2
   244  0072                     _tt:
   245  0072                     	ds	2
   246  0074                     _giay:
   247  0074                     	ds	2
   248  0076                     _bdt:
   249  0076                     	ds	2
   250                           
   251                           	psect	cstackCOMMON
   252  0000                     __pcstackCOMMON:
   253  0000                     ?_main:
   254  0000                     ??_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           	psect	maintext
   259  070C                     __pmaintext:	
   260                           ; 1 bytes @ 0x0
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 26 in file "hahahahhahaa.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, btemp+1
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   280 ;;      Params:         0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0
   282 ;;      Temps:          0       0       0       0       0
   283 ;;      Totals:         0       0       0       0       0
   284 ;;Total ram usage:        0 bytes
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _main
   294  070C                     _main:
   295  070C                     l652:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   298                           
   299                           
   300                           ;hahahahhahaa.c: 28:     {
   301  070C  1683               	bsf	3,5	;RP0=1, select bank1
   302  070D  1303               	bcf	3,6	;RP1=0, select bank1
   303  070E  0188               	clrf	8	;volatile
   304                           
   305                           ;hahahahhahaa.c: 29: 
   306  070F  0187               	clrf	7	;volatile
   307  0710                     l654:
   308                           
   309                           ;hahahahhahaa.c: 30:         if(luu==3)
   310  0710  30FF               	movlw	255
   311  0711  0086               	movwf	6	;volatile
   312  0712                     l656:
   313                           
   314                           ;hahahahhahaa.c: 32:             if(PORTBbits.RB0==0)
   315  0712  1683               	bsf	3,5	;RP0=1, select bank3
   316  0713  1703               	bsf	3,6	;RP1=1, select bank3
   317  0714  0188               	clrf	8	;volatile
   318  0715                     l658:
   319                           
   320                           ;hahahahhahaa.c: 33:             {
   321  0715  0189               	clrf	9	;volatile
   322  0716                     l660:
   323                           
   324                           ;hahahahhahaa.c: 35:                 giay=0;
   325  0716  303C               	movlw	60
   326  0717  1283               	bcf	3,5	;RP0=0, select bank0
   327  0718  1303               	bcf	3,6	;RP1=0, select bank0
   328  0719  008F               	movwf	15	;volatile
   329  071A  30B0               	movlw	176
   330  071B  008E               	movwf	14	;volatile
   331  071C                     l662:
   332                           
   333                           ;hahahahhahaa.c: 36:                 TMR1 = 15536;
   334  071C  1090               	bcf	16,1	;volatile
   335  071D                     l664:
   336                           
   337                           ;hahahahhahaa.c: 37:             }
   338  071D  1290               	bcf	16,5	;volatile
   339  071E                     l666:
   340                           
   341                           ;hahahahhahaa.c: 38:             else if(PORTBbits.RB1==0)
   342  071E  1210               	bcf	16,4	;volatile
   343  071F                     l668:
   344                           
   345                           ;hahahahhahaa.c: 39:             {
   346  071F  1510               	bsf	16,2	;volatile
   347  0720                     l670:
   348                           
   349                           ;hahahahhahaa.c: 40:                 luu=1;
   350  0720  1410               	bsf	16,0	;volatile
   351  0721                     l672:
   352                           
   353                           ;hahahahhahaa.c: 42:                 TMR1 = 15536;
   354  0721  01F4               	clrf	_giay
   355  0722  01F5               	clrf	_giay+1
   356  0723                     l674:
   357                           
   358                           ;hahahahhahaa.c: 43:             }
   359  0723  01F6               	clrf	_bdt
   360  0724  01F7               	clrf	_bdt+1
   361  0725                     l676:
   362                           
   363                           ;hahahahhahaa.c: 44:             else if(PORTBbits.RB2==0)
   364  0725  3003               	movlw	3
   365  0726  00F8               	movwf	_luu
   366  0727  3000               	movlw	0
   367  0728  00F9               	movwf	_luu+1
   368  0729                     l678:
   369                           
   370                           ;hahahahhahaa.c: 46:                 luu=2;;hahahahhahaa.c: 48:                 tt=0;
   371  0729  3003               	movlw	3
   372  072A  0678               	xorwf	_luu,w
   373  072B  0479               	iorwf	_luu+1,w
   374  072C  1D03               	btfss	3,2
   375  072D  2F2F               	goto	u11
   376  072E  2F30               	goto	u10
   377  072F                     u11:
   378  072F  2F5D               	goto	l36
   379  0730                     u10:
   380  0730                     l680:
   381                           
   382                           ;hahahahhahaa.c: 49:                 sl=0;;hahahahhahaa.c: 50:                 TMR1 = 15
      +                          536;
   383  0730  1283               	bcf	3,5	;RP0=0, select bank0
   384  0731  1303               	bcf	3,6	;RP1=0, select bank0
   385  0732  1806               	btfsc	6,0	;volatile
   386  0733  2F35               	goto	u21
   387  0734  2F36               	goto	u20
   388  0735                     u21:
   389  0735  2F3F               	goto	l37
   390  0736                     u20:
   391  0736                     l682:
   392                           
   393                           ;hahahahhahaa.c: 51:             };hahahahhahaa.c: 52:             PORTD=0;
   394  0736  01F8               	clrf	_luu
   395  0737  01F9               	clrf	_luu+1
   396                           
   397                           ;hahahahhahaa.c: 53:         }
   398  0738  01F4               	clrf	_giay
   399  0739  01F5               	clrf	_giay+1
   400  073A                     l684:
   401                           
   402                           ;hahahahhahaa.c: 54:         else
   403  073A  303C               	movlw	60
   404  073B  008F               	movwf	15	;volatile
   405  073C  30B0               	movlw	176
   406  073D  008E               	movwf	14	;volatile
   407                           
   408                           ;hahahahhahaa.c: 55:         {
   409  073E  2F59               	goto	l702
   410  073F                     l37:	
   411                           ;hahahahhahaa.c: 56:             if(PIR1bits.TMR1IF == 1)
   412                           
   413  073F  1886               	btfsc	6,1	;volatile
   414  0740  2F42               	goto	u31
   415  0741  2F43               	goto	u30
   416  0742                     u31:
   417  0742  2F4A               	goto	l39
   418  0743                     u30:
   419  0743                     l686:
   420                           
   421                           ;hahahahhahaa.c: 57:             {;hahahahhahaa.c: 58:                 PIR1bits.TMR1IF =
      +                           0;
   422  0743  3001               	movlw	1
   423  0744  00F8               	movwf	_luu
   424  0745  3000               	movlw	0
   425  0746  00F9               	movwf	_luu+1
   426  0747                     l688:
   427                           
   428                           ;hahahahhahaa.c: 59:                 TMR1 = 15536;
   429  0747  01F4               	clrf	_giay
   430  0748  01F5               	clrf	_giay+1
   431  0749  2F3A               	goto	l684
   432  074A                     l39:	
   433                           ;hahahahhahaa.c: 62: 
   434                           
   435  074A  1906               	btfsc	6,2	;volatile
   436  074B  2F4D               	goto	u41
   437  074C  2F4E               	goto	u40
   438  074D                     u41:
   439  074D  2F59               	goto	l702
   440  074E                     u40:
   441  074E                     l692:
   442                           
   443                           ;hahahahhahaa.c: 63:             if(luu==0);hahahahhahaa.c: 64:             {
   444  074E  3002               	movlw	2
   445  074F  00F8               	movwf	_luu
   446  0750  3000               	movlw	0
   447  0751  00F9               	movwf	_luu+1
   448  0752                     l694:
   449                           
   450                           ;hahahahhahaa.c: 65:                 if(giay<20) PORTD=0xaa;
   451  0752  01F4               	clrf	_giay
   452  0753  01F5               	clrf	_giay+1
   453  0754                     l696:
   454                           
   455                           ;hahahahhahaa.c: 66:                 else
   456  0754  01F2               	clrf	_tt
   457  0755  01F3               	clrf	_tt+1
   458  0756                     l698:
   459                           
   460                           ;hahahahhahaa.c: 67:                 {
   461  0756  01F0               	clrf	_sl
   462  0757  01F1               	clrf	_sl+1
   463  0758  2F3A               	goto	l684
   464  0759                     l702:
   465                           
   466                           ;hahahahhahaa.c: 70:                 }
   467  0759  1283               	bcf	3,5	;RP0=0, select bank0
   468  075A  1303               	bcf	3,6	;RP1=0, select bank0
   469  075B  0188               	clrf	8	;volatile
   470                           
   471                           ;hahahahhahaa.c: 71:             }
   472  075C  2F29               	goto	l678
   473  075D                     l36:	
   474                           ;hahahahhahaa.c: 72:             else if(luu==1)
   475                           
   476                           
   477                           ;hahahahhahaa.c: 73:             {;hahahahhahaa.c: 74:                 if(giay<40) PORTD
      +                          =0x55;
   478  075D  1283               	bcf	3,5	;RP0=0, select bank0
   479  075E  1303               	bcf	3,6	;RP1=0, select bank0
   480  075F  1C0C               	btfss	12,0	;volatile
   481  0760  2F62               	goto	u51
   482  0761  2F63               	goto	u50
   483  0762                     u51:
   484  0762  2F6E               	goto	l708
   485  0763                     u50:
   486  0763                     l704:
   487                           
   488                           ;hahahahhahaa.c: 75:                 else;hahahahhahaa.c: 76:                 {
   489  0763  100C               	bcf	12,0	;volatile
   490                           
   491                           ;hahahahhahaa.c: 77:                     luu=3;
   492  0764  303C               	movlw	60
   493  0765  008F               	movwf	15	;volatile
   494  0766  30B0               	movlw	176
   495  0767  008E               	movwf	14	;volatile
   496  0768                     l706:
   497                           
   498                           ;hahahahhahaa.c: 78:                     PORTD=0;
   499  0768  3001               	movlw	1
   500  0769  07F4               	addwf	_giay,f
   501  076A  1803               	skipnc
   502  076B  0AF5               	incf	_giay+1,f
   503  076C  3000               	movlw	0
   504  076D  07F5               	addwf	_giay+1,f
   505  076E                     l708:
   506                           
   507                           ;hahahahhahaa.c: 81:             else if(luu==2)
   508  076E  0878               	movf	_luu,w
   509  076F  0479               	iorwf	_luu+1,w
   510  0770  1D03               	btfss	3,2
   511  0771  2F73               	goto	u61
   512  0772  2F74               	goto	u60
   513  0773                     u61:
   514  0773  2F8B               	goto	l718
   515  0774                     u60:
   516  0774                     l710:
   517                           
   518                           ;hahahahhahaa.c: 82:             {;hahahahhahaa.c: 83:                 if(giay>=10)
   519  0774  0875               	movf	_giay+1,w
   520  0775  3A80               	xorlw	128
   521  0776  00FF               	movwf	btemp+1
   522  0777  3080               	movlw	128
   523  0778  027F               	subwf	btemp+1,w
   524  0779  1D03               	skipz
   525  077A  2F7D               	goto	u75
   526  077B  3014               	movlw	20
   527  077C  0274               	subwf	_giay,w
   528  077D                     u75:
   529  077D  1803               	skipnc
   530  077E  2F80               	goto	u71
   531  077F  2F81               	goto	u70
   532  0780                     u71:
   533  0780  2F86               	goto	l714
   534  0781                     u70:
   535  0781                     l712:
   536  0781  30AA               	movlw	170
   537  0782  1283               	bcf	3,5	;RP0=0, select bank0
   538  0783  1303               	bcf	3,6	;RP1=0, select bank0
   539  0784  0088               	movwf	8	;volatile
   540  0785  2F29               	goto	l678
   541  0786                     l714:
   542                           
   543                           ;hahahahhahaa.c: 85:                     giay=0;;hahahahhahaa.c: 86:                    
      +                           sl++;
   544  0786  3003               	movlw	3
   545  0787  00F8               	movwf	_luu
   546  0788  3000               	movlw	0
   547  0789  00F9               	movwf	_luu+1
   548  078A  2F59               	goto	l702
   549  078B                     l718:
   550  078B  0378               	decf	_luu,w
   551  078C  0479               	iorwf	_luu+1,w
   552  078D  1D03               	btfss	3,2
   553  078E  2F90               	goto	u81
   554  078F  2F91               	goto	u80
   555  0790                     u81:
   556  0790  2FA3               	goto	l728
   557  0791                     u80:
   558  0791                     l720:
   559                           
   560                           ;hahahahhahaa.c: 91:                 if(tt==1) PORTD=0xff;;hahahahhahaa.c: 92:          
      +                                 else PORTD=0x00;
   561  0791  0875               	movf	_giay+1,w
   562  0792  3A80               	xorlw	128
   563  0793  00FF               	movwf	btemp+1
   564  0794  3080               	movlw	128
   565  0795  027F               	subwf	btemp+1,w
   566  0796  1D03               	skipz
   567  0797  2F9A               	goto	u95
   568  0798  3028               	movlw	40
   569  0799  0274               	subwf	_giay,w
   570  079A                     u95:
   571  079A  1803               	skipnc
   572  079B  2F9D               	goto	u91
   573  079C  2F9E               	goto	u90
   574  079D                     u91:
   575  079D  2F86               	goto	l714
   576  079E                     u90:
   577  079E                     l722:
   578  079E  3055               	movlw	85
   579  079F  1283               	bcf	3,5	;RP0=0, select bank0
   580  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   581  07A1  0088               	movwf	8	;volatile
   582  07A2  2F29               	goto	l678
   583  07A3                     l728:
   584  07A3  3002               	movlw	2
   585  07A4  0678               	xorwf	_luu,w
   586  07A5  0479               	iorwf	_luu+1,w
   587  07A6  1D03               	btfss	3,2
   588  07A7  2FA9               	goto	u101
   589  07A8  2FAA               	goto	u100
   590  07A9                     u101:
   591  07A9  2FF0               	goto	l42
   592  07AA                     u100:
   593  07AA                     l730:
   594  07AA  0875               	movf	_giay+1,w
   595  07AB  3A80               	xorlw	128
   596  07AC  00FF               	movwf	btemp+1
   597  07AD  3080               	movlw	128
   598  07AE  027F               	subwf	btemp+1,w
   599  07AF  1D03               	skipz
   600  07B0  2FB3               	goto	u115
   601  07B1  300A               	movlw	10
   602  07B2  0274               	subwf	_giay,w
   603  07B3                     u115:
   604  07B3  1C03               	skipc
   605  07B4  2FB6               	goto	u111
   606  07B5  2FB7               	goto	u110
   607  07B6                     u111:
   608  07B6  2FD4               	goto	l742
   609  07B7                     u110:
   610  07B7                     l732:
   611  07B7  01F4               	clrf	_giay
   612  07B8  01F5               	clrf	_giay+1
   613  07B9                     l734:
   614  07B9  3001               	movlw	1
   615  07BA  07F0               	addwf	_sl,f
   616  07BB  1803               	skipnc
   617  07BC  0AF1               	incf	_sl+1,f
   618  07BD  3000               	movlw	0
   619  07BE  07F1               	addwf	_sl+1,f
   620  07BF                     l736:
   621  07BF  3001               	movlw	1
   622  07C0  07F2               	addwf	_tt,f
   623  07C1  1803               	skipnc
   624  07C2  0AF3               	incf	_tt+1,f
   625  07C3  3000               	movlw	0
   626  07C4  07F3               	addwf	_tt+1,f
   627  07C5                     l738:
   628  07C5  0873               	movf	_tt+1,w
   629  07C6  3A80               	xorlw	128
   630  07C7  00FF               	movwf	btemp+1
   631  07C8  3080               	movlw	128
   632  07C9  027F               	subwf	btemp+1,w
   633  07CA  1D03               	skipz
   634  07CB  2FCE               	goto	u125
   635  07CC  3002               	movlw	2
   636  07CD  0272               	subwf	_tt,w
   637  07CE                     u125:
   638  07CE  1C03               	skipc
   639  07CF  2FD1               	goto	u121
   640  07D0  2FD2               	goto	u120
   641  07D1                     u121:
   642  07D1  2FD4               	goto	l742
   643  07D2                     u120:
   644  07D2                     l740:
   645  07D2  01F2               	clrf	_tt
   646  07D3  01F3               	clrf	_tt+1
   647  07D4                     l742:
   648  07D4  0372               	decf	_tt,w
   649  07D5  0473               	iorwf	_tt+1,w
   650  07D6  1D03               	btfss	3,2
   651  07D7  2FD9               	goto	u131
   652  07D8  2FDA               	goto	u130
   653  07D9                     u131:
   654  07D9  2FDF               	goto	l746
   655  07DA                     u130:
   656  07DA                     l744:
   657  07DA  30FF               	movlw	255
   658  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   659  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   660  07DD  0088               	movwf	8	;volatile
   661  07DE  2FE2               	goto	l748
   662  07DF                     l746:
   663  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   664  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   665  07E1  0188               	clrf	8	;volatile
   666  07E2                     l748:
   667  07E2  0871               	movf	_sl+1,w
   668  07E3  3A80               	xorlw	128
   669  07E4  00FF               	movwf	btemp+1
   670  07E5  3080               	movlw	128
   671  07E6  027F               	subwf	btemp+1,w
   672  07E7  1D03               	skipz
   673  07E8  2FEB               	goto	u145
   674  07E9  3007               	movlw	7
   675  07EA  0270               	subwf	_sl,w
   676  07EB                     u145:
   677  07EB  1C03               	skipc
   678  07EC  2FEE               	goto	u141
   679  07ED  2FEF               	goto	u140
   680  07EE                     u141:
   681  07EE  2FF0               	goto	l42
   682  07EF                     u140:
   683  07EF  2F25               	goto	l676
   684  07F0                     l42:
   685  07F0  2F29               	goto	l678
   686  07F1  120A  118A  2800   	ljmp	start
   687  07F4                     __end_of_main:
   688  007E                     btemp	set	126	;btemp
   689  007E                     wtemp0	set	126
   690                           
   691                           	psect	config
   692                           
   693                           ;Config register CONFIG1 @ 0x2007
   694                           ;	Oscillator Selection bits
   695                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   696                           ;	Watchdog Timer Enable bit
   697                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   698                           ;	Power-up Timer Enable bit
   699                           ;	PWRTE = OFF, PWRT disabled
   700                           ;	RE3/MCLR pin function select bit
   701                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   702                           ;	Code Protection bit
   703                           ;	CP = OFF, Program memory code protection is disabled
   704                           ;	Data Code Protection bit
   705                           ;	CPD = OFF, Data memory code protection is disabled
   706                           ;	Brown Out Reset Selection bits
   707                           ;	BOREN = ON, BOR enabled
   708                           ;	Internal External Switchover bit
   709                           ;	IESO = ON, Internal/External Switchover mode is enabled
   710                           ;	Fail-Safe Clock Monitor Enabled bit
   711                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   712                           ;	Low Voltage Programming Enable bit
   713                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   714                           ;	In-Circuit Debugger Mode bit
   715                           ;	DEBUG = 0x1, unprogrammed default
   716  2007                     	org	8199
   717  2007  2FF2               	dw	12274
   718                           
   719                           ;Config register CONFIG2 @ 0x2008
   720                           ;	Brown-out Reset Selection bit
   721                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   722                           ;	Flash Program Memory Self Write Enable bits
   723                           ;	WRT = OFF, Write protection off
   724  2008                     	org	8200
   725  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 27 00:55:57 2021

                     l42 07F0                       l36 075D                       l37 073F  
                     l39 074A                       u10 0730                       u11 072F  
                     u20 0736                       u21 0735                       u30 0743  
                     u31 0742                       u40 074E                       u41 074D  
                     u50 0763                       u51 0762                       u60 0774  
                     u61 0773                       u70 0781                       u71 0780  
                     u80 0791                       u81 0790                       u90 079E  
                     u91 079D                       u75 077D                       u95 079A  
                     _sl 0070                       _tt 0072                      l710 0774  
                    l702 0759                      l720 0791                      l712 0781  
                    l704 0763                      l730 07AA                      l722 079E  
                    l714 0786                      l706 0768                      l740 07D2  
                    l732 07B7                      l708 076E                      l660 0716  
                    l652 070C                      l734 07B9                      l742 07D4  
                    l718 078B                      l670 0720                      l662 071C  
                    l654 0710                      l744 07DA                      l736 07BF  
                    l728 07A3                      l680 0730                      l672 0721  
                    l664 071D                      l656 0712                      l746 07DF  
                    l738 07C5                      l682 0736                      l674 0723  
                    l666 071E                      l658 0715                      l748 07E2  
                    l692 074E                      l684 073A                      l676 0725  
                    l668 071F                      l694 0752                      l686 0743  
                    l678 0729                      l696 0754                      l688 0747  
                    l698 0756                      u100 07AA                      u101 07A9  
                    u110 07B7                      u111 07B6                      u120 07D2  
                    u121 07D1                      u130 07DA                      u131 07D9  
                    u115 07B3                      u140 07EF                      u141 07EE  
                    u125 07CE                      u145 07EB                      _bdt 0076  
                    _luu 0078                     _TMR1 000E                     _giay 0074  
                   _main 070C                     btemp 007E                     start 0000  
                  ?_main 0000                    _ANSEL 0188                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  status 0003                    wtemp0 007E          __initialization 07F4  
           __end_of_main 07F4                   ??_main 0000                   _ANSELH 0189  
__end_of__initialization 07FC           __pcstackCOMMON 0000               __pnvCOMMON 0078  
             __pmaintext 070C                _T1CONbits 0010     end_of_initialization 07FC  
              _PORTBbits 0006      start_initialization 07F4              __pbssCOMMON 0070  
              ___latbits 0002                 _PIR1bits 000C            __size_of_main 00E8  
