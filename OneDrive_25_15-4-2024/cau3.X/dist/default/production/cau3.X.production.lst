

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 30 20:13:37 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1  0000                     
      + 0000                     
     2                           ; Version 1.45
     3                           ; Generated 16/11/2017 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     clrz	macro
     4                           	bcf	3,2
     5                           	endm
     6  0000                     setc	macro
     7                           	bsf	3,0
     8                           	endm
     9  0000                     setz	macro
    10                           	bsf	3,2
    11                           	endm
    12  0000                     skipc	macro
    13                           	btfss	3,0
    14                           	endm
    15  0000                     skipz	macro
    16                           	btfss	3,2
    17                           	endm
    18  0000                     skipnc	macro
    19                           	btfsc	3,0
    20                           	endm
    21  0000                     skipnz	macro
    22                           	btfsc	3,2
    23                           	endm
    24  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    25                           INDF equ 00h ;# 
    26  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    27                           TMR0 equ 01h ;# 
    28  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    29                           PCL equ 02h ;# 
    30  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    31                           STATUS equ 03h ;# 
    32  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    33                           FSR equ 04h ;# 
    34  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    35                           PORTA equ 05h ;# 
    36  0005                     # 228 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    37                           PORTB equ 06h ;# 
    38  0006                     # 290 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    39                           PORTC equ 07h ;# 
    40  0007                     # 352 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    41                           PORTD equ 08h ;# 
    42  0008                     # 414 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    43                           PORTE equ 09h ;# 
    44  0009                     # 452 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    45                           PCLATH equ 0Ah ;# 
    46  000A                     # 459 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    47                           INTCON equ 0Bh ;# 
    48  000B                     # 537 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    49                           PIR1 equ 0Ch ;# 
    50  000C                     # 593 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    51                           PIR2 equ 0Dh ;# 
    52  000D                     # 650 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    53                           TMR1 equ 0Eh ;# 
    54  000E                     # 657 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    55                           TMR1L equ 0Eh ;# 
    56  000E                     # 664 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    57                           TMR1H equ 0Fh ;# 
    58  000F                     # 671 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    59                           T1CON equ 010h ;# 
    60  0010                     # 765 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    61                           TMR2 equ 011h ;# 
    62  0011                     # 772 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    63                           T2CON equ 012h ;# 
    64  0012                     # 843 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    65                           SSPBUF equ 013h ;# 
    66  0013                     # 850 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    67                           SSPCON equ 014h ;# 
    68  0014                     # 920 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    69                           CCPR1 equ 015h ;# 
    70  0015                     # 927 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    71                           CCPR1L equ 015h ;# 
    72  0015                     # 934 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    73                           CCPR1H equ 016h ;# 
    74  0016                     # 941 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    75                           CCP1CON equ 017h ;# 
    76  0017                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    77                           RCSTA equ 018h ;# 
    78  0018                     # 1133 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    79                           TXREG equ 019h ;# 
    80  0019                     # 1140 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    81                           RCREG equ 01Ah ;# 
    82  001A                     # 1147 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    83                           CCPR2 equ 01Bh ;# 
    84  001B                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    85                           CCPR2L equ 01Bh ;# 
    86  001B                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    87                           CCPR2H equ 01Ch ;# 
    88  001C                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    89                           CCP2CON equ 01Dh ;# 
    90  001D                     # 1238 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    91                           ADRESH equ 01Eh ;# 
    92  001E                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    93                           ADCON0 equ 01Fh ;# 
    94  001F                     # 1346 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    95                           OPTION_REG equ 081h ;# 
    96  0081                     # 1416 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    97                           TRISA equ 085h ;# 
    98  0085                     # 1478 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
    99                           TRISB equ 086h ;# 
   100  0086                     # 1540 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   101                           TRISC equ 087h ;# 
   102  0087                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   103                           TRISD equ 088h ;# 
   104  0088                     # 1664 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   105                           TRISE equ 089h ;# 
   106  0089                     # 1702 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   107                           PIE1 equ 08Ch ;# 
   108  008C                     # 1758 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   109                           PIE2 equ 08Dh ;# 
   110  008D                     # 1815 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   111                           PCON equ 08Eh ;# 
   112  008E                     # 1862 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   113                           OSCCON equ 08Fh ;# 
   114  008F                     # 1927 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   115                           OSCTUNE equ 090h ;# 
   116  0090                     # 1979 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   117                           SSPCON2 equ 091h ;# 
   118  0091                     # 2041 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   119                           PR2 equ 092h ;# 
   120  0092                     # 2048 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   121                           SSPADD equ 093h ;# 
   122  0093                     # 2055 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   123                           SSPMSK equ 093h ;# 
   124  0093                     # 2060 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   125                           MSK equ 093h ;# 
   126  0093                     # 2177 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   127                           SSPSTAT equ 094h ;# 
   128  0094                     # 2346 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   129                           WPUB equ 095h ;# 
   130  0095                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   131                           IOCB equ 096h ;# 
   132  0096                     # 2486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   133                           VRCON equ 097h ;# 
   134  0097                     # 2556 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   135                           TXSTA equ 098h ;# 
   136  0098                     # 2642 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   137                           SPBRG equ 099h ;# 
   138  0099                     # 2704 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   139                           SPBRGH equ 09Ah ;# 
   140  009A                     # 2774 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   141                           PWM1CON equ 09Bh ;# 
   142  009B                     # 2844 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   143                           ECCPAS equ 09Ch ;# 
   144  009C                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   145                           PSTRCON equ 09Dh ;# 
   146  009D                     # 2970 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   147                           ADRESL equ 09Eh ;# 
   148  009E                     # 2977 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   149                           ADCON1 equ 09Fh ;# 
   150  009F                     # 3011 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   151                           WDTCON equ 0105h ;# 
   152  0105                     # 3064 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   153                           CM1CON0 equ 0107h ;# 
   154  0107                     # 3129 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   155                           CM2CON0 equ 0108h ;# 
   156  0108                     # 3194 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   157                           CM2CON1 equ 0109h ;# 
   158  0109                     # 3245 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   159                           EEDATA equ 010Ch ;# 
   160  010C                     # 3250 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   161                           EEDAT equ 010Ch ;# 
   162  010C                     # 3257 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   163                           EEADR equ 010Dh ;# 
   164  010D                     # 3264 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   165                           EEDATH equ 010Eh ;# 
   166  010E                     # 3271 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   167                           EEADRH equ 010Fh ;# 
   168  010F                     # 3278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   169                           SRCON equ 0185h ;# 
   170  0185                     # 3335 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   171                           BAUDCTL equ 0187h ;# 
   172  0187                     # 3387 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   173                           ANSEL equ 0188h ;# 
   174  0188                     # 3449 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   175                           ANSELH equ 0189h ;# 
   176  0189                     # 3499 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   177                           EECON1 equ 018Ch ;# 
   178  018C                     # 3544 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f887.h"
   179                           EECON2 equ 018Dh ;# 
   180  018D                     	FNCALL	_main,_delay_100us
   181                           	FNROOT	_main
   182                           	global	_PORTD
   183                           _PORTD	set	0x8
   184  0008                     	global	_TMR1L
   185                           _TMR1L	set	0xE
   186  000E                     	global	_TMR1H
   187                           _TMR1H	set	0xF
   188  000F                     	global	_RB2
   189                           _RB2	set	0x32
   190  0032                     	global	_RB0
   191                           _RB0	set	0x30
   192  0030                     	global	_RB1
   193                           _RB1	set	0x31
   194  0031                     	global	_T1SYNC
   195                           _T1SYNC	set	0x82
   196  0082                     	global	_TMR1ON
   197                           _TMR1ON	set	0x80
   198  0080                     	global	_T1CKPS0
   199                           _T1CKPS0	set	0x84
   200  0084                     	global	_T1CKPS1
   201                           _T1CKPS1	set	0x85
   202  0085                     	global	_TMR0IF
   203                           _TMR0IF	set	0x5A
   204  005A                     	global	_PEIE
   205                           _PEIE	set	0x5E
   206  005E                     	global	_GIE
   207                           _GIE	set	0x5F
   208  005F                     	global	_TMR1CS
   209                           _TMR1CS	set	0x81
   210  0081                     	global	_TMR1IF
   211                           _TMR1IF	set	0x60
   212  0060                     	global	_WPUB
   213                           _WPUB	set	0x95
   214  0095                     	global	_TRISB
   215                           _TRISB	set	0x86
   216  0086                     	global	_TRISD
   217                           _TRISD	set	0x88
   218  0088                     	global	_nRBPU
   219                           _nRBPU	set	0x40F
   220  040F                     	global	_ANSELH
   221                           _ANSELH	set	0x189
   222  0189                     	global	_ANSEL
   223                           _ANSEL	set	0x188
   224  0188                     ; #config settings
   225                           global __CFG_FOSC$HS
   226                           __CFG_FOSC$HS equ 0x0
   227  0000                     global __CFG_WDTE$OFF
   228                           __CFG_WDTE$OFF equ 0x0
   229  0000                     global __CFG_PWRTE$OFF
   230                           __CFG_PWRTE$OFF equ 0x0
   231  0000                     global __CFG_MCLRE$ON
   232                           __CFG_MCLRE$ON equ 0x0
   233  0000                     global __CFG_CP$OFF
   234                           __CFG_CP$OFF equ 0x0
   235  0000                     global __CFG_CPD$OFF
   236                           __CFG_CPD$OFF equ 0x0
   237  0000                     global __CFG_BOREN$OFF
   238                           __CFG_BOREN$OFF equ 0x0
   239  0000                     global __CFG_IESO$OFF
   240                           __CFG_IESO$OFF equ 0x0
   241  0000                     global __CFG_FCMEN$OFF
   242                           __CFG_FCMEN$OFF equ 0x0
   243  0000                     global __CFG_LVP$OFF
   244                           __CFG_LVP$OFF equ 0x0
   245  0000                     global __CFG_BOR4V$BOR40V
   246                           __CFG_BOR4V$BOR40V equ 0x0
   247  0000                     global __CFG_WRT$OFF
   248                           __CFG_WRT$OFF equ 0x0
   249  0000                     	file	"C:\Users\DATA\AppData\Local\Temp\s310."
   250                           	line	#
   251                           psect cinit,class=CODE,delta=2
   252                           global start_initialization
   253                           start_initialization:
   254  07FC                     
   255                           global __initialization
   256                           __initialization:
   257  07FC                     psect cinit,class=CODE,delta=2,merge=1
   258                           global end_of_initialization,__end_of__initialization
   259                           
   260                           ;End of C runtime variable initialization code
   261                           
   262                           end_of_initialization:
   263  07FC                     __end_of__initialization:
   264  07FC                     clrf status
   265  07FC  0183               ljmp _main	;jump to C main() function
   266  07FD  120A  118A  2F10   psect	cstackCOMMON,class=COMMON,space=1,noexec
   267                           global __pcstackCOMMON
   268                           __pcstackCOMMON:
   269  0070                     ?_delay_100us:	; 1 bytes @ 0x0
   270  0070                     ?_main:	; 1 bytes @ 0x0
   271  0070                     	global	delay_100us@ms
   272                           delay_100us@ms:	; 2 bytes @ 0x0
   273  0070                     	ds	2
   274  0070                     ??_delay_100us:	; 1 bytes @ 0x2
   275  0072                     	global	delay_100us@i
   276                           delay_100us@i:	; 2 bytes @ 0x2
   277  0072                     	ds	2
   278  0072                     ??_main:	; 1 bytes @ 0x4
   279  0074                     ;!
   280                           ;!Data Sizes:
   281                           ;!    Strings     0
   282                           ;!    Constant    0
   283                           ;!    Data        0
   284                           ;!    BSS         0
   285                           ;!    Persistent  0
   286                           ;!    Stack       0
   287                           ;!
   288                           ;!Auto Spaces:
   289                           ;!    Space          Size  Autos    Used
   290                           ;!    COMMON           14      4       4
   291                           ;!    BANK0            80      0       0
   292                           ;!    BANK1            80      0       0
   293                           ;!    BANK3            96      0       0
   294                           ;!    BANK2            96      0       0
   295                           
   296                           ;!
   297                           ;!Pointer List with Targets:
   298                           ;!
   299                           ;!    None.
   300                           
   301                           
   302                           ;!
   303                           ;!Critical Paths under _main in COMMON
   304                           ;!
   305                           ;!    _main->_delay_100us
   306                           ;!
   307                           ;!Critical Paths under _main in BANK0
   308                           ;!
   309                           ;!    None.
   310                           ;!
   311                           ;!Critical Paths under _main in BANK1
   312                           ;!
   313                           ;!    None.
   314                           ;!
   315                           ;!Critical Paths under _main in BANK3
   316                           ;!
   317                           ;!    None.
   318                           ;!
   319                           ;!Critical Paths under _main in BANK2
   320                           ;!
   321                           ;!    None.
   322                           
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   325 ;;
   326                           
   327                           ;!
   328                           ;!Call Graph Tables:
   329                           ;!
   330                           ;! ---------------------------------------------------------------------------------
   331                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   332                           ;! ---------------------------------------------------------------------------------
   333                           ;! (0) _main                                                 0     0      0    1262
   334                           ;!                        _delay_100us
   335                           ;! ---------------------------------------------------------------------------------
   336                           ;! (1) _delay_100us                                          4     2      2    1262
   337                           ;!                                              0 COMMON     4     2      2
   338                           ;! ---------------------------------------------------------------------------------
   339                           ;! Estimated maximum stack depth 1
   340                           ;! ---------------------------------------------------------------------------------
   341                           ;!
   342                           ;! Call Graph Graphs:
   343                           ;!
   344                           ;! _main (ROOT)
   345                           ;!   _delay_100us
   346                           ;!
   347                           
   348                           ;! Address spaces:
   349                           
   350                           ;!Name               Size   Autos  Total    Cost      Usage
   351                           ;!BITCOMMON            E      0       0       0        0.0%
   352                           ;!EEDATA             100      0       0       0        0.0%
   353                           ;!NULL                 0      0       0       0        0.0%
   354                           ;!CODE                 0      0       0       0        0.0%
   355                           ;!COMMON               E      4       4       1       28.6%
   356                           ;!BITSFR0              0      0       0       1        0.0%
   357                           ;!SFR0                 0      0       0       1        0.0%
   358                           ;!BITSFR1              0      0       0       2        0.0%
   359                           ;!SFR1                 0      0       0       2        0.0%
   360                           ;!STACK                0      0       0       2        0.0%
   361                           ;!ABS                  0      0       0       3        0.0%
   362                           ;!BITBANK0            50      0       0       4        0.0%
   363                           ;!BITSFR3              0      0       0       4        0.0%
   364                           ;!SFR3                 0      0       0       4        0.0%
   365                           ;!BANK0               50      0       0       5        0.0%
   366                           ;!BITSFR2              0      0       0       5        0.0%
   367                           ;!SFR2                 0      0       0       5        0.0%
   368                           ;!BITBANK1            50      0       0       6        0.0%
   369                           ;!BANK1               50      0       0       7        0.0%
   370                           ;!BITBANK3            60      0       0       8        0.0%
   371                           ;!BANK3               60      0       0       9        0.0%
   372                           ;!BITBANK2            60      0       0      10        0.0%
   373                           ;!BANK2               60      0       0      11        0.0%
   374                           ;!DATA                 0      0       0      12        0.0%
   375                           
   376                           	global	_main
   377                           
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 39 in file "cau3.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels required when called:    1
   400 ;; This function calls:
   401 ;;		_delay_100us
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   407                           	file	"cau3.c"
   408                           	line	39
   409                           global __pmaintext
   410                           __pmaintext:	;psect for function _main
   411  0710                     psect	maintext
   412                           	file	"cau3.c"
   413                           	line	39
   414                           	global	__size_of_main
   415                           	__size_of_main	equ	__end_of_main-_main
   416  00EC                     	
   417                           _main:	
   418  0710                     ;incstack = 0
   419                           	opt	stack 7
   420                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   421                           	line	41
   422                           	
   423                           l664:	
   424  0710                     ;cau3.c: 41: ANSEL=ANSELH=0;
   425                           	bsf	status, 5	;RP0=1, select bank3
   426  0710  1683               	bsf	status, 6	;RP1=1, select bank3
   427  0711  1703               	clrf	(393)^0180h	;volatile
   428  0712  0189               	clrf	(392)^0180h	;volatile
   429  0713  0188               	line	42
   430                           ;cau3.c: 42: TRISD=0;
   431                           	bsf	status, 5	;RP0=1, select bank1
   432  0714  1683               	bcf	status, 6	;RP1=0, select bank1
   433  0715  1303               	clrf	(136)^080h	;volatile
   434  0716  0188               	line	43
   435                           	
   436                           l666:	
   437  0717                     ;cau3.c: 43: TRISB=0x07;
   438                           	movlw	low(07h)
   439  0717  3007               	movwf	(134)^080h	;volatile
   440  0718  0086               	line	44
   441                           	
   442                           l668:	
   443  0719                     ;cau3.c: 44: nRBPU=0;
   444                           	bcf	(1039/8)^080h,(1039)&7	;volatile
   445  0719  1381               	line	45
   446                           	
   447                           l670:	
   448  071A                     ;cau3.c: 45: WPUB=0x07;
   449                           	movlw	low(07h)
   450  071A  3007               	movwf	(149)^080h	;volatile
   451  071B  0095               	line	46
   452                           ;cau3.c: 46: PORTD=0;
   453                           	bcf	status, 5	;RP0=0, select bank0
   454  071C  1283               	bcf	status, 6	;RP1=0, select bank0
   455  071D  1303               	clrf	(8)	;volatile
   456  071E  0188               	line	47
   457                           	
   458                           l672:	
   459  071F                     ;cau3.c: 47: if(!RB1)
   460                           	btfsc	(49/8),(49)&7	;volatile
   461  071F  1886               	goto	u111
   462  0720  2F22               	goto	u110
   463  0721  2F23               u111:
   464  0722                     	goto	l684
   465  0722  2F4E               u110:
   466  0723                     	line	49
   467                           	
   468                           l674:	
   469  0723                     ;cau3.c: 48: {
   470                           ;cau3.c: 49: delay_100us(5);
   471                           	movlw	05h
   472  0723  3005               	movwf	(delay_100us@ms)
   473  0724  00F0               	movlw	0
   474  0725  3000               	movwf	((delay_100us@ms))+1
   475  0726  00F1               	fcall	_delay_100us
   476  0727  120A  118A  26E4  120A  118A  	line	50
   477                           ;cau3.c: 50: while(!RB0);
   478                           	goto	l57
   479  072C  2F2D               	
   480                           l58:	
   481  072D                     	
   482                           l57:	
   483  072D                     	bcf	status, 5	;RP0=0, select bank0
   484  072D  1283               	bcf	status, 6	;RP1=0, select bank0
   485  072E  1303               	btfss	(48/8),(48)&7	;volatile
   486  072F  1C06               	goto	u121
   487  0730  2F32               	goto	u120
   488  0731  2F33               u121:
   489  0732                     	goto	l57
   490  0732  2F2D               u120:
   491  0733                     	goto	l676
   492  0733  2F34               	
   493                           l59:	
   494  0734                     	line	52
   495                           	
   496                           l676:	
   497  0734                     ;cau3.c: 51: {
   498                           ;cau3.c: 52: delay_100us(5);
   499                           	movlw	05h
   500  0734  3005               	movwf	(delay_100us@ms)
   501  0735  00F0               	movlw	0
   502  0736  3000               	movwf	((delay_100us@ms))+1
   503  0737  00F1               	fcall	_delay_100us
   504  0738  120A  118A  26E4  120A  118A  	line	53
   505                           	
   506                           l678:	
   507  073D                     ;cau3.c: 53: PORTD=0b01010101;
   508                           	movlw	low(055h)
   509  073D  3055               	bcf	status, 5	;RP0=0, select bank0
   510  073E  1283               	bcf	status, 6	;RP1=0, select bank0
   511  073F  1303               	movwf	(8)	;volatile
   512  0740  0088               	line	54
   513                           	
   514                           l680:	
   515  0741                     ;cau3.c: 54: delay_100us(20000);
   516                           	movlw	020h
   517  0741  3020               	movwf	(delay_100us@ms)
   518  0742  00F0               	movlw	04Eh
   519  0743  304E               	movwf	((delay_100us@ms))+1
   520  0744  00F1               	fcall	_delay_100us
   521  0745  120A  118A  26E4  120A  118A  	line	55
   522                           	
   523                           l682:	
   524  074A                     ;cau3.c: 55: PORTD=0;
   525                           	bcf	status, 5	;RP0=0, select bank0
   526  074A  1283               	bcf	status, 6	;RP1=0, select bank0
   527  074B  1303               	clrf	(8)	;volatile
   528  074C  0188               	goto	l684
   529  074D  2F4E               	line	58
   530                           	
   531                           l56:	
   532  074E                     	line	59
   533                           	
   534                           l684:	
   535  074E                     ;cau3.c: 57: }
   536                           ;cau3.c: 58: }
   537                           ;cau3.c: 59: if(!RB0)
   538                           	btfsc	(48/8),(48)&7	;volatile
   539  074E  1806               	goto	u131
   540  074F  2F51               	goto	u130
   541  0750  2F52               u131:
   542  0751                     	goto	l696
   543  0751  2F7D               u130:
   544  0752                     	line	61
   545                           	
   546                           l686:	
   547  0752                     ;cau3.c: 60: {
   548                           ;cau3.c: 61: delay_100us(5);
   549                           	movlw	05h
   550  0752  3005               	movwf	(delay_100us@ms)
   551  0753  00F0               	movlw	0
   552  0754  3000               	movwf	((delay_100us@ms))+1
   553  0755  00F1               	fcall	_delay_100us
   554  0756  120A  118A  26E4  120A  118A  	line	62
   555                           ;cau3.c: 62: while(!RB0);
   556                           	goto	l61
   557  075B  2F5C               	
   558                           l62:	
   559  075C                     	
   560                           l61:	
   561  075C                     	bcf	status, 5	;RP0=0, select bank0
   562  075C  1283               	bcf	status, 6	;RP1=0, select bank0
   563  075D  1303               	btfss	(48/8),(48)&7	;volatile
   564  075E  1C06               	goto	u141
   565  075F  2F61               	goto	u140
   566  0760  2F62               u141:
   567  0761                     	goto	l61
   568  0761  2F5C               u140:
   569  0762                     	goto	l688
   570  0762  2F63               	
   571                           l63:	
   572  0763                     	line	64
   573                           	
   574                           l688:	
   575  0763                     ;cau3.c: 63: {
   576                           ;cau3.c: 64: delay_100us(5);
   577                           	movlw	05h
   578  0763  3005               	movwf	(delay_100us@ms)
   579  0764  00F0               	movlw	0
   580  0765  3000               	movwf	((delay_100us@ms))+1
   581  0766  00F1               	fcall	_delay_100us
   582  0767  120A  118A  26E4  120A  118A  	line	65
   583                           	
   584                           l690:	
   585  076C                     ;cau3.c: 65: PORTD=0b10101010;
   586                           	movlw	low(0AAh)
   587  076C  30AA               	bcf	status, 5	;RP0=0, select bank0
   588  076D  1283               	bcf	status, 6	;RP1=0, select bank0
   589  076E  1303               	movwf	(8)	;volatile
   590  076F  0088               	line	66
   591                           	
   592                           l692:	
   593  0770                     ;cau3.c: 66: delay_100us(10000);
   594                           	movlw	010h
   595  0770  3010               	movwf	(delay_100us@ms)
   596  0771  00F0               	movlw	027h
   597  0772  3027               	movwf	((delay_100us@ms))+1
   598  0773  00F1               	fcall	_delay_100us
   599  0774  120A  118A  26E4  120A  118A  	line	67
   600                           	
   601                           l694:	
   602  0779                     ;cau3.c: 67: PORTD=0;
   603                           	bcf	status, 5	;RP0=0, select bank0
   604  0779  1283               	bcf	status, 6	;RP1=0, select bank0
   605  077A  1303               	clrf	(8)	;volatile
   606  077B  0188               	goto	l696
   607  077C  2F7D               	line	70
   608                           	
   609                           l60:	
   610  077D                     	line	71
   611                           	
   612                           l696:	
   613  077D                     ;cau3.c: 69: }
   614                           ;cau3.c: 70: }
   615                           ;cau3.c: 71: if(!RB2)
   616                           	btfsc	(50/8),(50)&7	;volatile
   617  077D  1906               	goto	u151
   618  077E  2F80               	goto	u150
   619  077F  2F81               u151:
   620  0780                     	goto	l68
   621  0780  2FF9               u150:
   622  0781                     	line	73
   623                           	
   624                           l698:	
   625  0781                     ;cau3.c: 72: {
   626                           ;cau3.c: 73: delay_100us(5);
   627                           	movlw	05h
   628  0781  3005               	movwf	(delay_100us@ms)
   629  0782  00F0               	movlw	0
   630  0783  3000               	movwf	((delay_100us@ms))+1
   631  0784  00F1               	fcall	_delay_100us
   632  0785  120A  118A  26E4  120A  118A  	line	74
   633                           ;cau3.c: 74: while(!RB0);
   634                           	goto	l65
   635  078A  2F8B               	
   636                           l66:	
   637  078B                     	
   638                           l65:	
   639  078B                     	bcf	status, 5	;RP0=0, select bank0
   640  078B  1283               	bcf	status, 6	;RP1=0, select bank0
   641  078C  1303               	btfss	(48/8),(48)&7	;volatile
   642  078D  1C06               	goto	u161
   643  078E  2F90               	goto	u160
   644  078F  2F91               u161:
   645  0790                     	goto	l65
   646  0790  2F8B               u160:
   647  0791                     	goto	l700
   648  0791  2F92               	
   649                           l67:	
   650  0792                     	line	76
   651                           	
   652                           l700:	
   653  0792                     ;cau3.c: 75: {
   654                           ;cau3.c: 76: delay_100us(5);
   655                           	movlw	05h
   656  0792  3005               	movwf	(delay_100us@ms)
   657  0793  00F0               	movlw	0
   658  0794  3000               	movwf	((delay_100us@ms))+1
   659  0795  00F1               	fcall	_delay_100us
   660  0796  120A  118A  26E4  120A  118A  	line	77
   661                           	
   662                           l702:	
   663  079B                     ;cau3.c: 77: PORTD=0xFF;
   664                           	movlw	low(0FFh)
   665  079B  30FF               	bcf	status, 5	;RP0=0, select bank0
   666  079C  1283               	bcf	status, 6	;RP1=0, select bank0
   667  079D  1303               	movwf	(8)	;volatile
   668  079E  0088               	line	78
   669                           	
   670                           l704:	
   671  079F                     ;cau3.c: 78: delay_100us(5000);
   672                           	movlw	088h
   673  079F  3088               	movwf	(delay_100us@ms)
   674  07A0  00F0               	movlw	013h
   675  07A1  3013               	movwf	((delay_100us@ms))+1
   676  07A2  00F1               	fcall	_delay_100us
   677  07A3  120A  118A  26E4  120A  118A  	line	79
   678                           	
   679                           l706:	
   680  07A8                     ;cau3.c: 79: PORTD=0x00;
   681                           	bcf	status, 5	;RP0=0, select bank0
   682  07A8  1283               	bcf	status, 6	;RP1=0, select bank0
   683  07A9  1303               	clrf	(8)	;volatile
   684  07AA  0188               	line	80
   685                           	
   686                           l708:	
   687  07AB                     ;cau3.c: 80: delay_100us(5000);
   688                           	movlw	088h
   689  07AB  3088               	movwf	(delay_100us@ms)
   690  07AC  00F0               	movlw	013h
   691  07AD  3013               	movwf	((delay_100us@ms))+1
   692  07AE  00F1               	fcall	_delay_100us
   693  07AF  120A  118A  26E4  120A  118A  	line	81
   694                           	
   695                           l710:	
   696  07B4                     ;cau3.c: 81: delay_100us(5);
   697                           	movlw	05h
   698  07B4  3005               	movwf	(delay_100us@ms)
   699  07B5  00F0               	movlw	0
   700  07B6  3000               	movwf	((delay_100us@ms))+1
   701  07B7  00F1               	fcall	_delay_100us
   702  07B8  120A  118A  26E4  120A  118A  	line	82
   703                           	
   704                           l712:	
   705  07BD                     ;cau3.c: 82: PORTD=0xFF;
   706                           	movlw	low(0FFh)
   707  07BD  30FF               	bcf	status, 5	;RP0=0, select bank0
   708  07BE  1283               	bcf	status, 6	;RP1=0, select bank0
   709  07BF  1303               	movwf	(8)	;volatile
   710  07C0  0088               	line	83
   711                           	
   712                           l714:	
   713  07C1                     ;cau3.c: 83: delay_100us(5000);
   714                           	movlw	088h
   715  07C1  3088               	movwf	(delay_100us@ms)
   716  07C2  00F0               	movlw	013h
   717  07C3  3013               	movwf	((delay_100us@ms))+1
   718  07C4  00F1               	fcall	_delay_100us
   719  07C5  120A  118A  26E4  120A  118A  	line	84
   720                           	
   721                           l716:	
   722  07CA                     ;cau3.c: 84: PORTD=0x00;
   723                           	bcf	status, 5	;RP0=0, select bank0
   724  07CA  1283               	bcf	status, 6	;RP1=0, select bank0
   725  07CB  1303               	clrf	(8)	;volatile
   726  07CC  0188               	line	85
   727                           ;cau3.c: 85: delay_100us(5000);
   728                           	movlw	088h
   729  07CD  3088               	movwf	(delay_100us@ms)
   730  07CE  00F0               	movlw	013h
   731  07CF  3013               	movwf	((delay_100us@ms))+1
   732  07D0  00F1               	fcall	_delay_100us
   733  07D1  120A  118A  26E4  120A  118A  	line	86
   734                           ;cau3.c: 86: delay_100us(5);
   735                           	movlw	05h
   736  07D6  3005               	movwf	(delay_100us@ms)
   737  07D7  00F0               	movlw	0
   738  07D8  3000               	movwf	((delay_100us@ms))+1
   739  07D9  00F1               	fcall	_delay_100us
   740  07DA  120A  118A  26E4  120A  118A  	line	87
   741                           	
   742                           l718:	
   743  07DF                     ;cau3.c: 87: PORTD=0xFF;
   744                           	movlw	low(0FFh)
   745  07DF  30FF               	bcf	status, 5	;RP0=0, select bank0
   746  07E0  1283               	bcf	status, 6	;RP1=0, select bank0
   747  07E1  1303               	movwf	(8)	;volatile
   748  07E2  0088               	line	88
   749                           	
   750                           l720:	
   751  07E3                     ;cau3.c: 88: delay_100us(5000);
   752                           	movlw	088h
   753  07E3  3088               	movwf	(delay_100us@ms)
   754  07E4  00F0               	movlw	013h
   755  07E5  3013               	movwf	((delay_100us@ms))+1
   756  07E6  00F1               	fcall	_delay_100us
   757  07E7  120A  118A  26E4  120A  118A  	line	89
   758                           	
   759                           l722:	
   760  07EC                     ;cau3.c: 89: PORTD=0x00;
   761                           	bcf	status, 5	;RP0=0, select bank0
   762  07EC  1283               	bcf	status, 6	;RP1=0, select bank0
   763  07ED  1303               	clrf	(8)	;volatile
   764  07EE  0188               	line	90
   765                           	
   766                           l724:	
   767  07EF                     ;cau3.c: 90: delay_100us(5000);
   768                           	movlw	088h
   769  07EF  3088               	movwf	(delay_100us@ms)
   770  07F0  00F0               	movlw	013h
   771  07F1  3013               	movwf	((delay_100us@ms))+1
   772  07F2  00F1               	fcall	_delay_100us
   773  07F3  120A  118A  26E4  120A  118A  	goto	l68
   774  07F8  2FF9               	line	92
   775                           	
   776                           l64:	
   777  07F9                     	line	93
   778                           	
   779                           l68:	
   780  07F9                     	global	start
   781                           	ljmp	start
   782  07F9  120A  118A  2800   	opt stack 0
   783                           GLOBAL	__end_of_main
   784                           	__end_of_main:
   785  07FC                     	signat	_main,89
   786                           	global	_delay_100us
   787                           
   788 ;; *************** function _delay_100us *****************
   789 ;; Defined at:
   790 ;;		line 22 in file "cau3.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  ms              2    0[COMMON] unsigned int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  i               2    2[COMMON] unsigned int 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         2       0       0       0       0
   805 ;;      Locals:         2       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         4       0       0       0       0
   808 ;;Total ram usage:        4 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   817                           	line	22
   818                           global __ptext1
   819                           __ptext1:	;psect for function _delay_100us
   820  06E4                     psect	text1
   821                           	file	"cau3.c"
   822                           	line	22
   823                           	global	__size_of_delay_100us
   824                           	__size_of_delay_100us	equ	__end_of_delay_100us-_delay_100us
   825  002C                     	
   826                           _delay_100us:	
   827  06E4                     ;incstack = 0
   828                           	opt	stack 7
   829                           ; Regs used in _delay_100us: [wreg]
   830                           	line	25
   831                           	
   832                           l640:	
   833  06E4                     ;cau3.c: 24: unsigned int i;
   834                           ;cau3.c: 25: for(i=1; i<=ms; i++)
   835                           	movlw	01h
   836  06E4  3001               	movwf	(delay_100us@i)
   837  06E5  00F2               	movlw	0
   838  06E6  3000               	movwf	((delay_100us@i))+1
   839  06E7  00F3               	goto	l45
   840  06E8  2F04               	line	26
   841                           	
   842                           l46:	
   843  06E9                     	line	27
   844                           	
   845                           l642:	
   846  06E9                     ;cau3.c: 26: {
   847                           ;cau3.c: 27: TMR1H=255;
   848                           	movlw	low(0FFh)
   849  06E9  30FF               	bcf	status, 5	;RP0=0, select bank0
   850  06EA  1283               	bcf	status, 6	;RP1=0, select bank0
   851  06EB  1303               	movwf	(15)	;volatile
   852  06EC  008F               	line	28
   853                           ;cau3.c: 28: TMR1L=231;
   854                           	movlw	low(0E7h)
   855  06ED  30E7               	movwf	(14)	;volatile
   856  06EE  008E               	line	29
   857                           	
   858                           l644:	
   859  06EF                     ;cau3.c: 29: TMR1IF=0;
   860                           	bcf	(96/8),(96)&7	;volatile
   861  06EF  100C               	line	30
   862                           	
   863                           l646:	
   864  06F0                     ;cau3.c: 30: TMR1CS=0;
   865                           	bcf	(129/8),(129)&7	;volatile
   866  06F0  1090               	line	31
   867                           	
   868                           l648:	
   869  06F1                     ;cau3.c: 31: GIE=0;PEIE=0;TMR0IF=0;
   870                           	bcf	(95/8),(95)&7	;volatile
   871  06F1  138B               	
   872                           l650:	
   873  06F2                     	bcf	(94/8),(94)&7	;volatile
   874  06F2  130B               	
   875                           l652:	
   876  06F3                     	bcf	(90/8),(90)&7	;volatile
   877  06F3  110B               	line	32
   878                           	
   879                           l654:	
   880  06F4                     ;cau3.c: 32: T1CKPS1=1;T1CKPS0=0;
   881                           	bsf	(133/8),(133)&7	;volatile
   882  06F4  1690               	
   883                           l656:	
   884  06F5                     	bcf	(132/8),(132)&7	;volatile
   885  06F5  1210               	line	33
   886                           	
   887                           l658:	
   888  06F6                     ;cau3.c: 33: TMR1ON=1;
   889                           	bsf	(128/8),(128)&7	;volatile
   890  06F6  1410               	line	34
   891                           	
   892                           l660:	
   893  06F7                     ;cau3.c: 34: T1SYNC=1;
   894                           	bsf	(130/8),(130)&7	;volatile
   895  06F7  1510               	line	35
   896                           ;cau3.c: 35: while(TMR1IF==0);
   897                           	goto	l47
   898  06F8  2EF9               	
   899                           l48:	
   900  06F9                     	
   901                           l47:	
   902  06F9                     	btfss	(96/8),(96)&7	;volatile
   903  06F9  1C0C               	goto	u91
   904  06FA  2EFC               	goto	u90
   905  06FB  2EFD               u91:
   906  06FC                     	goto	l47
   907  06FC  2EF9               u90:
   908  06FD                     	goto	l662
   909  06FD  2EFE               	
   910                           l49:	
   911  06FE                     	line	25
   912                           	
   913                           l662:	
   914  06FE                     	movlw	01h
   915  06FE  3001               	addwf	(delay_100us@i),f
   916  06FF  07F2               	skipnc
   917  0700  1803               	incf	(delay_100us@i+1),f
   918  0701  0AF3               	movlw	0
   919  0702  3000               	addwf	(delay_100us@i+1),f
   920  0703  07F3               	
   921                           l45:	
   922  0704                     	movf	(delay_100us@i+1),w
   923  0704  0873               	subwf	(delay_100us@ms+1),w
   924  0705  0271               	skipz
   925  0706  1D03               	goto	u105
   926  0707  2F0A               	movf	(delay_100us@i),w
   927  0708  0872               	subwf	(delay_100us@ms),w
   928  0709  0270               u105:
   929  070A                     	skipnc
   930  070A  1803               	goto	u101
   931  070B  2F0D               	goto	u100
   932  070C  2F0E               u101:
   933  070D                     	goto	l642
   934  070D  2EE9               u100:
   935  070E                     	goto	l51
   936  070E  2F0F               	
   937                           l50:	
   938  070F                     	line	37
   939                           	
   940                           l51:	
   941  070F                     	return
   942  070F  0008               	opt stack 0
   943                           GLOBAL	__end_of_delay_100us
   944                           	__end_of_delay_100us:
   945  0710                     	signat	_delay_100us,4217
   946                           global	___latbits
   947                           ___latbits	equ	2
   948  0002                     	global	btemp
   949                           	btemp set 07Eh
   950  007E                     
   951                           	DABS	1,126,2	;btemp
   952                           	global	wtemp0
   953                           	wtemp0 set btemp+0
   954  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay_100us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1262
                        _delay_100us
 ---------------------------------------------------------------------------------
 (1) _delay_100us                                          4     2      2    1262
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_100us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 30 20:13:37 2021

            __CFG_CP$OFF 0000                       l50 070F                       l51 070F  
                     l60 077D                       l45 0704                       l61 075C  
                     l46 06E9                       l62 075C                       l47 06F9  
                     l63 0763                       l48 06F9                       l64 07F9  
                     l56 074E                       l49 06FE                       l65 078B  
                     l57 072D                       l66 078B                       l58 072D  
                     l67 0792                       l59 0734                       l68 07F9  
                     u90 06FD                       u91 06FC                      l700 0792  
                    l710 07B4                      l702 079B                      l640 06E4  
                    l720 07E3                      l712 07BD                      l704 079F  
                    l650 06F2                      l642 06E9                      l722 07EC  
                    l714 07C1                      l706 07A8                      l660 06F7  
                    l652 06F3                      l644 06EF                      l724 07EF  
                    l716 07CA                      l708 07AB                      l662 06FE  
                    l654 06F4                      l646 06F0                      l718 07DF  
                    l670 071A                      l656 06F5                      l648 06F1  
                    l680 0741                      l672 071F                      l664 0710  
                    l658 06F6                      l690 076C                      l682 074A  
                    l674 0723                      l666 0717                      l692 0770  
                    l676 0734                      l684 074E                      l668 0719  
                    l694 0779                      l686 0752                      l678 073D  
                    l688 0763                      l696 077D                      l698 0781  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      u100 070E                      u101 070D  
                    u110 0723                      u111 0722                      u120 0733  
                    u105 070A                      u121 0732                      u130 0752  
                    u131 0751                      u140 0762                      u141 0761  
                    u150 0781                      u151 0780                      u160 0791  
                    u161 0790             __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _PEIE 005E                     _WPUB 0095  
           __CFG_WRT$OFF 0000                     _main 0710                     btemp 007E  
                   start 0000            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088           __CFG_FCMEN$OFF 0000  
                  _nRBPU 040F     __size_of_delay_100us 002C           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   _ANSELH 0189  
                 _T1SYNC 0082                   _TMR0IF 005A                   _TMR1IF 0060  
                 _TMR1CS 0081                   _TMR1ON 0080           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0710  
          delay_100us@ms 0070                  _T1CKPS0 0084                  _T1CKPS1 0085  
                __ptext1 06E4            ??_delay_100us 0072     end_of_initialization 07FC  
    __end_of_delay_100us 0710      start_initialization 07FC                ___latbits 0002  
            _delay_100us 06E4             delay_100us@i 0072        __CFG_BOR4V$BOR40V 0000  
          __size_of_main 00EC             ?_delay_100us 0070  
