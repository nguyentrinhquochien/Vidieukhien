

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 01 23:08:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0044                     _RD4	set	68
   288  0045                     _RD5	set	69
   289  0046                     _RD6	set	70
   290  0047                     _RD7	set	71
   291  0043                     _RD3	set	67
   292  0041                     _RD1	set	65
   293  0042                     _RD2	set	66
   294  0442                     _TRISD2	set	1090
   295  0441                     _TRISD1	set	1089
   296  0443                     _TRISD3	set	1091
   297  0447                     _TRISD7	set	1095
   298  0446                     _TRISD6	set	1094
   299  0445                     _TRISD5	set	1093
   300  0444                     _TRISD4	set	1092
   301                           
   302                           	psect	strings
   303  0003                     __pstrings:
   304  0003                     stringtab:
   305  0003                     __stringtab:
   306  0003                     stringcode:	
   307                           ;	String table - string pointers are 1 byte each
   308                           
   309  0003                     stringdir:
   310  0003  3000               	movlw	high stringdir
   311  0004  008A               	movwf	10
   312  0005  0804               	movf	4,w
   313  0006  0A84               	incf	4,f
   314  0007  0782               	addwf	2,f
   315  0008                     __stringbase:
   316  0008  3400               	retlw	0
   317  0009                     __end_of__stringtab:
   318  0009                     STR_1:
   319  0009  340C               	retlw	12
   320  000A  344E               	retlw	78	;'N'
   321  000B  3467               	retlw	103	;'g'
   322  000C  3475               	retlw	117	;'u'
   323  000D  3479               	retlw	121	;'y'
   324  000E  3465               	retlw	101	;'e'
   325  000F  346E               	retlw	110	;'n'
   326  0010  3420               	retlw	32	;' '
   327  0011  3454               	retlw	84	;'T'
   328  0012  3472               	retlw	114	;'r'
   329  0013  3469               	retlw	105	;'i'
   330  0014  346E               	retlw	110	;'n'
   331  0015  3468               	retlw	104	;'h'
   332  0016  3420               	retlw	32	;' '
   333  0017  3451               	retlw	81	;'Q'
   334  0018  3475               	retlw	117	;'u'
   335  0019  346F               	retlw	111	;'o'
   336  001A  3463               	retlw	99	;'c'
   337  001B  3420               	retlw	32	;' '
   338  001C  3448               	retlw	72	;'H'
   339  001D  3469               	retlw	105	;'i'
   340  001E  3465               	retlw	101	;'e'
   341  001F  346E               	retlw	110	;'n'
   342  0020  340A               	retlw	10
   343  0021  3420               	retlw	32	;' '
   344  0022  3431               	retlw	49	;'1'
   345  0023  3439               	retlw	57	;'9'
   346  0024  3434               	retlw	52	;'4'
   347  0025  3437               	retlw	55	;'7'
   348  0026  3436               	retlw	54	;'6'
   349  0027  3430               	retlw	48	;'0'
   350  0028  3438               	retlw	56	;'8'
   351  0029  3431               	retlw	49	;'1'
   352  002A  3400               	retlw	0
   353  002B                     STR_2:
   354  002B  340C               	retlw	12
   355  002C  3444               	retlw	68	;'D'
   356  002D  3461               	retlw	97	;'a'
   357  002E  346D               	retlw	109	;'m'
   358  002F  3420               	retlw	32	;' '
   359  0030  3456               	retlw	86	;'V'
   360  0031  3461               	retlw	97	;'a'
   361  0032  346E               	retlw	110	;'n'
   362  0033  3420               	retlw	32	;' '
   363  0034  344B               	retlw	75	;'K'
   364  0035  3468               	retlw	104	;'h'
   365  0036  3461               	retlw	97	;'a'
   366  0037  346E               	retlw	110	;'n'
   367  0038  3467               	retlw	103	;'g'
   368  0039  340A               	retlw	10
   369  003A  3420               	retlw	32	;' '
   370  003B  3431               	retlw	49	;'1'
   371  003C  3437               	retlw	55	;'7'
   372  003D  3430               	retlw	48	;'0'
   373  003E  3435               	retlw	53	;'5'
   374  003F  3434               	retlw	52	;'4'
   375  0040  3432               	retlw	50	;'2'
   376  0041  3434               	retlw	52	;'4'
   377  0042  3431               	retlw	49	;'1'
   378  0043  3400               	retlw	0
   379                           
   380                           	psect	cinit
   381  07FC                     start_initialization:	
   382                           ; #config settings
   383                           
   384  07FC                     __initialization:
   385  07FC                     end_of_initialization:	
   386                           ;End of C runtime variable initialization code
   387                           
   388  07FC                     __end_of__initialization:
   389  07FC  0183               	clrf	3
   390  07FD  120A  118A  2E4F   	ljmp	_main	;jump to C main() function
   391                           
   392                           	psect	cstackCOMMON
   393  0070                     __pcstackCOMMON:
   394  0070                     ?_lcd_init:
   395  0070                     ?_lcd_puts:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_lcd_busy:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_lcd_busy:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_lcd_put_nibble:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_lcd_put_nibble:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_lcd_putc:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           ; 1 bytes @ 0x0
   418  0070                     	ds	1
   419  0071                     lcd_busy@busy:
   420  0071                     lcd_put_nibble@b:	
   421                           ; 1 bytes @ 0x1
   422                           
   423                           
   424                           ; 1 bytes @ 0x1
   425  0071                     	ds	1
   426  0072                     lcd_put_nibble@temp:
   427                           
   428                           ; 1 bytes @ 0x2
   429  0072                     	ds	1
   430  0073                     ?_lcd_put_byte:
   431  0073                     lcd_put_byte@b:	
   432                           ; 1 bytes @ 0x3
   433                           
   434                           
   435                           ; 1 bytes @ 0x3
   436  0073                     	ds	1
   437  0074                     ??_lcd_put_byte:
   438                           
   439                           ; 1 bytes @ 0x4
   440  0074                     	ds	1
   441  0075                     lcd_put_byte@rs:
   442                           
   443                           ; 1 bytes @ 0x5
   444  0075                     	ds	1
   445  0076                     ??_lcd_init:
   446  0076                     ?_lcd_gotoxy:	
   447                           ; 1 bytes @ 0x6
   448                           
   449  0076                     lcd_gotoxy@row:	
   450                           ; 1 bytes @ 0x6
   451                           
   452                           
   453                           ; 1 bytes @ 0x6
   454  0076                     	ds	1
   455  0077                     ??_lcd_gotoxy:
   456                           
   457                           ; 1 bytes @ 0x7
   458  0077                     	ds	1
   459  0078                     lcd_gotoxy@col:
   460                           
   461                           ; 1 bytes @ 0x8
   462  0078                     	ds	1
   463  0079                     lcd_gotoxy@address:
   464                           
   465                           ; 1 bytes @ 0x9
   466  0079                     	ds	1
   467  007A                     ??_lcd_putc:
   468                           
   469                           ; 1 bytes @ 0xA
   470  007A                     	ds	2
   471  007C                     lcd_putc@c:
   472                           
   473                           ; 1 bytes @ 0xC
   474  007C                     	ds	1
   475  007D                     ??_lcd_puts:
   476                           
   477                           ; 1 bytes @ 0xD
   478  007D                     	ds	1
   479                           
   480                           	psect	cstackBANK0
   481  0020                     __pcstackBANK0:
   482  0020                     lcd_puts@s:
   483                           
   484                           ; 1 bytes @ 0x0
   485  0020                     	ds	1
   486  0021                     ??_main:
   487                           
   488                           ; 1 bytes @ 0x1
   489  0021                     	ds	3
   490                           
   491                           	psect	maintext
   492  064F                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 26 in file "LCD123.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  i               2    0        unsigned int 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       3       0       0       0
   515 ;;      Totals:         0       3       0       0       0
   516 ;;Total ram usage:        3 bytes
   517 ;; Hardware stack levels required when called: 5
   518 ;; This function calls:
   519 ;;		_lcd_init
   520 ;;		_lcd_puts
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  064F                     _main:
   529  064F                     l11:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           ;LCD123.c: 28:      unsigned int i;;LCD123.c: 29:     while(1)
   533                           
   534  064F                     l1099:
   535                           
   536                           ;LCD123.c: 30:     {;LCD123.c: 32:     lcd_init();
   537  064F  120A  118A  2759  120A  118A  	fcall	_lcd_init
   538  0654                     l1101:
   539                           
   540                           ;LCD123.c: 33:     lcd_puts("\fNguyen Trinh Quoc Hien\n 19476081");
   541  0654  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   542  0655  120A  118A  25D6  120A  118A  	fcall	_lcd_puts
   543  065A                     l1103:
   544                           
   545                           ;LCD123.c: 34:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   546  065A  300B               	movlw	11
   547  065B  1283               	bcf	3,5	;RP0=0, select bank0
   548  065C  1303               	bcf	3,6	;RP1=0, select bank0
   549  065D  00A3               	movwf	??_main+2
   550  065E  3026               	movlw	38
   551  065F  00A2               	movwf	??_main+1
   552  0660  305D               	movlw	93
   553  0661  00A1               	movwf	??_main
   554  0662                     u587:
   555  0662  0BA1               	decfsz	??_main,f
   556  0663  2E62               	goto	u587
   557  0664  0BA2               	decfsz	??_main+1,f
   558  0665  2E62               	goto	u587
   559  0666  0BA3               	decfsz	??_main+2,f
   560  0667  2E62               	goto	u587
   561  0668                     l1105:
   562                           
   563                           ;LCD123.c: 35:     lcd_puts("\fDam Van Khang\n 17054241");
   564  0668  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   565  0669  120A  118A  25D6  120A  118A  	fcall	_lcd_puts
   566  066E                     l1107:
   567                           
   568                           ;LCD123.c: 36:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   569  066E  300B               	movlw	11
   570  066F  1283               	bcf	3,5	;RP0=0, select bank0
   571  0670  1303               	bcf	3,6	;RP1=0, select bank0
   572  0671  00A3               	movwf	??_main+2
   573  0672  3026               	movlw	38
   574  0673  00A2               	movwf	??_main+1
   575  0674  305D               	movlw	93
   576  0675  00A1               	movwf	??_main
   577  0676                     u597:
   578  0676  0BA1               	decfsz	??_main,f
   579  0677  2E76               	goto	u597
   580  0678  0BA2               	decfsz	??_main+1,f
   581  0679  2E76               	goto	u597
   582  067A  0BA3               	decfsz	??_main+2,f
   583  067B  2E76               	goto	u597
   584  067C  2E4F               	goto	l11
   585  067D  120A  118A  2800   	ljmp	start
   586  0680                     __end_of_main:
   587                           
   588                           	psect	text1
   589  05D6                     __ptext1:	
   590 ;; *************** function _lcd_puts *****************
   591 ;; Defined at:
   592 ;;		line 224 in file "lcd.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  s               1    wreg     PTR const unsigned char 
   595 ;;		 -> STR_2(25), STR_1(34), 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   598 ;;		 -> STR_2(25), STR_1(34), 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       1       0       0       0
   610 ;;      Temps:          1       0       0       0       0
   611 ;;      Totals:         1       1       0       0       0
   612 ;;Total ram usage:        2 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; Hardware stack levels required when called: 4
   615 ;; This function calls:
   616 ;;		_lcd_putc
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _lcd_puts
   624  05D6                     _lcd_puts:
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   628                           ;lcd_puts@s stored from wreg
   629  05D6  1283               	bcf	3,5	;RP0=0, select bank0
   630  05D7  1303               	bcf	3,6	;RP1=0, select bank0
   631  05D8  00A0               	movwf	lcd_puts@s
   632  05D9                     l1087:
   633                           
   634                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   635  05D9  2DEC               	goto	l1093
   636  05DA                     l1089:
   637                           
   638                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   639  05DA  0820               	movf	lcd_puts@s,w
   640  05DB  0084               	movwf	4
   641  05DC  120A  118A  2003  120A  118A  	fcall	stringdir
   642  05E1  120A  118A  26FD  120A  118A  	fcall	_lcd_putc
   643  05E6                     l1091:
   644  05E6  3001               	movlw	1
   645  05E7  00FD               	movwf	??_lcd_puts
   646  05E8  087D               	movf	??_lcd_puts,w
   647  05E9  1283               	bcf	3,5	;RP0=0, select bank0
   648  05EA  1303               	bcf	3,6	;RP1=0, select bank0
   649  05EB  07A0               	addwf	lcd_puts@s,f
   650  05EC                     l1093:
   651                           
   652                           ;lcd.c: 229:  while(*s)
   653  05EC  0820               	movf	lcd_puts@s,w
   654  05ED  0084               	movwf	4
   655  05EE  120A  118A  2003  120A  118A  	fcall	stringdir
   656  05F3  3A00               	xorlw	0
   657  05F4  1D03               	skipz
   658  05F5  2DF7               	goto	u541
   659  05F6  2DF8               	goto	u540
   660  05F7                     u541:
   661  05F7  2DDA               	goto	l1089
   662  05F8                     u540:
   663  05F8                     l92:
   664  05F8  0008               	return
   665  05F9                     __end_of_lcd_puts:
   666                           
   667                           	psect	text2
   668  06FD                     __ptext2:	
   669 ;; *************** function _lcd_putc *****************
   670 ;; Defined at:
   671 ;;		line 190 in file "lcd.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  c               1    wreg     unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  c               1   12[COMMON] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0
   687 ;;      Temps:          2       0       0       0       0
   688 ;;      Totals:         3       0       0       0       0
   689 ;;Total ram usage:        3 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 3
   692 ;; This function calls:
   693 ;;		_lcd_busy
   694 ;;		_lcd_gotoxy
   695 ;;		_lcd_put_byte
   696 ;; This function is called by:
   697 ;;		_lcd_puts
   698 ;;		_lcd_String_Delay
   699 ;;		_putch
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _lcd_putc
   705  06FD                     _lcd_putc:
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   709                           ;lcd_putc@c stored from wreg
   710  06FD  00FC               	movwf	lcd_putc@c
   711  06FE                     l1027:
   712                           
   713                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   714  06FE  2F45               	goto	l1043
   715  06FF                     l1029:
   716                           
   717                           ;lcd.c: 198:    lcd_put_byte(0,1);
   718  06FF  01F3               	clrf	lcd_put_byte@b
   719  0700  0AF3               	incf	lcd_put_byte@b,f
   720  0701  3000               	movlw	0
   721  0702  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   722  0707                     l1031:	
   723                           ;lcd.c: 199:    while(lcd_busy());
   724                           
   725  0707  120A  118A  261F  120A  118A  	fcall	_lcd_busy
   726  070C  3A00               	xorlw	0
   727  070D  1D03               	skipz
   728  070E  2F10               	goto	u461
   729  070F  2F11               	goto	u460
   730  0710                     u461:
   731  0710  2F07               	goto	l1031
   732  0711                     u460:
   733  0711  2F58               	goto	l86
   734  0712                     l1033:
   735                           
   736                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   737  0712  01F6               	clrf	lcd_gotoxy@row
   738  0713  0AF6               	incf	lcd_gotoxy@row,f
   739  0714  3000               	movlw	0
   740  0715  120A  118A  25F9  120A  118A  	fcall	_lcd_gotoxy
   741                           
   742                           ;lcd.c: 203:    break;
   743  071A  2F58               	goto	l86
   744  071B                     l1035:
   745                           
   746                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   747  071B  3010               	movlw	16
   748  071C  00FA               	movwf	??_lcd_putc
   749  071D  087A               	movf	??_lcd_putc,w
   750  071E  00F3               	movwf	lcd_put_byte@b
   751  071F  3000               	movlw	0
   752  0720  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   753  0725                     l1037:	
   754                           ;lcd.c: 206:    while(lcd_busy());
   755                           
   756  0725  120A  118A  261F  120A  118A  	fcall	_lcd_busy
   757  072A  3A00               	xorlw	0
   758  072B  1D03               	skipz
   759  072C  2F2E               	goto	u471
   760  072D  2F2F               	goto	u470
   761  072E                     u471:
   762  072E  2F25               	goto	l1037
   763  072F                     u470:
   764  072F  2F58               	goto	l86
   765  0730                     l1039:
   766                           
   767                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   768  0730  087C               	movf	lcd_putc@c,w
   769  0731  00FA               	movwf	??_lcd_putc
   770  0732  087A               	movf	??_lcd_putc,w
   771  0733  00F3               	movwf	lcd_put_byte@b
   772  0734  3001               	movlw	1
   773  0735  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   774  073A                     l1041:	
   775                           ;lcd.c: 212:     while(lcd_busy());
   776                           
   777  073A  120A  118A  261F  120A  118A  	fcall	_lcd_busy
   778  073F  3A00               	xorlw	0
   779  0740  1D03               	skipz
   780  0741  2F43               	goto	u481
   781  0742  2F44               	goto	u480
   782  0743                     u481:
   783  0743  2F3A               	goto	l1041
   784  0744                     u480:
   785  0744  2F58               	goto	l86
   786  0745                     l1043:
   787  0745  087C               	movf	lcd_putc@c,w
   788  0746  00FA               	movwf	??_lcd_putc
   789  0747  01FB               	clrf	??_lcd_putc+1
   790                           
   791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   792                           ; Switch size 1, requested type "simple"
   793                           ; Number of cases is 1, Range of values is 0 to 0
   794                           ; switch strategies available:
   795                           ; Name         Instructions Cycles
   796                           ; simple_byte            4     3 (average)
   797                           ; direct_byte           11     8 (fixed)
   798                           ; jumptable            260     6 (fixed)
   799                           ;	Chosen strategy is simple_byte
   800  0748  087B               	movf	??_lcd_putc+1,w
   801  0749  3A00               	xorlw	0	; case 0
   802  074A  1903               	skipnz
   803  074B  2F4D               	goto	l1159
   804  074C  2F30               	goto	l1039
   805  074D                     l1159:
   806                           
   807                           ; Switch size 1, requested type "simple"
   808                           ; Number of cases is 3, Range of values is 8 to 12
   809                           ; switch strategies available:
   810                           ; Name         Instructions Cycles
   811                           ; simple_byte           10     6 (average)
   812                           ; direct_byte           26    11 (fixed)
   813                           ; jumptable            263     9 (fixed)
   814                           ;	Chosen strategy is simple_byte
   815  074D  087A               	movf	??_lcd_putc,w
   816  074E  3A08               	xorlw	8	; case 8
   817  074F  1903               	skipnz
   818  0750  2F1B               	goto	l1035
   819  0751  3A02               	xorlw	2	; case 10
   820  0752  1903               	skipnz
   821  0753  2F12               	goto	l1033
   822  0754  3A06               	xorlw	6	; case 12
   823  0755  1903               	skipnz
   824  0756  2EFF               	goto	l1029
   825  0757  2F30               	goto	l1039
   826  0758                     l86:
   827  0758  0008               	return
   828  0759                     __end_of_lcd_putc:
   829                           
   830                           	psect	text3
   831  05F9                     __ptext3:	
   832 ;; *************** function _lcd_gotoxy *****************
   833 ;; Defined at:
   834 ;;		line 167 in file "lcd.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  col             1    wreg     unsigned char 
   837 ;;  row             1    6[COMMON] unsigned char 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  col             1    8[COMMON] unsigned char 
   840 ;;  address         1    9[COMMON] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         1       0       0       0       0
   851 ;;      Locals:         2       0       0       0       0
   852 ;;      Temps:          1       0       0       0       0
   853 ;;      Totals:         4       0       0       0       0
   854 ;;Total ram usage:        4 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 2
   857 ;; This function calls:
   858 ;;		_lcd_busy
   859 ;;		_lcd_put_byte
   860 ;; This function is called by:
   861 ;;		_lcd_putc
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _lcd_gotoxy
   867  05F9                     _lcd_gotoxy:
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
   871                           ;lcd_gotoxy@col stored from wreg
   872  05F9  00F8               	movwf	lcd_gotoxy@col
   873  05FA                     l1015:
   874                           
   875                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   876  05FA  0876               	movf	lcd_gotoxy@row,w
   877  05FB  1903               	btfsc	3,2
   878  05FC  2DFE               	goto	u441
   879  05FD  2DFF               	goto	u440
   880  05FE                     u441:
   881  05FE  2E04               	goto	l1019
   882  05FF                     u440:
   883  05FF                     l1017:
   884                           
   885                           ;lcd.c: 174:   address=0x40;
   886  05FF  3040               	movlw	64
   887  0600  00F7               	movwf	??_lcd_gotoxy
   888  0601  0877               	movf	??_lcd_gotoxy,w
   889  0602  00F9               	movwf	lcd_gotoxy@address
   890  0603  2E05               	goto	l1021
   891  0604                     l1019:
   892                           
   893                           ;lcd.c: 176:   address=0;
   894  0604  01F9               	clrf	lcd_gotoxy@address
   895  0605                     l1021:
   896                           
   897                           ;lcd.c: 178:  address += col;
   898  0605  0878               	movf	lcd_gotoxy@col,w
   899  0606  00F7               	movwf	??_lcd_gotoxy
   900  0607  0877               	movf	??_lcd_gotoxy,w
   901  0608  07F9               	addwf	lcd_gotoxy@address,f
   902  0609                     l1023:
   903                           
   904                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   905  0609  0879               	movf	lcd_gotoxy@address,w
   906  060A  3880               	iorlw	128
   907  060B  00F7               	movwf	??_lcd_gotoxy
   908  060C  0877               	movf	??_lcd_gotoxy,w
   909  060D  00F3               	movwf	lcd_put_byte@b
   910  060E  3000               	movlw	0
   911  060F  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
   912  0614                     l1025:	
   913                           ;lcd.c: 181:  while(lcd_busy());
   914                           
   915  0614  120A  118A  261F  120A  118A  	fcall	_lcd_busy
   916  0619  3A00               	xorlw	0
   917  061A  1D03               	skipz
   918  061B  2E1D               	goto	u451
   919  061C  2E1E               	goto	u450
   920  061D                     u451:
   921  061D  2E14               	goto	l1025
   922  061E                     u450:
   923  061E                     l68:
   924  061E  0008               	return
   925  061F                     __end_of_lcd_gotoxy:
   926                           
   927                           	psect	text4
   928  0759                     __ptext4:	
   929 ;; *************** function _lcd_init *****************
   930 ;; Defined at:
   931 ;;		line 241 in file "lcd.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  i               1    0        unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, pclath, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0
   947 ;;      Temps:          2       0       0       0       0
   948 ;;      Totals:         2       0       0       0       0
   949 ;;Total ram usage:        2 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 2
   952 ;; This function calls:
   953 ;;		_lcd_busy
   954 ;;		_lcd_put_byte
   955 ;;		_lcd_put_nibble
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _lcd_init
   963  0759                     _lcd_init:
   964  0759                     l1049:	
   965                           ;incstack = 0
   966                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   967                           
   968                           
   969                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
   970  0759  1683               	bsf	3,5	;RP0=1, select bank1
   971  075A  1303               	bcf	3,6	;RP1=0, select bank1
   972  075B  1188               	bcf	8,3	;volatile
   973                           
   974                           ;lcd.c: 248:  TRISD1 = 0;
   975  075C  1088               	bcf	8,1	;volatile
   976                           
   977                           ;lcd.c: 249:  TRISD2 = 0;
   978  075D  1108               	bcf	8,2	;volatile
   979                           
   980                           ;lcd.c: 250:  TRISD4 = 0;
   981  075E  1208               	bcf	8,4	;volatile
   982                           
   983                           ;lcd.c: 251:  TRISD5 = 0;
   984  075F  1288               	bcf	8,5	;volatile
   985                           
   986                           ;lcd.c: 252:  TRISD6 = 0;
   987  0760  1308               	bcf	8,6	;volatile
   988                           
   989                           ;lcd.c: 253:  TRISD7 = 0;
   990  0761  1388               	bcf	8,7	;volatile
   991  0762                     l1051:
   992                           
   993                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
   994  0762  3014               	movlw	20
   995  0763  00F7               	movwf	??_lcd_init+1
   996  0764  3079               	movlw	121
   997  0765  00F6               	movwf	??_lcd_init
   998  0766                     u607:
   999  0766  0BF6               	decfsz	??_lcd_init,f
  1000  0767  2F66               	goto	u607
  1001  0768  0BF7               	decfsz	??_lcd_init+1,f
  1002  0769  2F66               	goto	u607
  1003  076A  2F6B               	nop2
  1004  076B                     l1053:
  1005                           
  1006                           ;lcd.c: 257:  RD1 = 0;
  1007  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1008  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1009  076D  1088               	bcf	8,1	;volatile
  1010  076E                     l1055:
  1011                           
  1012                           ;lcd.c: 258:  RD2 = 0;
  1013  076E  1108               	bcf	8,2	;volatile
  1014  076F                     l1057:
  1015                           
  1016                           ;lcd.c: 259:  RD3 = 0;
  1017  076F  1188               	bcf	8,3	;volatile
  1018  0770                     l1059:
  1019                           
  1020                           ;lcd.c: 261:  lcd_put_nibble(3);
  1021  0770  3003               	movlw	3
  1022  0771  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1023  0776                     l1061:
  1024                           
  1025                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1026  0776  300D               	movlw	13
  1027  0777  00F7               	movwf	??_lcd_init+1
  1028  0778  30FB               	movlw	251
  1029  0779  00F6               	movwf	??_lcd_init
  1030  077A                     u617:
  1031  077A  0BF6               	decfsz	??_lcd_init,f
  1032  077B  2F7A               	goto	u617
  1033  077C  0BF7               	decfsz	??_lcd_init+1,f
  1034  077D  2F7A               	goto	u617
  1035  077E  2F7F               	nop2
  1036                           
  1037                           ;lcd.c: 263:  lcd_put_nibble(3);
  1038  077F  3003               	movlw	3
  1039  0780  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1040  0785                     l1063:
  1041                           
  1042                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1043  0785  300D               	movlw	13
  1044  0786  00F7               	movwf	??_lcd_init+1
  1045  0787  30FB               	movlw	251
  1046  0788  00F6               	movwf	??_lcd_init
  1047  0789                     u627:
  1048  0789  0BF6               	decfsz	??_lcd_init,f
  1049  078A  2F89               	goto	u627
  1050  078B  0BF7               	decfsz	??_lcd_init+1,f
  1051  078C  2F89               	goto	u627
  1052  078D  2F8E               	nop2
  1053  078E                     l1065:
  1054                           
  1055                           ;lcd.c: 265:  lcd_put_nibble(3);
  1056  078E  3003               	movlw	3
  1057  078F  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1058                           
  1059                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1060  0794  300D               	movlw	13
  1061  0795  00F7               	movwf	??_lcd_init+1
  1062  0796  30FB               	movlw	251
  1063  0797  00F6               	movwf	??_lcd_init
  1064  0798                     u637:
  1065  0798  0BF6               	decfsz	??_lcd_init,f
  1066  0799  2F98               	goto	u637
  1067  079A  0BF7               	decfsz	??_lcd_init+1,f
  1068  079B  2F98               	goto	u637
  1069  079C  2F9D               	nop2
  1070  079D                     l1067:
  1071                           
  1072                           ;lcd.c: 268:  lcd_put_nibble(2);
  1073  079D  3002               	movlw	2
  1074  079E  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1075  07A3                     l1069:	
  1076                           ;lcd.c: 269:  while(lcd_busy());
  1077                           
  1078  07A3  120A  118A  261F  120A  118A  	fcall	_lcd_busy
  1079  07A8  3A00               	xorlw	0
  1080  07A9  1D03               	skipz
  1081  07AA  2FAC               	goto	u491
  1082  07AB  2FAD               	goto	u490
  1083  07AC                     u491:
  1084  07AC  2FA3               	goto	l1069
  1085  07AD                     u490:
  1086  07AD                     l1071:
  1087                           
  1088                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1089  07AD  3028               	movlw	40
  1090  07AE  00F6               	movwf	??_lcd_init
  1091  07AF  0876               	movf	??_lcd_init,w
  1092  07B0  00F3               	movwf	lcd_put_byte@b
  1093  07B1  3000               	movlw	0
  1094  07B2  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1095  07B7                     l1073:	
  1096                           ;lcd.c: 272:  while(lcd_busy());
  1097                           
  1098  07B7  120A  118A  261F  120A  118A  	fcall	_lcd_busy
  1099  07BC  3A00               	xorlw	0
  1100  07BD  1D03               	skipz
  1101  07BE  2FC0               	goto	u501
  1102  07BF  2FC1               	goto	u500
  1103  07C0                     u501:
  1104  07C0  2FB7               	goto	l1073
  1105  07C1                     u500:
  1106  07C1                     l1075:
  1107                           
  1108                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1109  07C1  300C               	movlw	12
  1110  07C2  00F6               	movwf	??_lcd_init
  1111  07C3  0876               	movf	??_lcd_init,w
  1112  07C4  00F3               	movwf	lcd_put_byte@b
  1113  07C5  3000               	movlw	0
  1114  07C6  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1115  07CB                     l1077:	
  1116                           ;lcd.c: 275:  while(lcd_busy());
  1117                           
  1118  07CB  120A  118A  261F  120A  118A  	fcall	_lcd_busy
  1119  07D0  3A00               	xorlw	0
  1120  07D1  1D03               	skipz
  1121  07D2  2FD4               	goto	u511
  1122  07D3  2FD5               	goto	u510
  1123  07D4                     u511:
  1124  07D4  2FCB               	goto	l1077
  1125  07D5                     u510:
  1126  07D5                     l1079:
  1127                           
  1128                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1129  07D5  01F3               	clrf	lcd_put_byte@b
  1130  07D6  0AF3               	incf	lcd_put_byte@b,f
  1131  07D7  3000               	movlw	0
  1132  07D8  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1133  07DD                     l1081:	
  1134                           ;lcd.c: 278:  while(lcd_busy());
  1135                           
  1136  07DD  120A  118A  261F  120A  118A  	fcall	_lcd_busy
  1137  07E2  3A00               	xorlw	0
  1138  07E3  1D03               	skipz
  1139  07E4  2FE6               	goto	u521
  1140  07E5  2FE7               	goto	u520
  1141  07E6                     u521:
  1142  07E6  2FDD               	goto	l1081
  1143  07E7                     u520:
  1144  07E7                     l1083:
  1145                           
  1146                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1147  07E7  3006               	movlw	6
  1148  07E8  00F6               	movwf	??_lcd_init
  1149  07E9  0876               	movf	??_lcd_init,w
  1150  07EA  00F3               	movwf	lcd_put_byte@b
  1151  07EB  3000               	movlw	0
  1152  07EC  120A  118A  2680  120A  118A  	fcall	_lcd_put_byte
  1153  07F1                     l1085:	
  1154                           ;lcd.c: 281:  while(lcd_busy());
  1155                           
  1156  07F1  120A  118A  261F  120A  118A  	fcall	_lcd_busy
  1157  07F6  3A00               	xorlw	0
  1158  07F7  1D03               	skipz
  1159  07F8  2FFA               	goto	u531
  1160  07F9  2FFB               	goto	u530
  1161  07FA                     u531:
  1162  07FA  2FF1               	goto	l1085
  1163  07FB                     u530:
  1164  07FB                     l110:
  1165  07FB  0008               	return
  1166  07FC                     __end_of_lcd_init:
  1167                           
  1168                           	psect	text5
  1169  0680                     __ptext5:	
  1170 ;; *************** function _lcd_put_byte *****************
  1171 ;; Defined at:
  1172 ;;		line 134 in file "lcd.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  rs              1    wreg     unsigned char 
  1175 ;;  b               1    3[COMMON] unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  rs              1    5[COMMON] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         1       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0
  1189 ;;      Temps:          1       0       0       0       0
  1190 ;;      Totals:         3       0       0       0       0
  1191 ;;Total ram usage:        3 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 1
  1194 ;; This function calls:
  1195 ;;		_lcd_put_nibble
  1196 ;; This function is called by:
  1197 ;;		_lcd_gotoxy
  1198 ;;		_lcd_putc
  1199 ;;		_lcd_init
  1200 ;;		_lcd_ShiftLeft
  1201 ;;		_lcd_ShiftRight
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _lcd_put_byte
  1207  0680                     _lcd_put_byte:
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1211                           ;lcd_put_byte@rs stored from wreg
  1212  0680  00F5               	movwf	lcd_put_byte@rs
  1213  0681                     l999:
  1214                           
  1215                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1216  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1217  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1218  0683  1208               	bcf	8,4	;volatile
  1219                           
  1220                           ;lcd.c: 140:  TRISD5 = 0;
  1221  0684  1288               	bcf	8,5	;volatile
  1222                           
  1223                           ;lcd.c: 141:  TRISD6 = 0;
  1224  0685  1308               	bcf	8,6	;volatile
  1225                           
  1226                           ;lcd.c: 142:  TRISD7 = 0;
  1227  0686  1388               	bcf	8,7	;volatile
  1228  0687                     l1001:
  1229                           
  1230                           ;lcd.c: 144:  if(rs)
  1231  0687  0875               	movf	lcd_put_byte@rs,w
  1232  0688  1903               	btfsc	3,2
  1233  0689  2E8B               	goto	u421
  1234  068A  2E8C               	goto	u420
  1235  068B                     u421:
  1236  068B  2E90               	goto	l58
  1237  068C                     u420:
  1238  068C                     l1003:
  1239                           
  1240                           ;lcd.c: 145:   RD1 = 1;
  1241  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1242  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1243  068E  1488               	bsf	8,1	;volatile
  1244  068F  2E93               	goto	l1005
  1245  0690                     l58:	
  1246                           ;lcd.c: 146:  else
  1247                           
  1248                           
  1249                           ;lcd.c: 147:   RD1 = 0;
  1250  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0692  1088               	bcf	8,1	;volatile
  1253  0693                     l1005:
  1254                           
  1255                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1256  0693  3006               	movlw	6
  1257  0694  00F4               	movwf	??_lcd_put_byte
  1258  0695                     u647:
  1259  0695  0BF4               	decfsz	??_lcd_put_byte,f
  1260  0696  2E95               	goto	u647
  1261  0697  0000               	nop
  1262  0698                     l1007:
  1263                           
  1264                           ;lcd.c: 150:  RD2 = 0;
  1265  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1267  069A  1108               	bcf	8,2	;volatile
  1268                           
  1269                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1270  069B  3006               	movlw	6
  1271  069C  00F4               	movwf	??_lcd_put_byte
  1272  069D                     u657:
  1273  069D  0BF4               	decfsz	??_lcd_put_byte,f
  1274  069E  2E9D               	goto	u657
  1275  069F  0000               	nop
  1276  06A0                     l1009:
  1277                           
  1278                           ;lcd.c: 153:  RD3 = 0;
  1279  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1280  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1281  06A2  1188               	bcf	8,3	;volatile
  1282  06A3                     l1011:
  1283                           
  1284                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1285  06A3  0873               	movf	lcd_put_byte@b,w
  1286  06A4  00F4               	movwf	??_lcd_put_byte
  1287  06A5  3004               	movlw	4
  1288  06A6                     u435:
  1289  06A6  1003               	clrc
  1290  06A7  0CF4               	rrf	??_lcd_put_byte,f
  1291  06A8  3EFF               	addlw	-1
  1292  06A9  1D03               	skipz
  1293  06AA  2EA6               	goto	u435
  1294  06AB  0874               	movf	??_lcd_put_byte,w
  1295  06AC  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1296  06B1                     l1013:
  1297                           
  1298                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1299  06B1  0873               	movf	lcd_put_byte@b,w
  1300  06B2  390F               	andlw	15
  1301  06B3  120A  118A  26B9  120A  118A  	fcall	_lcd_put_nibble
  1302  06B8                     l60:
  1303  06B8  0008               	return
  1304  06B9                     __end_of_lcd_put_byte:
  1305                           
  1306                           	psect	text6
  1307  06B9                     __ptext6:	
  1308 ;; *************** function _lcd_put_nibble *****************
  1309 ;; Defined at:
  1310 ;;		line 103 in file "lcd.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  b               1    wreg     unsigned char 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  b               1    1[COMMON] unsigned char 
  1315 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         2       0       0       0       0
  1327 ;;      Temps:          1       0       0       0       0
  1328 ;;      Totals:         3       0       0       0       0
  1329 ;;Total ram usage:        3 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_lcd_put_byte
  1335 ;;		_lcd_init
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _lcd_put_nibble
  1341  06B9                     _lcd_put_nibble:
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _lcd_put_nibble: [wreg]
  1345                           ;lcd_put_nibble@b stored from wreg
  1346  06B9  00F1               	movwf	lcd_put_nibble@b
  1347  06BA                     l961:
  1348                           
  1349                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1350  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  1351  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  1352  06BC  1208               	bcf	8,4	;volatile
  1353                           
  1354                           ;lcd.c: 110:  TRISD5 = 0;
  1355  06BD  1288               	bcf	8,5	;volatile
  1356                           
  1357                           ;lcd.c: 111:  TRISD6 = 0;
  1358  06BE  1308               	bcf	8,6	;volatile
  1359                           
  1360                           ;lcd.c: 112:  TRISD7 = 0;
  1361  06BF  1388               	bcf	8,7	;volatile
  1362  06C0                     l963:
  1363                           
  1364                           ;lcd.c: 114:  temp.Val = b;
  1365  06C0  0871               	movf	lcd_put_nibble@b,w
  1366  06C1  00F0               	movwf	??_lcd_put_nibble
  1367  06C2  0870               	movf	??_lcd_put_nibble,w
  1368  06C3  00F2               	movwf	lcd_put_nibble@temp
  1369  06C4                     l965:
  1370                           
  1371                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1372  06C4  1872               	btfsc	lcd_put_nibble@temp,0
  1373  06C5  2EC7               	goto	u341
  1374  06C6  2ECB               	goto	u340
  1375  06C7                     u341:
  1376  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1377  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1378  06C9  1608               	bsf	8,4	;volatile
  1379  06CA  2ECE               	goto	u354
  1380  06CB                     u340:
  1381  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1382  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1383  06CD  1208               	bcf	8,4	;volatile
  1384  06CE                     u354:
  1385  06CE                     l967:
  1386                           
  1387                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1388  06CE  18F2               	btfsc	lcd_put_nibble@temp,1
  1389  06CF  2ED1               	goto	u361
  1390  06D0  2ED5               	goto	u360
  1391  06D1                     u361:
  1392  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1393  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1394  06D3  1688               	bsf	8,5	;volatile
  1395  06D4  2ED8               	goto	u374
  1396  06D5                     u360:
  1397  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1398  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1399  06D7  1288               	bcf	8,5	;volatile
  1400  06D8                     u374:
  1401  06D8                     l969:
  1402                           
  1403                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1404  06D8  1972               	btfsc	lcd_put_nibble@temp,2
  1405  06D9  2EDB               	goto	u381
  1406  06DA  2EDF               	goto	u380
  1407  06DB                     u381:
  1408  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1409  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1410  06DD  1708               	bsf	8,6	;volatile
  1411  06DE  2EE2               	goto	u394
  1412  06DF                     u380:
  1413  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1414  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1415  06E1  1308               	bcf	8,6	;volatile
  1416  06E2                     u394:
  1417  06E2                     l971:
  1418                           
  1419                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1420  06E2  19F2               	btfsc	lcd_put_nibble@temp,3
  1421  06E3  2EE5               	goto	u401
  1422  06E4  2EE9               	goto	u400
  1423  06E5                     u401:
  1424  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1425  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1426  06E7  1788               	bsf	8,7	;volatile
  1427  06E8  2EEC               	goto	u414
  1428  06E9                     u400:
  1429  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1430  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1431  06EB  1388               	bcf	8,7	;volatile
  1432  06EC                     u414:
  1433                           
  1434                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1435  06EC  3006               	movlw	6
  1436  06ED  00F0               	movwf	??_lcd_put_nibble
  1437  06EE                     u667:
  1438  06EE  0BF0               	decfsz	??_lcd_put_nibble,f
  1439  06EF  2EEE               	goto	u667
  1440  06F0  0000               	nop
  1441  06F1                     l973:
  1442                           
  1443                           ;lcd.c: 122:  RD3 = 1;
  1444  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1445  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1446  06F3  1588               	bsf	8,3	;volatile
  1447                           
  1448                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1449  06F4  3006               	movlw	6
  1450  06F5  00F0               	movwf	??_lcd_put_nibble
  1451  06F6                     u677:
  1452  06F6  0BF0               	decfsz	??_lcd_put_nibble,f
  1453  06F7  2EF6               	goto	u677
  1454  06F8  0000               	nop
  1455  06F9                     l975:
  1456                           
  1457                           ;lcd.c: 124:  RD3 = 0;
  1458  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1459  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1460  06FB  1188               	bcf	8,3	;volatile
  1461  06FC                     l55:
  1462  06FC  0008               	return
  1463  06FD                     __end_of_lcd_put_nibble:
  1464                           
  1465                           	psect	text7
  1466  061F                     __ptext7:	
  1467 ;; *************** function _lcd_busy *****************
  1468 ;; Defined at:
  1469 ;;		line 18 in file "lcd.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  busy            1    1[COMMON] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      unsigned char 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0
  1485 ;;      Temps:          1       0       0       0       0
  1486 ;;      Totals:         2       0       0       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_lcd_gotoxy
  1493 ;;		_lcd_putc
  1494 ;;		_lcd_init
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _lcd_busy
  1500  061F                     _lcd_busy:
  1501  061F                     l977:	
  1502                           ;incstack = 0
  1503                           ; Regs used in _lcd_busy: [wreg+status,2]
  1504                           
  1505                           
  1506                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1507  061F  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0620  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0621  1608               	bsf	8,4	;volatile
  1510                           
  1511                           ;lcd.c: 25:  TRISD5 = 1;
  1512  0622  1688               	bsf	8,5	;volatile
  1513                           
  1514                           ;lcd.c: 26:  TRISD6 = 1;
  1515  0623  1708               	bsf	8,6	;volatile
  1516                           
  1517                           ;lcd.c: 27:  TRISD7 = 1;
  1518  0624  1788               	bsf	8,7	;volatile
  1519                           
  1520                           ;lcd.c: 29:  RD2 = 1;
  1521  0625  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0626  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0627  1508               	bsf	8,2	;volatile
  1524                           
  1525                           ;lcd.c: 30:  RD1 = 0;
  1526  0628  1088               	bcf	8,1	;volatile
  1527  0629                     l979:
  1528                           
  1529                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1530  0629  3006               	movlw	6
  1531  062A  00F0               	movwf	??_lcd_busy
  1532  062B                     u687:
  1533  062B  0BF0               	decfsz	??_lcd_busy,f
  1534  062C  2E2B               	goto	u687
  1535  062D  0000               	nop
  1536  062E                     l981:
  1537                           
  1538                           ;lcd.c: 32:  RD3 = 1;
  1539  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1540  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0630  1588               	bsf	8,3	;volatile
  1542                           
  1543                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1544  0631  3006               	movlw	6
  1545  0632  00F0               	movwf	??_lcd_busy
  1546  0633                     u697:
  1547  0633  0BF0               	decfsz	??_lcd_busy,f
  1548  0634  2E33               	goto	u697
  1549  0635  0000               	nop
  1550  0636                     l983:
  1551                           
  1552                           ;lcd.c: 35:  busy = RD7;
  1553  0636  3000               	movlw	0
  1554  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0639  1B88               	btfsc	8,7	;volatile
  1557  063A  3001               	movlw	1
  1558  063B  00F1               	movwf	lcd_busy@busy
  1559  063C                     l985:
  1560                           
  1561                           ;lcd.c: 37:  RD3 = 0;
  1562  063C  1188               	bcf	8,3	;volatile
  1563  063D                     l987:
  1564                           
  1565                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1566  063D  3006               	movlw	6
  1567  063E  00F0               	movwf	??_lcd_busy
  1568  063F                     u707:
  1569  063F  0BF0               	decfsz	??_lcd_busy,f
  1570  0640  2E3F               	goto	u707
  1571  0641  0000               	nop
  1572  0642                     l989:
  1573                           
  1574                           ;lcd.c: 39:  RD3 = 1;
  1575  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0644  1588               	bsf	8,3	;volatile
  1578  0645                     l991:
  1579                           
  1580                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1581  0645  3006               	movlw	6
  1582  0646  00F0               	movwf	??_lcd_busy
  1583  0647                     u717:
  1584  0647  0BF0               	decfsz	??_lcd_busy,f
  1585  0648  2E47               	goto	u717
  1586  0649  0000               	nop
  1587  064A                     l993:
  1588                           
  1589                           ;lcd.c: 41:  RD3 = 0;
  1590  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1591  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1592  064C  1188               	bcf	8,3	;volatile
  1593  064D                     l995:
  1594                           
  1595                           ;lcd.c: 43:  return busy;
  1596  064D  0871               	movf	lcd_busy@busy,w
  1597  064E                     l47:
  1598  064E  0008               	return
  1599  064F                     __end_of_lcd_busy:
  1600  007E                     btemp	set	126	;btemp
  1601  007E                     wtemp0	set	126
  1602                           
  1603                           	psect	config
  1604                           
  1605                           ;Config register CONFIG1 @ 0x2007
  1606                           ;	Oscillator Selection bits
  1607                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1608                           ;	Watchdog Timer Enable bit
  1609                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1610                           ;	Power-up Timer Enable bit
  1611                           ;	PWRTE = OFF, PWRT disabled
  1612                           ;	RE3/MCLR pin function select bit
  1613                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1614                           ;	Code Protection bit
  1615                           ;	CP = OFF, Program memory code protection is disabled
  1616                           ;	Data Code Protection bit
  1617                           ;	CPD = OFF, Data memory code protection is disabled
  1618                           ;	Brown Out Reset Selection bits
  1619                           ;	BOREN = OFF, BOR disabled
  1620                           ;	Internal External Switchover bit
  1621                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1622                           ;	Fail-Safe Clock Monitor Enabled bit
  1623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1624                           ;	Low Voltage Programming Enable bit
  1625                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1626                           ;	In-Circuit Debugger Mode bit
  1627                           ;	DEBUG = 0x1, unprogrammed default
  1628  2007                     	org	8199
  1629  2007  20F2               	dw	8434
  1630                           
  1631                           ;Config register CONFIG2 @ 0x2008
  1632                           ;	Brown-out Reset Selection bit
  1633                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1634                           ;	Flash Program Memory Self Write Enable bits
  1635                           ;	WRT = OFF, Write protection off
  1636  2008                     	org	8200
  1637  2008  3FFF               	dw	16383

Data Sizes:
    Strings     59
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_2(CODE[25]), STR_1(CODE[34]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3291
                                              1 BANK0      3     3      0
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2220
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2109
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1105
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1071
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     937
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
     _lcd_put_nibble
   _lcd_puts
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
         _lcd_busy
         _lcd_put_byte
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 01 23:08:21 2021

                      pc 0002                       l11 064F                       l60 06B8  
                     l47 064E                       l55 06FC                       l58 0690  
                     l68 061E                       l92 05F8                       l86 0758  
 __end_of_lcd_put_nibble 06FD                       fsr 0004            ?_lcd_put_byte 0073  
                    l110 07FB                      l961 06BA                      l971 06E2  
                    l963 06C0                      l981 062E                      l973 06F1  
                    l965 06C4                      l991 0645                      l983 0636  
                    l975 06F9                      l967 06CE                      l993 064A  
                    l985 063C                      l977 061F                      l969 06D8  
                    l995 064D                      l987 063D                      l979 0629  
                    l989 0642                      l999 0681                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u400 06E9                      u401 06E5                      u340 06CB  
                    u420 068C                      u500 07C1                      u341 06C7  
                    u421 068B                      u501 07C0                      u414 06EC  
                    u510 07D5                      u511 07D4                      u360 06D5  
                    u520 07E7                      u440 05FF                      u361 06D1  
                    u521 07E6                      u441 05FE                      u354 06CE  
                    u530 07FB                      u450 061E                      u435 06A6  
                    u531 07FA                      u451 061D                      u380 06DF  
                    u460 0711                      u540 05F8                      u381 06DB  
                    u461 0710                      u541 05F7                      u374 06D8  
                    u470 072F                      u607 0766                      u471 072E  
                    u480 0744                      u617 077A                      u481 0743  
                    u394 06E2                      u490 07AD                      u707 063F  
                    u491 07AC                      u627 0789                      u717 0647  
                    u637 0798                      u647 0695                      u657 069D  
                    u667 06EE                      u587 0662                      u677 06F6  
                    u597 0676                      u687 062B                      u697 0633  
                    fsr0 0004                     l1001 0687                     l1011 06A3  
                   l1003 068C                     l1013 06B1                     l1005 0693  
                   l1021 0605                     l1101 0654                     l1007 0698  
                   l1023 0609                     l1015 05FA                     l1031 0707  
                   l1103 065A                     l1009 06A0                     l1025 0614  
                   l1017 05FF                     l1041 073A                     l1033 0712  
                   l1105 0668                     l1051 0762                     l1019 0604  
                   l1035 071B                     l1043 0745                     l1027 06FE  
                   l1107 066E                     l1061 0776                     l1053 076B  
                   l1037 0725                     l1029 06FF                     l1071 07AD  
                   l1063 0785                     l1055 076E                     l1039 0730  
                   l1081 07DD                     l1073 07B7                     l1065 078E  
                   l1057 076F                     l1049 0759                     l1083 07E7  
                   l1075 07C1                     l1067 079D                     l1059 0770  
                   l1091 05E6                     l1085 07F1                     l1077 07CB  
                   l1069 07A3                     l1093 05EC                     l1079 07D5  
                   l1159 074D                     l1087 05D9                     l1089 05DA  
                   l1099 064F                     STR_1 0009                     STR_2 002B  
                   _main 064F             lcd_busy@busy 0071                     btemp 007E  
                   start 0000          ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074  
                  ?_main 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0680  
          lcd_gotoxy@col 0078            lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072  
                 ??_main 0021                   _TRISD1 0441                   _TRISD2 0442  
                 _TRISD3 0443                   _TRISD4 0444                   _TRISD5 0445  
                 _TRISD6 0446                   _TRISD7 0447         __end_of_lcd_busy 064F  
       __end_of_lcd_init 07FC         __end_of_lcd_putc 0759         __end_of_lcd_puts 05F9  
          lcd_put_byte@b 0073  __end_of__initialization 07FC     __end_of_lcd_put_byte 06B9  
         __pcstackCOMMON 0070        lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070  
             __pmaintext 064F               _lcd_gotoxy 05F9                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003                  __ptext1 05D6                  __ptext2 06FD  
                __ptext3 05F9                  __ptext4 0759                  __ptext5 0680  
                __ptext6 06B9                  __ptext7 061F    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
           _lcd_put_byte 0680              ?_lcd_gotoxy 0076      start_initialization 07FC  
    __size_of_lcd_gotoxy 0026                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_busy 0030        __size_of_lcd_init 00A3        __size_of_lcd_putc 005C  
      __size_of_lcd_puts 0023                __pstrings 0003              __stringbase 0008  
__size_of_lcd_put_nibble 0044                lcd_putc@c 007C                lcd_puts@s 0020  
           ??_lcd_gotoxy 0077       __end_of_lcd_gotoxy 061F       __end_of__stringtab 0009  
               _lcd_busy 061F                 _lcd_init 0759                 _lcd_putc 06FD  
               _lcd_puts 05D6            __size_of_main 0031          lcd_put_nibble@b 0071  
              stringcode 0003           _lcd_put_nibble 06B9                 stringdir 0003  
               stringtab 0003  
